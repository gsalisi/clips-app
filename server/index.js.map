{
  "version": 3,
  "sources": ["../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/models/constants.server.ts", "../app/auth.server.ts", "../app/routes/auth.$provider.callback.tsx", "../app/routes/app.$projectId._index.tsx", "../app/models/project.server.ts", "../app/sqs.server.ts", "../app/s3.server.ts", "../app/components/ProjectPreview.tsx", "../app/components/Icons.tsx", "../app/components/FrameAnnotation.tsx", "../app/routes/s3.getobjecturl.tsx", "../app/routes/s3.putobjecturl.tsx", "../app/routes/app.$projectId.tsx", "../app/routes/auth.$provider.tsx", "../app/routes/privacy-policy.tsx", "../app/routes/s3.listobjects.tsx", "../app/routes/terms-of-use.tsx", "../app/routes/app.profile.tsx", "../app/routes/app._index.tsx", "../app/routes/app.login.tsx", "../app/utils.ts", "../app/routes/app.beta.tsx", "../app/routes/app.join.tsx", "../app/routes/app.new.tsx", "../app/routes/support.tsx", "../app/routes/_index.tsx", "../app/routes/logout.tsx", "../app/routes/app.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"/home/gsalisi/code/clips-app/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/auth.$provider.callback.tsx\";\nimport * as route2 from \"./routes/app.$projectId._index.tsx\";\nimport * as route3 from \"./routes/s3.getobjecturl.tsx\";\nimport * as route4 from \"./routes/s3.putobjecturl.tsx\";\nimport * as route5 from \"./routes/app.$projectId.tsx\";\nimport * as route6 from \"./routes/auth.$provider.tsx\";\nimport * as route7 from \"./routes/privacy-policy.tsx\";\nimport * as route8 from \"./routes/s3.listobjects.tsx\";\nimport * as route9 from \"./routes/terms-of-use.tsx\";\nimport * as route10 from \"./routes/app.profile.tsx\";\nimport * as route11 from \"./routes/app._index.tsx\";\nimport * as route12 from \"./routes/app.login.tsx\";\nimport * as route13 from \"./routes/app.beta.tsx\";\nimport * as route14 from \"./routes/app.join.tsx\";\nimport * as route15 from \"./routes/app.new.tsx\";\nimport * as route16 from \"./routes/support.tsx\";\nimport * as route17 from \"./routes/_index.tsx\";\nimport * as route18 from \"./routes/logout.tsx\";\nimport * as route19 from \"./routes/app.tsx\";\nimport * as route20 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/auth.$provider.callback\": {\n      id: \"routes/auth.$provider.callback\",\n      parentId: \"routes/auth.$provider\",\n      path: \"callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/app.$projectId._index\": {\n      id: \"routes/app.$projectId._index\",\n      parentId: \"routes/app.$projectId\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/s3.getobjecturl\": {\n      id: \"routes/s3.getobjecturl\",\n      parentId: \"root\",\n      path: \"s3/getobjecturl\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/s3.putobjecturl\": {\n      id: \"routes/s3.putobjecturl\",\n      parentId: \"root\",\n      path: \"s3/putobjecturl\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/app.$projectId\": {\n      id: \"routes/app.$projectId\",\n      parentId: \"routes/app\",\n      path: \":projectId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/auth.$provider\": {\n      id: \"routes/auth.$provider\",\n      parentId: \"root\",\n      path: \"auth/:provider\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/privacy-policy\": {\n      id: \"routes/privacy-policy\",\n      parentId: \"root\",\n      path: \"privacy-policy\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/s3.listobjects\": {\n      id: \"routes/s3.listobjects\",\n      parentId: \"root\",\n      path: \"s3/listobjects\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/terms-of-use\": {\n      id: \"routes/terms-of-use\",\n      parentId: \"root\",\n      path: \"terms-of-use\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/app.profile\": {\n      id: \"routes/app.profile\",\n      parentId: \"routes/app\",\n      path: \"profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/app._index\": {\n      id: \"routes/app._index\",\n      parentId: \"routes/app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/app.login\": {\n      id: \"routes/app.login\",\n      parentId: \"routes/app\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/app.beta\": {\n      id: \"routes/app.beta\",\n      parentId: \"routes/app\",\n      path: \"beta\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/app.join\": {\n      id: \"routes/app.join\",\n      parentId: \"routes/app\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/app.new\": {\n      id: \"routes/app.new\",\n      parentId: \"routes/app\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/support\": {\n      id: \"routes/support\",\n      parentId: \"root\",\n      path: \"support\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/app\": {\n      id: \"routes/app\",\n      parentId: \"root\",\n      path: \"app\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    }\n  };", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}", "import type { LinksFunction, LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"~/styles/tailwind.css\";\nimport { getUser } from \"~/session.server\";\n\nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n  // NOTE: Architect deploys the public directory to /_static/\n  { rel: \"icon\", href: \"/_static/favicon.ico\" },\n];\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  return json({ user: await getUser(request) });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"min-h-screen bg-gray-50 relative\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      {/* <!-- Google tag (gtag.js) --> */}\n      <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-5KMQGRZLT6\"></script>\n      <script dangerouslySetInnerHTML={{\n        __html: `\n          window.dataLayer = window.dataLayer || [];\n          function gtag(){dataLayer.push(arguments);}\n          gtag('js', new Date());\n\n          gtag('config', 'G-5KMQGRZLT6');\n        `,\n      }}/>\n      <body className=\"absolute top-0 bottom-0 w-full\">\n        <Outlet />\n        <ScrollRestoration getKey={(loc) => loc.pathname} />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>    \n  );\n}\n", "import { redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\nimport { authenticator, sessionStorage } from \"./auth.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\n// export const sessionStorage = createCookieSessionStorage({\n//   cookie: {\n//     name: \"__session\",\n//     httpOnly: true,\n//     path: \"/\",\n//     sameSite: \"lax\",\n//     secrets: [process.env.SESSION_SECRET],\n//     secure: process.env.NODE_ENV === \"production\",\n//   },\n// });\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const authUser = await authenticator.isAuthenticated(request);\n  // const session = await getSession(request);\n  // const userId = session.get(USER_SESSION_KEY);\n  return authUser?.userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  \n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/app/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  // session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 30 // 30 days\n          : 60 * 60 * 24 * 7, // 7 days\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\nimport getUuidByString from \"uuid-by-string\";\nimport { emailDomainsAllowlist } from \"./constants.server\";\n\nconst INITIAL_CREDITS_AMOUNT = 10\n\nexport type User = { \n  id: string; email: string;\n  picture: string;\n  provider: string;\n  providerID: string;\n  name: string; \n  credits: number;\n};\nexport type Password = { password: string };\n\n// DEPRECATED\nfunction checkAllowlist(email: string): boolean {\n  return emailDomainsAllowlist.has(email.split('@')[1])\n}\n\nexport async function getUserById(id: User[\"id\"]): Promise<Pick<User, \"id\" | \"email\" | \"credits\"> | null> {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) return { id: record.pk, email: record.email, credits: record.credits };\n  return null;\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return getUserById(getUuidByString(email));\n}\n\nasync function getUserPasswordByEmail(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": getUuidByString(email) },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nconst dePlussedEmail = (email: string): string => email.split('@')[0].split('+')[0] + '@' + email.split('@')[1];\n\nexport async function findOrCreate({\n  email,\n  picture,\n  provider,\n  providerID,\n  name,\n}: Pick<User, \"email\" | \"picture\" | \"provider\" | \"providerID\" | \"name\">) {\n  const cleanEmail = dePlussedEmail(email)\n  const user = await getUserByEmail(cleanEmail)\n  if (user) {\n    return user\n  }\n\n  const allowlisted = checkAllowlist(cleanEmail)\n  if(!allowlisted) {\n    throw Error(\"This email is not allowlisted.\")\n  }\n  \n  const userId = getUuidByString(cleanEmail)\n  const db = await arc.tables();\n  await db.user.put({\n    pk: userId,\n    email,\n    picture,\n    provider,\n    providerID,\n    name,\n    credits: INITIAL_CREDITS_AMOUNT,\n  });\n\n  const newUser = await getUserByEmail(cleanEmail);\n  invariant(newUser, `User not found after being created. This should not happen`);\n\n  return newUser;\n}\n\nexport async function createUser(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const cleanEmail = dePlussedEmail(email)\n\n  const allowlisted = checkAllowlist(cleanEmail)\n  if(!allowlisted) {\n    throw Error(\"This email is not allowlisted.\")\n  }\n\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const userId = getUuidByString(cleanEmail)\n  const db = await arc.tables();\n  await db.password.put({\n    pk: userId,\n    password: hashedPassword,\n  });\n\n  await db.user.put({\n    pk: userId,\n    email,\n    credits: 10,\n  });\n\n  const user = await getUserByEmail(cleanEmail);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const userId = getUuidByString(email)\n  await db.password.delete({ pk: userId });\n  await db.user.delete({ pk: userId });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const userPassword = await getUserPasswordByEmail(email);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByEmail(email);\n}\n\nexport async function checkCredits(\n  id: User[\"id\"]\n) {\n  const user = await getUserById(id)\n  if (!user) {\n    return 0\n  }\n  return user.credits\n}\n", "export const emailDomainsAllowlist: Set<string> = new Set([\n    'gmail.com',\n    'yahoo.com',\n    'hotmail.com',\n    'aol.com',\n    'hotmail.co.uk',\n    'hotmail.fr',\n    'msn.com',\n    'yahoo.fr',\n    'wanadoo.fr',\n    'orange.fr',\n    'comcast.net',\n    'yahoo.co.uk',\n    'yahoo.com.br',\n    'yahoo.co.in',\n    'live.com',\n    'rediffmail.com',\n    'free.fr',\n    'gmx.de',\n    'web.de',\n    'yandex.ru',\n    'ymail.com',\n    'libero.it',\n    'outlook.com',\n    'uol.com.br',\n    'bol.com.br',\n    'mail.ru',\n    'cox.net',\n    'hotmail.it',\n    'sbcglobal.net',\n    'sfr.fr',\n    'live.fr',\n    'verizon.net',\n    'live.co.uk',\n    'googlemail.com',\n    'yahoo.es',\n    'ig.com.br',\n    'live.nl',\n    'bigpond.com',\n    'terra.com.br',\n    'yahoo.it',\n    'neuf.fr',\n    'yahoo.de',\n    'alice.it',\n    'rocketmail.com',\n    'att.net',\n    'laposte.net',\n    'facebook.com',\n    'bellsouth.net',\n    'yahoo.in',\n    'hotmail.es',\n    'charter.net',\n    'yahoo.ca',\n    'yahoo.com.au',\n    'rambler.ru',\n    'hotmail.de',\n    'tiscali.it',\n    'shaw.ca',\n    'yahoo.co.jp',\n  ]);", "import { createCookieSessionStorage, json } from \"@remix-run/node\";\nimport { Authenticator } from \"remix-auth\";\nimport { FormStrategy } from \"remix-auth-form\";\nimport {\n  GoogleStrategy,\n  DiscordStrategy,\n  SocialsProvider,\n} from \"remix-auth-socials\";\nimport invariant from \"tiny-invariant\";\nimport { findOrCreate, verifyLogin } from \"./models/user.server\";\n\n\nexport interface AuthUser {\n  userId: string;\n  displayName?: string;\n  avatar?: string | null;\n  email?: string | null;\n  accessToken?: string;\n  refreshToken?: string;\n}\n\nexport const sessionStorage = createCookieSessionStorage({\n    cookie: {\n      name: \"__session\",\n      httpOnly: true,\n      path: \"/\",\n      sameSite: \"lax\",\n      secrets: [process.env.SESSION_SECRET || \"\"],\n      secure: process.env.NODE_ENV === \"production\",\n    },\n  });\n\nexport let authenticator = new Authenticator<AuthUser>(sessionStorage, {\n  sessionKey: \"__session\",\n});\n\n// You may specify a <User> type which the strategies will return (this will be stored in the session)\nconst getCallback = (provider: SocialsProvider) => {\n  const path = `auth/${provider}/callback`;\n  if (process.env.ARC_ENV === \"staging\") {\n    return `https://staging.popcrop.studio/${path}`;\n  } else if (process.env.ARC_ENV === \"production\") {\n    return `https://popcrop.studio/${path}`;\n  }\n  return `http://localhost:3000/${path}`;\n};\n\nconst GOOGLE_OAUTH_CLIENT_ID = process.env.GOOGLE_OAUTH_CLIENT_ID;\nconst GOOGLE_OAUTH_CLIENT_SECRET = process.env.GOOGLE_OAUTH_CLIENT_SECRET;\n\ninvariant(GOOGLE_OAUTH_CLIENT_ID, \"GOOGLE_OAUTH_CLIENT_ID not set.\");\ninvariant(GOOGLE_OAUTH_CLIENT_SECRET, \"GOOGLE_OAUTH_CLIENT_SECRET not set.\");\n\nconst googleStrategy = new GoogleStrategy(\n  {\n    clientID: GOOGLE_OAUTH_CLIENT_ID,\n    clientSecret: GOOGLE_OAUTH_CLIENT_SECRET,\n    callbackURL: getCallback(SocialsProvider.GOOGLE),\n  },\n  async ({ accessToken, refreshToken, extraParams, profile }) => {\n    // Get the user data from your DB or API using the tokens and profile\n    const user = await findOrCreate({\n      email: profile.emails[0].value,\n      picture: profile.photos[0].value,\n      provider: profile.provider,\n      providerID: profile.id,\n      name: profile.displayName,\n    });\n    console.log(`${user.id} authenticating using Google.`)\n    return {\n      userId: user.id,\n      accessToken: accessToken,\n      refreshToken: refreshToken,\n    };\n  }\n);\n\nauthenticator.use(googleStrategy, SocialsProvider.GOOGLE);\n\nconst DISCORD_OAUTH_CLIENT_ID = process.env.DISCORD_OAUTH_CLIENT_ID;\nconst DISCORD_OAUTH_CLIENT_SECRET = process.env.DISCORD_OAUTH_CLIENT_SECRET;\n\ninvariant(DISCORD_OAUTH_CLIENT_ID, \"DISCORD_OAUTH_CLIENT_ID not set.\");\ninvariant(DISCORD_OAUTH_CLIENT_SECRET, \"DISCORD_OAUTH_CLIENT_SECRET not set.\");\n\nconst discordStrategy = new DiscordStrategy(\n  {\n    clientID: DISCORD_OAUTH_CLIENT_ID.split(\":\")[1],\n    clientSecret: DISCORD_OAUTH_CLIENT_SECRET,\n    callbackURL: getCallback(SocialsProvider.DISCORD),\n    // Provide all the scopes you want as an array\n    scope: [\"identify\", \"email\"],\n  },\n  async ({\n    accessToken,\n    refreshToken,\n    profile,\n  }): Promise<AuthUser> => {\n    const email = profile.__json.email;\n    const picture = profile.__json.avatar;\n\n    if (!email) {\n      throw Error(\"No email found with discord.\")\n    }\n    \n    // Get the user data from your DB or API using the tokens and profile\n    const user = await findOrCreate({\n      email: email,\n      picture: picture || \"\",\n      provider: profile.provider,\n      providerID: profile.id,\n      name: profile.displayName,\n    });\n    \n    console.log(`${user.id} authenticating using Discord.`)\n\n    return {\n      userId: user.id,\n      displayName: profile.displayName,\n      avatar: picture,\n      email: email,\n      accessToken,\n      refreshToken\n    };\n  },\n);\n\nauthenticator.use(discordStrategy, SocialsProvider.DISCORD);\n\n// User and password strategy\nauthenticator.use(\n  new FormStrategy(async ({ context }) => {\n    invariant(context, \"authenticate form strategy did not receive context\")\n    const formData = context.formData as FormData;\n    let email = formData.get(\"email\");\n    let password = formData.get(\"password\");\n\n    invariant(typeof email === \"string\", \"email must be a string\");\n    invariant(typeof password === \"string\", \"password must be a string\");\n\n    console.log(`${email} verifying using user and password.`)\n    let user = await verifyLogin(email, password);\n    \n    if (!user) {\n        throw json(\n            { errors: { email: null, password: \"User or password is incorrect.\" } },\n            { status: 400 }\n        );\n    }\n    console.log(`${email} ${user.id} verified using user and password.`)\n    return {\n      userId: user.id,\n    };\n  }),\n  \"user-pass\"\n);", "import { LoaderArgs } from '@remix-run/node'\nimport { SocialsProvider } from 'remix-auth-socials'\nimport { authenticator } from '~/auth.server'\n\nexport let loader = ({ request, params }: LoaderArgs) => {\n  return authenticator.authenticate(params?.provider!, request, {\n    successRedirect: '/app',\n    failureRedirect: '/app/login?error=true',\n  })\n}", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport ReactS3Uploader from \"react-s3-uploader\";\nimport {\n  Form,\n  Link,\n  useFetcher,\n  useLoaderData,\n  useLocation,\n  useRevalidator,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { requireUserId } from \"~/session.server\";\nimport invariant from \"tiny-invariant\";\nimport type { CropTrackerOpts, TrackHint } from \"~/models/project.server\";\nimport {\n  addProjectTrackHints,\n  getProject,\n  ProjectState,\n  updateCropTrackerOptsProject,\n  updateProject,\n  updateProjectState,\n} from \"~/models/project.server\";\nimport { getS3KeyFileName, sendSqsMessage } from \"~/sqs.server\";\nimport type { CropperSQSPayload } from \"~/sqs.server\";\nimport classNames from \"classnames\";\nimport { signGetObjectUrl } from \"~/s3.server\";\nimport ProjectPreview from \"~/components/ProjectPreview\";\nimport FrameAnnotation from \"~/components/FrameAnnotation\";\nimport { add, differenceInSeconds, formatDistance } from \"date-fns\";\nimport { checkCredits } from \"~/models/user.server\";\n\nenum ProjectFormAction {\n  uploadFile,\n  addTrackHint,\n  sendProcessRequest,\n}\n\nconst FRAMING_OPTION_BODY_ONLY = \"body-only\";\nconst FRAMING_OPTION_INCLUDE_HANDS_AND_FEET = \"include-hands-and-feet\"\n\nconst NO_CREDITS_ERROR_CODE = \"no_credits\"\nconst errorCodeToMessage = {\n  [NO_CREDITS_ERROR_CODE]: \"\uD83D\uDE30 Sorry, you have no more credits left.\"\n}\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop\" }];\n\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.projectId, \"projectId not found\");\n\n  const project = await getProject({ id: params.projectId, userId });\n  if (!project) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  // console.log(\"loading project page\");\n  // console.log(project);\n  let inputSignedUrl = \"\",\n    outputSignedUrl = \"\";\n  if (project.inputFile) {\n    const resp = await signGetObjectUrl({\n      userId,\n      bucket: project.inputFile.bucket,\n      key: project.inputFile.key,\n    });\n    if (!resp.ok) {\n      throw json({ error: \"Failed to sign object url\" }, { status: 400 });\n    }\n    const body = await resp.json();\n    inputSignedUrl = body.signedUrl;\n  }\n  if (project.outputFile) {\n    try {\n      const resp = await signGetObjectUrl({\n        userId,\n        bucket: project.outputFile.bucket,\n        key: project.outputFile.key,\n      });\n      const body = await resp.json();\n      outputSignedUrl = body.signedUrl;\n\n      if (project.state === ProjectState.Processing) {\n        // TODO: Technically this is a side-effect;\n        // but this is good for now while i work on adding this to the clips-core\n        await updateProjectState({\n          id: params.projectId,\n          userId,\n          state: ProjectState.Completed,\n        });\n      }\n    } catch (e) {\n      console.warn(`Output key ${project.outputFile.key} does not exist.`);\n    }\n  }\n  return json({ project, inputSignedUrl, outputSignedUrl });\n};\n\nexport const action = async ({ params, request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.projectId, \"projectId not found\");\n\n  const formData = await request.formData();\n  const projectAction = formData.get(\"action\");\n  if (typeof projectAction !== \"string\" || !action) {\n    return json(\n      { errors: { body: null, title: \"action is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const credits = await checkCredits(userId);\n  if (credits <= 0)  {\n    console.log(`No more credits for ${userId}.`)\n    return redirect(`?error=${NO_CREDITS_ERROR_CODE}`)\n  }\n\n  console.log(\"===== PROJECT ACTION =====\");\n\n  if (parseInt(projectAction) === ProjectFormAction.uploadFile) {\n    console.log(\"====> Updating with file info...\");\n    const key = formData.get(\"key\");\n    const bucket = formData.get(\"bucket\");\n    if (typeof key !== \"string\" || key.length === 0) {\n      return json(\n        { errors: { body: null, title: \"key is required\" } },\n        { status: 400 }\n      );\n    }\n    if (typeof bucket !== \"string\" || bucket.length === 0) {\n      return json(\n        { errors: { body: null, title: \"bucket is required\" } },\n        { status: 400 }\n      );\n    }\n    const outputKey = `tmp/${userId}/${params.projectId}/out/${getS3KeyFileName(\n      key\n    )}.mp4`;\n\n    await updateProject({\n      id: params.projectId,\n      userId,\n      inputFile: {\n        bucket,\n        key,\n      },\n      outputFile: {\n        bucket,\n        key: outputKey,\n      },\n    });\n    await updateProjectState({\n      id: params.projectId,\n      userId,\n      state: ProjectState.Ready,\n    });\n  } else if (parseInt(projectAction) === ProjectFormAction.addTrackHint) {\n    console.log(\"====> Adding track hint...\");\n    const trackHintStr = formData.get(\"trackHint\");\n    if (typeof trackHintStr !== \"string\" || trackHintStr.length === 0) {\n      return json(\n        { errors: { body: null, title: \"trackHint is required\" } },\n        { status: 400 }\n      );\n    }\n\n    const trackHint: TrackHint = JSON.parse(trackHintStr);\n    console.log(trackHint);\n    await addProjectTrackHints(\n      {\n        id: params.projectId,\n        userId,\n      },\n      trackHint\n    );\n  } else if (parseInt(projectAction) === ProjectFormAction.sendProcessRequest) {\n    console.log(\"====> Sending request to SQS...\");\n    const cropTrackerOptsStr = formData.get(\"cropTrackerOpts\");\n    if (typeof cropTrackerOptsStr !== \"string\" || cropTrackerOptsStr.length === 0) {\n      return json(\n        { errors: { body: null, title: \"croptTrackerOpts is required\" } },\n        { status: 400 }\n      );\n    }\n    const cropTrackerOpts: CropTrackerOpts = JSON.parse(cropTrackerOptsStr);\n\n    const updatedProject = await updateCropTrackerOptsProject({\n      id: params.projectId,\n      userId,\n      cropTrackerOpts,\n    });\n\n    if (!updatedProject.inputFile || !updatedProject.outputFile) {\n      throw new Response(\"Missing inputFile and outputFile fields in project\", {\n        status: 400,\n      });\n    }\n    if (!updatedProject.cropTrackerOpts) {\n      throw new Response(\"Missing effectMetadata field in project\", {\n        status: 400,\n      });\n    }\n\n    const response = await sendSqsMessage({\n      type: \"crop\",\n      env: process.env.ARC_ENV as CropperSQSPayload[\"env\"],\n      user_id: updatedProject.userId,\n      project_id: updatedProject.id,\n      input_key: updatedProject.inputFile.key,\n      output_key: updatedProject.outputFile.key,\n      bucket: updatedProject.inputFile.bucket,\n      output_width: updatedProject.size.width,\n      output_height: updatedProject.size.height,\n      exclude_limbs: updatedProject.cropTrackerOpts.excludeLimbs,\n      padding_ratio: updatedProject.cropTrackerOpts.paddingRatio,\n      smoothing_window_secs: updatedProject.cropTrackerOpts.smoothingWindowSecs,\n      track_hints: updatedProject.cropTrackerOpts.trackHints,\n    });\n\n    console.log(\"SQS Response:\");\n    console.log(response);\n\n    await updateProjectState({\n      id: params.projectId,\n      userId,\n      state: ProjectState.Processing,\n    });\n  }\n\n  return redirect(`?`);\n};\n\nenum UploadState {\n  Idle,\n  Uploading,\n  Complete,\n  Error,\n}\n\nexport default function ProjectPage() {\n  const data = useLoaderData<typeof loader>();\n  const uploadedObjUrlFetcher = useFetcher();\n  const location = useLocation();\n  const submit = useSubmit();\n  const [uploadState, setUploadState] = useState<UploadState>(\n    data.project.inputFile ? UploadState.Complete : UploadState.Idle\n  );\n  const [uploadPercent, setUploadPercent] = useState<number>(0);\n  const [estCompleteDate, setEstCompleteDate] = useState<Date>();\n  const [proccesProgress, setProcessProgress] = useState(0);\n  const [showFrameAnnotation, setShowFrameAnnotation] =\n    useState<boolean>(false);\n  const [hasAddedFocus, setHasAddedFocus] = useState<boolean>(false);\n  const [readyToProcess, setReadyToProcess] = useState<boolean>(false);\n  const [numOfPersonSelectValue, setNumOfPersonSelectValue] =\n    useState<string>(\"\");\n  const [videoRef, setVideoRef] = useState<HTMLVideoElement | null>();\n  const revalidator = useRevalidator();\n  const [cropTrackerOpts, setCropTrackerOpts] = useState<CropTrackerOpts>({\n    excludeLimbs: false,\n    paddingRatio: 1.2,\n    smoothingWindowSecs: 2,\n  });\n  const inputSignedUrl =\n    (uploadedObjUrlFetcher.data && uploadedObjUrlFetcher.data.signedUrl) ||\n    data.inputSignedUrl;\n\n  const params = new URLSearchParams(location.search);\n  const errorCode = params.get(\"error\") as keyof typeof errorCodeToMessage;\n\n  useEffect(() => {\n    if (data.project.cropTrackerOpts?.trackHints) {\n      setNumOfPersonSelectValue(\"multi\");\n      setReadyToProcess(true);\n      setHasAddedFocus(true);\n    } else if (data.project.inputFile && data.project.state >= 2) {\n      setNumOfPersonSelectValue(\"single\");\n      setReadyToProcess(true);\n    }\n  }, [data.project.cropTrackerOpts]);\n\n  const onVideoRefSet = useCallback((ref: HTMLVideoElement | null) => {\n    setVideoRef(ref);\n  }, []);\n\n  const onUploadStart = (file: File, next: (f: File) => void) => {\n    setUploadState(UploadState.Uploading);\n    setUploadPercent(0);\n    next(file);\n  };\n\n  const onUploadProgress = (percent: number, status: string, file: File) => {\n    setUploadPercent(percent);\n  };\n\n  const onUploadFinish = (res: any, file: any) => {\n    // console.log(res, file);\n    const params = new URLSearchParams({\n      key: res.key,\n      bucket: res.bucket,\n    });\n    uploadedObjUrlFetcher.data = undefined;\n    uploadedObjUrlFetcher.load(`/s3/getobjecturl?${params.toString()}`);\n    // if (inputComp) {\n    //   inputComp.disabled = true;\n    // }\n    // setInputFile({\n    //   key: res.key,\n    //   bucket: res.bucket,\n    // });\n    const formData = new FormData();\n    formData.append(\"action\", ProjectFormAction.uploadFile.toString());\n    formData.append(\"key\", res.key);\n    formData.append(\"bucket\", res.bucket);\n    submit(formData, {\n      method: \"post\",\n    });\n    setUploadState(UploadState.Complete);\n    setUploadPercent(0);\n  };\n\n  const onUploadError = (message: string) => {\n    setUploadState(UploadState.Error);\n  };\n\n  const selectNumPerson: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setNumOfPersonSelectValue(e.target.value);\n    setShowFrameAnnotation(e.target.value === \"multi\");\n    if (e.target.value === \"single\") {\n      setReadyToProcess(true);\n    }\n    if (e.target.value === \"multi\" && !hasAddedFocus) {\n      setReadyToProcess(false);\n      videoRef?.pause();\n    }\n  };\n\n  const addFocus = (trackHint: TrackHint) => {\n    if (!trackHint) {\n      console.error(\"Current selection or video time.\");\n      return;\n    }\n    console.log(trackHint);\n    const formData = new FormData();\n    formData.append(\"action\", ProjectFormAction.addTrackHint.toString());\n    formData.append(\"trackHint\", JSON.stringify(trackHint));\n    submit(formData, {\n      method: \"post\",\n    });\n    setHasAddedFocus(true);\n    setReadyToProcess(true);\n  };\n\n  const sendProcessRequest = () => {\n    setProcessProgress(1);\n    const formData = new FormData();\n    formData.append(\"cropTrackerOpts\", JSON.stringify(cropTrackerOpts));\n    formData.append(\"action\", ProjectFormAction.sendProcessRequest.toString());\n    submit(formData, {\n      method: \"post\",\n    });\n\n    if (videoRef) {\n      // TODO: should populate this upon upload\n      const estimatedTimeToCompleteSecs = videoRef.duration * 10;\n      const lastModifiedDate = new Date(data.project.lastModifiedAt * 1000);\n      const estDate = add(lastModifiedDate, {\n        seconds: estimatedTimeToCompleteSecs,\n      });\n      setEstCompleteDate(estDate);\n    }\n\n    window.scrollTo({ top: 0 });\n    revalidator.revalidate();\n  };\n\n  const onFramingOptionsChange: React.ChangeEventHandler<HTMLSelectElement> = (event) => {\n    setCropTrackerOpts({\n      ...cropTrackerOpts,\n      excludeLimbs: event.target.value === FRAMING_OPTION_BODY_ONLY\n    })\n  }\n\n  // useEffect(() => {\n  //   if (estCompleteDate) {\n  //     const interval = setInterval(() => {\n  //       const lastModifiedDate = new Date(data.project.lastModifiedAt * 1000);\n  //       const currDate = new Date()\n  //       const percent = differenceInSeconds(estCompleteDate, currDate) / differenceInSeconds(estCompleteDate, lastModifiedDate)\n  //       console.log(percent)\n  //       setProcessProgress(percent)\n  //     }, 1000)\n  //     return () => clearInterval(interval)\n  //   }\n  // }, [estCompleteDate])\n\n  return (\n    <div className=\"prose flex h-full w-full max-w-xl flex-col items-center p-2\">\n      <div className=\"w-full max-w-lg\">\n        {errorCode &&\n          <div className=\"mb-6 rounded-md border-2 border-red-600/10 bg-red-500/10\">\n            <p className=\"m-4\">{errorCodeToMessage[errorCode]}</p>\n          </div>\n        }\n        <div className=\"flex items-end\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth={1.5}\n            stroke=\"currentColor\"\n            className=\"mr-1.5 h-5 w-5\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              d=\"M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z\"\n            />\n          </svg>\n          <h3 className=\"my-0 font-bold leading-none mb-0.5\">\n            {data.project.title}\n          </h3>\n        </div>\n        <div className=\"divider\"></div>\n        {data.project.state === 0 && (\n          <>\n            <h3 id=\"idle\" className=\"mt-0\">\n              \uD83D\uDCE4 Upload your video file here\n            </h3>\n            <label className=\"label\">\n              <span className=\"label-text\">{\"Accepts video files < 5GB\"}</span>\n            </label>\n            <ReactS3Uploader\n              className=\"file-input w-full max-w-lg\"\n              signingUrl=\"/s3/putobjecturl\"\n              signingUrlMethod=\"GET\"\n              s3path={`${data.project.id}`}\n              preprocess={onUploadStart}\n              // onSignedUrl={onSignedUrl}\n              onProgress={onUploadProgress}\n              onError={onUploadError}\n              onFinish={onUploadFinish}\n              // signingUrlHeaders={{ additional: headers }}\n              // signingUrlQueryParams={{ additional: query-params }}\n              signingUrlWithCredentials={true} // in case when need to pass authentication credentials via CORS\n              uploadRequestHeaders={{ \"x-amz-acl\": \"private\" }}\n              contentDisposition=\"auto\"\n              scrubFilename={(filename: string) =>\n                filename.replace(/[^\\w\\d_\\-.]+/gi, \"\")\n              }\n              // inputRef={(cmp) => setInputComp(cmp)}\n              autoUpload={true}\n              disabled={uploadState !== UploadState.Idle}\n              multiple\n            />\n            {uploadState === UploadState.Uploading && (\n              <label className=\"label\">\n                Please stay on this page until the file is uploaded...\n              </label>\n            )}\n            <progress\n              className=\"progress progress-success w-full\"\n              value={uploadPercent}\n              max=\"100\"\n              hidden={uploadState !== UploadState.Uploading}\n            ></progress>\n            {uploadState === UploadState.Complete && (\n              <label className=\"label\">Please wait for the next steps...</label>\n            )}\n            {uploadState === UploadState.Uploading && (\n              <label className=\"label\">\n                Files are only stored in our servers for 24 hours.\n              </label>\n            )}\n            <div className=\"divider\"></div>\n          </>\n        )}\n        {data.project.state === 1 && (\n          <>\n            <h3 id=\"ready\" className=\"mt-0\">\n              \uD83D\uDC81\u200D\u2642\uFE0F Select processing options\n            </h3>\n            {data.project.state >= 1 && (\n              <div className=\"w-full\">\n                {inputSignedUrl && (\n                  <>\n                    <div className=\"flex-row justify-between py-2\">\n                      <label className=\"label\">\n                        <span className=\"label-txt\">\n                          How many people are visible in the video?\n                        </span>\n                      </label>\n                      <select\n                        className=\"max-w-s select-bordered select-secondary select select-lg w-full\"\n                        name=\"numOfPerson\"\n                        value={numOfPersonSelectValue}\n                        onChange={selectNumPerson}\n                        disabled={data.project.state >= 2}\n                      >\n                        <option value=\"\" disabled>\n                          Select answer...\n                        </option>\n                        <option value=\"single\">Just one.</option>\n                        <option value=\"multi\">More than one...</option>\n                      </select>\n                      {/* <label className=\"label cursor-pointer justify-start space-x-1\">\n                        <span className=\"label-text\">\n                          Are there multiple people in the video?\n                        </span>\n                        <input\n                          type=\"checkbox\"\n                          className=\"checkbox-primary checkbox\"\n                          checked={showFrameAnnotation}\n                          onChange={toggleSelector}\n                          disabled={data.project.state >= 2}\n                        />\n                      </label> */}\n                    </div>\n                    {numOfPersonSelectValue && (\n                      <>\n                        <label className=\"label\">\n                          <span className=\"label-text\">Preview</span>\n                        </label>\n                        <div className=\"my-1 flex flex-col\">\n                          <video\n                            ref={onVideoRefSet}\n                            className=\"m-0 max-w-full\"\n                            controls\n                            preload=\"auto\"\n                          >\n                            <source src={inputSignedUrl} />\n                          </video>\n                        </div>\n                      </>\n                    )}\n                    {numOfPersonSelectValue === \"multi\" && videoRef && (\n                      <FrameAnnotation\n                        video={videoRef}\n                        addFocus={addFocus}\n                        existingTrackHints={\n                          data.project.cropTrackerOpts?.trackHints\n                        }\n                      ></FrameAnnotation>\n                    )}\n                    {numOfPersonSelectValue && \n                      <div className=\"flex-row justify-between py-2\">\n                        <label className=\"label\">\n                          <span className=\"label-txt\">\n                            Other framing options:\n                          </span>\n                        </label>\n                        <select\n                          className=\"max-w-s select-bordered select w-full\"\n                          name=\"excludeLimbs\"\n                          value={cropTrackerOpts.excludeLimbs ? FRAMING_OPTION_BODY_ONLY : FRAMING_OPTION_INCLUDE_HANDS_AND_FEET}\n                          onChange={onFramingOptionsChange}\n                          disabled={data.project.state >= 2}\n                        >\n                          <option value={FRAMING_OPTION_BODY_ONLY}>Body only</option>\n                          <option value={FRAMING_OPTION_INCLUDE_HANDS_AND_FEET}>Include hands and feet</option>\n                        </select>\n                        {/* <label className=\"label cursor-pointer justify-start space-x-1\">\n                          <span className=\"label-text\">\n                            Are there multiple people in the video?\n                          </span>\n                          <input\n                            type=\"checkbox\"\n                            className=\"checkbox-primary checkbox\"\n                            checked={showFrameAnnotation}\n                            onChange={toggleSelector}\n                            disabled={data.project.state >= 2}\n                          />\n                        </label> */}\n                      </div>\n                    }\n                    <button\n                      className={classNames(\"btn-primary btn my-4 w-full\", {\n                        loading: proccesProgress > 0,\n                      })}\n                      disabled={!readyToProcess}\n                      onClick={sendProcessRequest}\n                    >\n                      {\"\uD83D\uDE80 Submit Video\"}\n                    </button>\n                  </>\n                )}\n              </div>\n            )}\n            <div className=\"divider\"></div>\n          </>\n        )}\n        {data.project.state >= 2 && (\n          <>\n            <ProjectPreview project={data.project} revalidator={revalidator} />\n            <div className=\"divider\"></div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nimport type { User } from \"./user.server\";\n\nexport type Size = {\n  width: number\n  height: number\n}\n\nexport type S3Location = {\n  bucket: string\n  key: string\n}\n\nexport type TrackHint = {\n  timeSecs: number\n  normLtwh: [number, number, number, number]\n}\n\nexport type CropTrackerOpts = {\n  excludeLimbs: boolean,\n  paddingRatio: number,\n  smoothingWindowSecs: number,\n  trackHints?: TrackHint[],\n}\n\nexport enum ProjectState {\n  Created,\n  Ready,\n  Processing,\n  Completed,\n  Error,\n}\n\nexport type Project = {\n  id: ReturnType<typeof cuid>;\n  userId: User[\"id\"];\n  title: string;\n  size: Size;\n  state: ProjectState,\n  createdAt: number,\n  expiredAt: number,\n  lastModifiedAt: number,\n  inputFile?: S3Location,\n  outputFile?: S3Location,\n  cropTrackerOpts?: CropTrackerOpts,\n};\n\ntype ProjectItem = {\n  pk: User[\"id\"];\n  sk: `project#${Project[\"id\"]}`;\n};\n\nconst skToId = (sk: ProjectItem[\"sk\"]): Project[\"id\"] => sk.replace(/^project#/, \"\");\nconst idToSk = (id: Project[\"id\"]): ProjectItem[\"sk\"] => `project#${id}`;\n\nconst SECONDS_IN_AN_HOUR = 60 * 60;\n\nexport async function getProject({\n  id,\n  userId,\n}: Pick<Project, \"id\" | \"userId\">): Promise<Project | null> {\n  const db = await arc.tables();\n\n  const result = await db.project.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: skToId(result.sk),\n      title: result.title,\n      size: result.size,\n      state: result.state,\n      expiredAt: result.expiredAt,\n      createdAt: result.createdAt,\n      lastModifiedAt: result.lastModifiedAt,\n      inputFile: result.inputFile,\n      outputFile: result.outputFile,\n      cropTrackerOpts: result.cropTrackerOpts,\n    };\n  }\n  return null;\n}\n\nexport async function getProjectListItems({\n  userId,\n}: Pick<Project, \"userId\">): Promise<Array<Pick<Project, \"id\" | \"title\" | \"state\" | \"createdAt\" | \"lastModifiedAt\" | \"expiredAt\">>> {\n  const db = await arc.tables();\n\n  const result = await db.project.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  const items = result.Items.map((n: any) => ({\n    title: n.title,\n    state: n.state,\n    id: skToId(n.sk),\n    createdAt: n.createdAt,\n    lastModifiedAt: n.lastModifiedAt,\n    expiredAt: n.expiredAt,\n  }));\n  items.sort((p1, p2) => (p2.lastModifiedAt || 0) - (p1.lastModifiedAt || 0))\n  return items\n}\n\nexport async function createProject({\n  size,\n  title,\n  userId,\n}: Pick<Project, \"size\" | \"title\" | \"userId\">): Promise<Project> {\n  const db = await arc.tables();\n  \n  const creationTime = Math.round(Date.now() / 1000);\n  const expirationTime = creationTime + (48 * SECONDS_IN_AN_HOUR);\n  \n  const result = await db.project.put({\n    pk: userId,\n    sk: idToSk(cuid()),\n    title: title,\n    size: size,\n    state: ProjectState.Created,\n    expiredAt: expirationTime,\n    createdAt: creationTime,\n    lastModifiedAt: creationTime,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    expiredAt: result.expiredAt,\n    createdAt: result.createdAt,\n    lastModifiedAt: result.lastModifiedAt,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\nexport async function updateProject({\n  id,\n  userId,\n  inputFile,\n  outputFile,\n}: Pick<Project, \"id\" | \"userId\" | \"inputFile\" | \"outputFile\">): Promise<Project> {\n  const db = await arc.tables();\n  const existingProj = await db.project.get({ pk: userId, sk: idToSk(id) });\n  \n  if (!existingProj) {\n    throw Error(`Project ${id} does not exist.`)\n  }\n  const updateTime = Math.round(Date.now() / 1000);\n  const result = await db.project.put({\n    ...existingProj,\n    inputFile: inputFile ?? existingProj.inputFile,\n    outputFile: outputFile ?? existingProj.outputFile,\n    cropTrackerOpts: existingProj.cropTrackerOpts,\n    lastModifiedAt: updateTime,\n  });\n  \n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    expiredAt: result.expiredAt,\n    createdAt: result.createdAt,\n    lastModifiedAt: result.lastModifiedAt,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\nexport async function updateCropTrackerOptsProject({\n  id,\n  userId,\n  cropTrackerOpts,\n}: Pick<Project, \"id\" | \"userId\" | \"cropTrackerOpts\">): Promise<Project> {\n  const db = await arc.tables();\n  const existingProj = await db.project.get({ pk: userId, sk: idToSk(id) });\n  \n  if (!existingProj) {\n    throw Error(`Project ${id} does not exist.`)\n  }\n  const updateTime = Math.round(Date.now() / 1000);\n  const result = await db.project.put({\n    ...existingProj,\n    cropTrackerOpts: {\n      ...existingProj.cropTrackerOpts,\n      ...cropTrackerOpts,\n    },\n    lastModifiedAt: updateTime,\n  });\n  \n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    expiredAt: result.expiredAt,\n    createdAt: result.createdAt,\n    lastModifiedAt: result.lastModifiedAt,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\n\nexport async function addProjectTrackHints({\n  id,\n  userId,\n}: Pick<Project, \"id\" | \"userId\">, trackHint: TrackHint): Promise<Project> {\n  const db = await arc.tables();\n  const existingProj = await db.project.get({ pk: userId, sk: idToSk(id) });\n  \n  if (!existingProj) {\n    throw Error(`Project ${id} does not exist.`)\n  }\n\n  const updatedProject = Object.assign({}, existingProj)\n  if (!updatedProject.cropTrackerOpts) {\n    updatedProject.cropTrackerOpts = {}\n  } \n  if (updatedProject.cropTrackerOpts.trackHints) {\n    updatedProject.cropTrackerOpts.trackHints.push(trackHint)\n  } else {\n    updatedProject.cropTrackerOpts.trackHints = [trackHint]\n  }\n  const updateTime = Math.round(Date.now() / 1000);\n  updatedProject.lastModifiedAt = updateTime\n  const result = await db.project.put(updatedProject);\n  \n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    expiredAt: result.expiredAt,\n    createdAt: result.createdAt,\n    lastModifiedAt: result.lastModifiedAt,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\nexport async function updateProjectState({\n  id,\n  userId,\n  state,\n}: Pick<Project, \"id\" | \"userId\" | \"state\">): Promise<Project> {\n  const db = await arc.tables();\n  const existingProj = await db.project.get({ pk: userId, sk: idToSk(id) });\n  \n  if (!existingProj) {\n    throw Error(`Project ${id} does not exist.`)\n  }\n\n  const updatedProject = Object.assign({}, existingProj)\n  updatedProject.state = state\n  updatedProject.lastModifiedAt = Math.round(Date.now() / 1000);\n  const result = await db.project.put(updatedProject);\n  \n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    expiredAt: result.expiredAt,\n    createdAt: result.createdAt,\n    lastModifiedAt: result.lastModifiedAt,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\n\nexport async function deleteProject({ id, userId }: Pick<Project, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.project.delete({ pk: userId, sk: idToSk(id) });\n}\n", "import AWS, { SQS } from \"aws-sdk\";\nimport { bool } from \"aws-sdk/clients/signer\";\nimport cuid from \"cuid\";\nimport path from \"node:path\";\nimport { TrackHint } from \"./models/project.server\";\n\n// This is in camel-case because this is consumed in the python code\nexport type CropperSQSPayload = {\n  type: \"crop\";\n  env: \"testing\" | \"staging\" | \"production\";\n  project_id: string;\n  user_id: string;\n  bucket: string;\n  input_key: string;\n  output_key: string;\n  output_width: number;\n  output_height: number;\n  padding_ratio: number;\n  smoothing_window_secs: number;\n  exclude_limbs: bool;\n  track_hints?: TrackHint[];\n};\n\n// type TrackerSQSPayload = {\n//     type: \"track\";\n//     bucket: string;\n//     input_key: string;\n//     track_dest: string;\n//     track_preview_dir: string;\n// };\n\nconst QUEUE_URL = \"https://sqs.us-west-2.amazonaws.com/872511653058/cropper_queue-4f01062\"\n\n// TODO: Use explicit dedupe id for project ?\nexport const sendSqsMessage = async (\n  payload: CropperSQSPayload\n): Promise<SQS.SendMessageResult> => {\n  // for (let [key, value] of Object.entries(payload)) {\n  //   if (key !== \"trackHints\" && !value) {\n  //     throw Error(`All parameters required. ${value} does not exist.`);\n  //   }\n  // }\n  const body = JSON.stringify(payload)\n  console.log(body)\n  const params = {\n    MessageAttributes: {\n      Action: {\n        DataType: \"String\",\n        StringValue: payload.type,\n      },\n    },\n    MessageBody: body,\n    // MessageDeduplicationId: cuid(), // Required for FIFO queues\n    // MessageGroupId: \"Group1\", // Required for FIFO queues\n    QueueUrl: QUEUE_URL,\n  };\n  const sqs = new AWS.SQS({ apiVersion: \"2012-11-05\" });\n  return new Promise(\n    (resolve, reject) => {\n      sqs.sendMessage(params, function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    }\n  );\n};\n\nexport const getS3KeyFileName = (key: string): string => {\n  return path.parse(key).name;\n};\n\nexport const getS3KeyExt = (key: string): string => {\n  return path.parse(key).ext;\n};\n", "import { json } from \"@remix-run/node\";\nimport AWS from \"aws-sdk\";\n\n\nexport async function signGetObjectUrl({ userId, bucket, key }: { userId: string, bucket: string, key: string }) {\n    // const url = new URL(request.url)\n    // const bucket = url.searchParams.get('bucket')\n    // const key = url.searchParams.get('key')\n\n    if (!bucket || !key) {\n        throw json({ error: \"Missing key or bucket\" }, { status: 422 })\n    }\n    if (!(key?.startsWith(`tmp/${userId}`) || key?.startsWith(`cropper_out/${userId}`))) {\n        throw json({ error: \"S3 path not accessible by user\" }, { status : 403 })\n    }\n\n    const s3Params = {\n        Bucket: bucket,\n        Key: key,\n        Expires: 300,\n    }\n    const s3 = new AWS.S3()\n    try {\n        await s3.headObject({ Bucket: bucket, Key: key }).promise();\n    } catch (e) {\n        throw json({ error: \"S3 path does not exist\" }, { status: 404 })\n    }\n    \n    const getObjUrl = await s3.getSignedUrlPromise('getObject', s3Params)\n    return json({\n        signedUrl: getObjUrl,\n        bucket: s3Params.Bucket,\n        key: s3Params.Key,\n    })\n}", "import { Link, useRevalidator } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport type { Project } from \"~/models/project.server\";\nimport { DownloadIcon, LoadingSpinner } from \"./Icons\";\n\n\nconst fetchOutputUrl = async (project: Project) => {\n  if (!project.outputFile) {\n    return;\n  }\n  const outputFile = project.outputFile;\n  const params = new URLSearchParams({\n    key: outputFile.key,\n    bucket: outputFile.bucket,\n  });\n  const response = await fetch(`/s3/getobjecturl?${params.toString()}`);\n  const body = await response.json();\n  if (!response.ok) {\n    throw body;\n  }\n  return body.signedUrl;\n};\n\nconst isMobile = () => {\n  let check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor);\n  return check;\n};\n\nexport default function ProjectPreview({ project, revalidator }: { project: Project, revalidator: ReturnType<typeof useRevalidator> }) {\n  const [outputUrl, setOutputUrl] = useState<string>(\"\");\n  const [outputPollInterval, setOutputPollInterval] = useState<NodeJS.Timer>();\n  // const [hasWebviewWarning, setHasWebViewWarning] = useState(false);\n\n  useEffect(() => {\n    if (outputPollInterval) {\n      clearInterval(outputPollInterval);\n    }\n    fetchOutputUrl(project).then((url) => {\n        setOutputUrl(url);\n        revalidator.revalidate()\n    });\n    const interval = setInterval(() => {\n      fetchOutputUrl(project).then((url) => {\n        setOutputUrl(url);\n        revalidator.revalidate()\n        clearInterval(interval);\n      });\n    }, 10000);\n\n    setOutputPollInterval(interval);\n\n    return () => clearInterval(interval);\n  }, []);\n\n\n  const downloadObject = async () => {\n    if (!project.outputFile) {\n      throw Error(\"Project.outputFile should not be undefined\");\n    }\n    const params = new URLSearchParams({\n      key: project.outputFile.key,\n      bucket: project.outputFile.bucket,\n    });\n    const res = await fetch(`/s3/getobjecturl?${params.toString()}`);\n    const resJson = await res.json();\n\n    if (isMobile()) {\n      location.assign(resJson.signedUrl)\n    } else {\n      open(resJson.signedUrl, \"_blank\");\n    }\n  };\n\n  \n  return (\n    <>\n      {project.state === 2 && (\n        <>\n          <h3 id=\"completed\" className=\"mt-0\"> <LoadingSpinner />Our AI \uD83E\uDD16 is processing your video...</h3>\n          <div className=\"mb-6 p-2 rounded-md border-2 border-sky-600/10 bg-sky-500/10 w-full\">\n            <p className=\"m-2 font-bold\">You can leave this page and come back later!\uD83D\uDC4B</p>\n            <p className=\"m-2\">Our \u2728magic\u2728 may require up to 30 minutes to complete.</p> \n            <p className=\"m-2\"> We promise it's worth the wait!\uD83D\uDE4F </p>\n          </div>\n          {/* {estCompleteDate && \n            <progress\n              className=\"progress progress-success w-full\"\n              value={proccesProgress}\n              max=\"100\"\n            ></progress>\n          } */}\n        </>\n      )}\n      {project.state === 3 && (\n        <>\n          <h3 id=\"completed\" className=\"mt-0\"> \uD83C\uDF89 Crop Complete!</h3>\n          <button className=\"btn btn-primary my-2\" onClick={downloadObject} disabled={!outputUrl}>\n            <DownloadIcon/>\n            Download file\n          </button>\n          <label className=\"label\">\n            Videos will only be available to download for 24 hours.\n          </label>\n          <div className=\"flex w-full\">\n            <div className=\"flex-col w-full max-w-lg\">\n              {outputUrl && (\n                <>\n                  <div className=\"w-full max-w-lg\">\n                    <div className=\"flex flex-col\">\n                      <video className=\"m-0 max-full-w\" controls preload=\"auto\">\n                        <source src={outputUrl} />\n                      </video>\n                     </div>\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n      {project.state === 4 && (\n        <>\n          <h3 id=\"completed\" className=\"mt-0\">\uD83D\uDE2D Processing Failed!</h3>\n          <p className=\"text-red-700\">\n            Sorry! Something went wrong. Please try again in a <Link to=\"/app/new\">new project</Link>.\n          </p>\n        </>\n      )}\n      \n    </>\n    \n  );\n}\n", "export const LoadingSpinner = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      className=\"mr-2 inline h-8 w-8 animate-spin fill-blue-600 text-gray-200 dark:text-gray-600\"\n      viewBox=\"0 0 100 101\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n        fill=\"currentFill\"\n      />\n    </svg>\n  );\n};\n\nexport const DownloadIcon = () => {\n  return <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth={1.5}\n    stroke=\"currentColor\"\n    className=\"mr-1 h-4 w-4\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\"\n    />\n  </svg>;\n};\n", "import { useRevalidator } from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport type { Project, TrackHint } from \"~/models/project.server\";\n\nexport default function FrameAnnotation({\n  video,\n  addFocus,\n  existingTrackHints,\n}: {\n  video: HTMLVideoElement;\n  existingTrackHints?: TrackHint[];\n  addFocus: (t: TrackHint) => void;\n}) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const overlayRef = useRef<HTMLCanvasElement>(null);\n  const [lastTrackHint, setTrackHint] = useState<TrackHint>();\n  const [currentVideoTime, setCurrentVideoTime] = useState(0);\n  const [loadingOverlay, setLoadingOverlay] = useState(true);\n  const [canAddHint, setCanAddHint] = useState(!existingTrackHints);\n  const [addedHint, setAddedHint] = useState(false);\n\n  const syncCanvasShape = () => {\n    if (!canvasRef.current || !overlayRef.current) {\n      return\n    }\n\n    const dims = video.getBoundingClientRect();\n    canvasRef.current.width = dims.width;\n    canvasRef.current.height = dims.height;\n    overlayRef.current.width = dims.width;\n    overlayRef.current.height = dims.height;\n  }\n\n  const drawVideoToCanvas = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const ctx = canvasRef.current.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    syncCanvasShape()\n    const dims = video.getBoundingClientRect();\n    ctx.drawImage(video, 0, 0, dims.width, dims.height);\n    console.log(video.currentTime)\n    setCurrentVideoTime(video.currentTime);\n  };\n  \n  video.onseeked = drawVideoToCanvas;\n  video.onpause = drawVideoToCanvas;\n  video.onplay = drawVideoToCanvas;\n\n  video.oncanplaythrough = () => {\n    if (video.currentTime <= 1) {\n      video.currentTime = video.duration / 2;\n    }\n  };\n\n  const setupInteractionHandlers = (\n    overlay: HTMLCanvasElement,\n    canvas: HTMLCanvasElement\n  ) => {\n    const ctx = overlay.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    \n    // this flage is true when the user is dragging the mouse\n    let isActive = false;\n\n    // these vars will hold the starting mouse position\n    let posX = 0;\n    let posY = 0;\n    let width = 0;\n    let height = 0;\n    let offsetX = 0;\n    let offsetY = 0;\n    let boxSize = 0;\n\n    const setup = () => {\n      const dims = canvas.getBoundingClientRect();\n      overlay.width = dims.width;\n      overlay.height = dims.height;\n\n      boxSize = Math.floor(Math.min(dims.width, dims.height) / 8);\n\n      // style the context\n      ctx.strokeStyle = \"cyan\";\n      ctx.lineWidth = 4;\n      ctx.shadowColor = \"#000\";\n      ctx.shadowBlur = 20;\n      ctx.strokeRect(0, 0, dims.width, dims.height);\n\n      // calculate where the canvas is on the window\n      // (used to help calculate mouseX/mouseY)\n      let overlayRect = overlay.getBoundingClientRect();\n\n      offsetX = overlayRect.left;\n      offsetY = overlayRect.top;\n\n      posX = offsetX;\n      posY = offsetY;\n      width = boxSize;\n      height = boxSize;\n    };\n\n    setup();\n\n    const drawSelectorBox = (mouseX: number, mouseY: number) => {\n      // save the starting x/y of the rectangle\n      posX = Math.max(\n        Math.floor(mouseX - offsetX) - Math.floor(boxSize / 2),\n        0\n      );\n      posY = Math.max(Math.floor(mouseY - offsetY) - boxSize, 0);\n\n      width = Math.min(boxSize, overlay.width - posX);\n      height = Math.min(boxSize * 2, overlay.height - posY);\n\n      // clear the canvas\n      ctx.clearRect(0, 0, overlay.width, overlay.height);\n\n      // draw a new rect from the start position\n      // to the current mouse position\n      ctx.strokeRect(posX, posY, width, height);\n    };\n\n    overlay.onmousedown = (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setup();\n      drawSelectorBox(e.clientX, e.clientY);\n      isActive = true;\n    };\n\n    overlay.onmouseup = (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      // the drag is over, clear the dragging flag\n      isActive = false;\n      const dims = canvas.getBoundingClientRect();\n      setTrackHint({\n        normLtwh: [\n          posX / dims.width,\n          posY / dims.height,\n          width / dims.width,\n          height / dims.height,\n        ],\n        timeSecs: currentVideoTime,\n      });\n      // setCurrentVideoTime(video.currentTime)\n    };\n\n    overlay.onmousemove = (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      // if we're not dragging, just return\n      if (!isActive) {\n        return;\n      }\n      drawSelectorBox(e.clientX, e.clientY);\n    };\n\n    // overlay.ontouchstart = (e) => {\n    //   const touch = e.touches[0]\n    // }\n    // overlay.ontouchend\n    // overlay.ontouchmove\n    // Get the position of a touch relative to the canvas\n    overlay.addEventListener(\n      \"touchstart\",\n      (e) => {\n        const touch = e.touches[0];\n        posX = Math.floor(touch.clientX - offsetX);\n        posY = Math.floor(touch.clientY - offsetY);\n        var mouseEvent = new MouseEvent(\"mousedown\", {\n          clientX: touch.clientX,\n          clientY: touch.clientY,\n        });\n        overlay.dispatchEvent(mouseEvent);\n      },\n      false\n    );\n    overlay.addEventListener(\n      \"touchend\",\n      (e) => {\n        var mouseEvent = new MouseEvent(\"mouseup\", {});\n        overlay.dispatchEvent(mouseEvent);\n      },\n      false\n    );\n    overlay.addEventListener(\n      \"touchmove\",\n      (e) => {\n        var touch = e.touches[0];\n        var mouseEvent = new MouseEvent(\"mousemove\", {\n          clientX: touch.clientX,\n          clientY: touch.clientY,\n        });\n        overlay.dispatchEvent(mouseEvent);\n      },\n      false\n    );\n  };\n\n  useEffect(() => {\n    if (!canvasRef.current || !overlayRef.current) {\n      return;\n    }\n    // A little hacky but this makes everything more reliable for now\n    setTimeout(() => {\n      if (!canvasRef.current || !overlayRef.current) {\n        return;\n      }\n      syncCanvasShape()\n      if (!existingTrackHints) {\n        setupInteractionHandlers(overlayRef.current, canvasRef.current);\n      } else {\n        const overlayRect = overlayRef.current.getBoundingClientRect();\n        const ctx = overlayRef.current.getContext(\"2d\");\n        if (!ctx) return;\n        // style the context\n        ctx.strokeStyle = \"cyan\";\n        ctx.lineWidth = 4;\n\n        let trackHint = existingTrackHints[0];\n        const [l, t, w, h] = trackHint.normLtwh;\n        ctx.strokeRect(\n          l * overlayRect.width,\n          t * overlayRect.height,\n          w * overlayRect.width,\n          h * overlayRect.height\n        );\n      }\n      // eslint-disable-next-line no-self-assign\n      video.currentTime = video.currentTime; // This triggers an onseeked event\n      setLoadingOverlay(false)\n    }, 2000)\n    \n  }, [canvasRef, overlayRef, video]);\n\n  const addLastTrackHint = () => {\n    if (lastTrackHint) {\n        lastTrackHint.timeSecs = currentVideoTime\n        addFocus(lastTrackHint);\n        setCanAddHint(false);\n        setAddedHint(true);\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-lg\">\n      <label className=\"label\">\n        <span className=\"label-text font-bold\">\n          {\"\uD83D\uDC47 Tap on the person that you want to be the subject\"}\n        </span>\n      </label>\n      \n      <div className=\"relative\">\n        <canvas\n          ref={overlayRef}\n          className=\"absolute left-0 top-0 z-10\"\n        ></canvas>\n        <canvas ref={canvasRef}></canvas>\n      </div>\n      <label className=\"label\">\n        <span className=\"label-text\">\n        \uD83D\uDCA1 Tip: Scrub the video above to select a frame where the person is most visible.\n        </span>\n      </label>\n      <button\n        className=\"btn-secondary btn mt-2 max-w-full\"\n        onClick={addLastTrackHint}\n        disabled={!lastTrackHint || !canAddHint}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={1.5}\n          stroke=\"currentColor\"\n          className=\"mr-1 h-6 w-6\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        Confirm Subject\n      </button>\n      {addedHint && (\n        <label className=\"label\">\n          <span className=\"text-green-500\">Subject confirmed! \uD83D\uDC4D</span>\n        </label>\n      )}\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport AWS from \"aws-sdk\";\nimport { requireUserId } from \"~/session.server\";\nimport { getS3KeyExt, getS3KeyFileName } from \"~/sqs.server\";\n\n\nexport async function loader({ request }: LoaderArgs) {\n    const userId = await requireUserId(request);\n    const url = new URL(request.url)\n    const bucket = url.searchParams.get('bucket')\n    const key = url.searchParams.get('key')\n\n    if (!bucket || !key) {\n        return json({ error: \"Missing key or bucket\" }, { status: 422 })\n    }\n    if (!(key?.startsWith(`tmp/${userId}`) || key?.startsWith(`cropper_out/${userId}`))) {\n        return json({ error: \"S3 path not accessible by user\" }, { status : 403 })\n    }\n\n    const s3Params = {\n        Bucket: bucket,\n        Key: key,\n        Expires: 300,\n        ResponseContentDisposition: `attachment; filename=\"${getS3KeyFileName(key)}.${getS3KeyExt(key)}\"`\n    }\n    const s3 = new AWS.S3()\n    try {\n        await s3.headObject({ Bucket: bucket, Key: key }).promise();\n    } catch (e) {\n        return json({ error: \"S3 path does not exist\" }, { status: 404 })\n    }\n    \n    const getObjUrl = await s3.getSignedUrlPromise('getObject', s3Params)\n\n    return json({\n        signedUrl: getObjUrl,\n        bucket: s3Params.Bucket,\n        key: s3Params.Key,\n    })\n}", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport AWS from \"aws-sdk\";\nimport { requireUserId } from \"~/session.server\";\n\n\nconst CLIPS_S3_BUCKET_NAME = \"clips-store-5a1a17e\"\nconst CLIPS_S3_UPLOAD_PATH = \"tmp\"\n\nexport async function loader({ request }: LoaderArgs) {\n    const userId = await requireUserId(request);\n    const url = new URL(request.url)\n    const objectName = url.searchParams.get('objectName')\n    const contentType = url.searchParams.get('contentType')\n    const projectId = url.searchParams.get('path')\n\n    // Get signed URL from S3\n    const s3Params = {\n        Bucket: CLIPS_S3_BUCKET_NAME,\n        Key: `${CLIPS_S3_UPLOAD_PATH}/${userId}/${projectId}/${objectName}`,\n        Expires: 300,\n        ContentType: contentType,\n        ACL: 'private'\n    }\n    // console.log('Params: ', s3Params)\n    const s3 = new AWS.S3()\n    const uploadURL = await s3.getSignedUrlPromise('putObject', s3Params)\n\n    return json({\n        signedUrl: uploadURL,\n        bucket: s3Params.Bucket,\n        key: s3Params.Key,\n        contentType: s3Params.ContentType,\n    })\n}", "import { json, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { Outlet, useLoaderData, useLocation } from \"@remix-run/react\";\nimport { requireUserId } from \"~/session.server\";\nimport invariant from \"tiny-invariant\";\nimport { getProject } from \"~/models/project.server\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop\" }];\n\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.projectId, \"projectId not found\");\n\n  const project = await getProject({ id: params.projectId, userId });\n  if (!project) {\n    throw json({ error: \"Not Found\" }, { status: 404 });\n  }\n  return json({ project });\n};\n\nexport default function ProjectPage(props: { \"\": any; }) {\n  const data = useLoaderData<typeof loader>();\n  \n  return (\n    <div className=\"flex justify-center w-full bg-gray-50\">\n      <div className=\"flex justify-center w-full max-w-xl p-6\">\n        <Outlet/>\n      </div>\n    </div>\n  );\n}\n", "import { ActionArgs, redirect } from \"@remix-run/node\"\nimport invariant from \"tiny-invariant\";\nimport { authenticator } from '~/auth.server';\n\nexport let loader = () => redirect('/app/login');\n\nexport let action = async ({ request, params }: ActionArgs) => {\n    invariant(params.provider, \"$provider should always be provided\")\n    console.log(`Authenticating with ${params.provider}`)\n    return authenticator.authenticate(params.provider, request);\n};", "import type { V2_MetaFunction } from \"@remix-run/node\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop\" }];\n\nexport default function PrivacyPolicy() {\n    return (\n        <iframe width=\"100%\" height=\"100%\" src=\"/_static/privacy-policy.html\"/>\n    )\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport AWS from \"aws-sdk\";\nimport { requireUserId } from \"~/session.server\";\n\nconst CLIPS_S3_BUCKET_NAME = \"clips-store-5a1a17e\"\nconst CLIPS_S3_UPLOAD_PATH = \"cropper_out\"\n\nexport async function loader({ request, params }: LoaderArgs) {\n    const userId = await requireUserId(request, '/');\n\n    // Get signed URL from S3\n    const listObjParams = {\n        Bucket: CLIPS_S3_BUCKET_NAME,\n        Prefix: `${CLIPS_S3_UPLOAD_PATH}/${userId}/${params.projectId}/tracks`,\n    }\n    // console.log('Params: ', params)\n    const s3 = new AWS.S3()\n    const objects = await s3.listObjectsV2(listObjParams).promise()\n    // console.log(objects)\n\n    return json({\n        objects\n    })\n}", "import type { V2_MetaFunction } from \"@remix-run/node\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop\" }];\n\nexport default function PrivacyPolicy() {\n    return (\n        <iframe width=\"100%\" height=\"100%\" src=\"/_static/terms-of-use.html\"/>\n    )\n}\n", "import type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, useLoaderData } from \"@remix-run/react\";\nimport { requireUser } from \"~/session.server\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop - Profile\" }];\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const user = await requireUser(request);\n\n  return json({ user });\n};\n\nexport default function ProfilePage() {\n    const data = useLoaderData<typeof loader>();\n    return (\n      <div className=\"flex w-full justify-center bg-gray-50\">\n        <div className=\"h-full w-full max-w-lg bg-gray-50\">\n          <div className=\"prose justify-between py-4\">\n            <h2 className=\"text-slate\">\n              Profile\n            </h2>\n            <p className=\"label-text\">Email: {data.user.email}</p>\n            <p className=\"label-text\">Credits Available: {data.user.credits}</p>\n          </div>\n          <div className=\"divider\"></div>\n          <Form action=\"/logout\" method=\"post\">\n            <button className=\"btn btn-error w-full\">\n                Logout\n            </button>\n          </Form>\n          <div className=\"py-2 w-full flex justify-center\">\n            <Link\n                className=\"text-xs mx-2 text-blue-500 underline\"\n                to={{\n                  pathname: \"/privacy-policy\",\n                }}\n              >\n              Privacy Policy\n            </Link>\n            <Link\n                className=\"text-xs text-blue-500 underline\"\n                to={{\n                  pathname: \"/terms-of-use\",\n                }}\n              >\n              Terms of Use\n            </Link>\n        </div>\n        </div>\n      </div>\n    );\n  }\n  ", "import {\n  V2_MetaFunction,\n  LoaderArgs,\n  ActionArgs,\n  redirect,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Link, NavLink, useLoaderData, useRevalidator, useSubmit } from \"@remix-run/react\";\nimport classNames from \"classnames\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { useEffect } from \"react\";\n\nimport {\n  deleteProject,\n  getProjectListItems,\n  ProjectState,\n} from \"~/models/project.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop\" }];\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  const projectListItems = await getProjectListItems({ userId });\n  return json({ projectListItems });\n};\n\nexport const action = async ({ params, request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  const projectId = formData.get(\"projectId\");\n  if (typeof projectId !== \"string\" || projectId.length === 0) {\n    return json(\n      { errors: { } },\n      { status: 500 }\n    );\n  }\n\n  await deleteProject({ id: projectId, userId });\n\n  return redirect(\"/app\");\n};\n\nexport default function ProjectsPage() {\n  const data = useLoaderData<typeof loader>();\n  const revalidator = useRevalidator();\n  const submit = useSubmit();\n  const projectStateToString = (state: ProjectState) => {\n    switch (state) {\n      case 0:\n        return \"Created\";\n      case 1:\n        return \"Ready\";\n      case 2:\n        return \"Processing\";\n      case 3:\n        return \"Completed\";\n      default:\n        return \"Error\";\n    }\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      revalidator.revalidate()\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const deleteProject = (id: string) => {\n    const formData = new FormData();\n    formData.append(\"projectId\", id);\n    submit(formData, {\n      method: \"post\",\n    });\n  }\n  return (\n    <div className=\"flex w-full h-full justify-center\">\n      <div className=\"h-full w-full max-w-lg\">\n        <div className=\"flex justify-between py-4\">\n          <h2 className=\"text-slate mx-4 my-auto text-xl font-bold\">\n            Projects\n          </h2>\n        </div>\n\n        <hr />\n        {data.projectListItems.length === 0 ? (\n          <p className=\"p-4\">No projects yet</p>\n        ) : (\n          <ol>\n            {data.projectListItems.map((project, idx) => (\n              <li key={project.id} className=\"bg-gray-100\">\n                <NavLink\n                  className=\"block flex items-end justify-between border-b border-gray-200 p-4\"\n                  to={project.id}\n                >\n                  <div className=\"flex items-end\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      strokeWidth={1.5}\n                      stroke=\"currentColor\"\n                      className=\"mr-1 h-4 w-4\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        d=\"M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z\"\n                      />\n                    </svg>\n                    <span className=\"text-med font-bold text-neutral leading-none\">\n                      {`${project.title}`}\n                    </span>\n                    <span className=\"text-xs text-slate-500 leading-none mx-2\">\n                      {project.lastModifiedAt && `${formatDistanceToNow(new Date(project.lastModifiedAt * 1000))} ago`}\n                    </span>\n                  </div>\n\n                  <div className=\"flex items-end\">\n                    <span className=\"relative flex h-2 w-2 mx-1 mb-1\">\n                      <span className={classNames(\"animate-ping absolute inline-flex h-full w-full rounded-full bg-sky-400 opacity-75\", {\n                        \"bg-sky-400\": project.state === 2,\n                        \"hidden\": project.state !== 2\n                      })}></span>\n                      <span className={classNames(\"relative inline-flex rounded-full h-2 w-2\", {\n                        \"bg-zinc-400\": project.state < 2,\n                        \"bg-sky-400\": project.state === 2,\n                        \"bg-green-400\": project.state === 3,\n                        \"bg-red-400\": project.state === 4,\n                      })}></span>\n                    </span>\n                    <span className=\"pr-4 text-xs text-slate-500\">\n                   \n                      {`${projectStateToString(project.state)}`}\n                    </span>\n                    <button onClick={(e) => {\n                      e.stopPropagation();\n                      e.preventDefault();\n                      deleteProject(project.id)\n                    }}>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        strokeWidth={1.5}\n                        stroke=\"currentColor\"\n                        className=\"h-4 w-4\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n                </NavLink>\n              </li>\n            ))}\n          </ol>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\nimport { SocialsProvider } from \"remix-auth-socials\";\nimport { authenticator } from \"~/auth.server\";\n\nimport { verifyLogin } from \"~/models/user.server\";\nimport { getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  let user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json(\n        { errors: { email: null, password: \"Invalid email or password.\" } },\n        { status: 401 }\n    );\n  }\n\n  await authenticator.authenticate(\"user-pass\", request, {\n    successRedirect: redirectTo,\n    failureRedirect: \"/app/login\",\n    context: { formData },\n  });\n\n  // Note: Not sure if there's a better flow but\n  // this should not get here because the authenticate call will redirect on success or failure...\n  return json(\n    { errors: { email: null, password: \"Sorry, something went wrong!\" } },\n    { status: 500 }\n  );\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Login\" }];\n\ninterface SocialButtonProps {\n  provider: SocialsProvider;\n  label: string;\n  logo: JSX.Element;\n}\nconst SocialButton: React.FC<SocialButtonProps> = ({\n  provider,\n  label,\n  logo,\n}) => (\n  <Form action={`/auth/${provider}`} method=\"post\">\n    <button className=\"btn w-full\">\n      {logo}\n      {label}\n    </button>\n  </Form>\n);\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\n  const error = searchParams.get(\"error\") || \"\";\n  const actionData = useActionData<typeof action>();\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"static mx-auto my-auto w-full max-w-md px-8\">\n      {error && (\n        <div className=\"alert alert-error my-2\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 shrink-0 stroke-current\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          <span>\n            Sorry, something went wrong! You may not be allowed to login with\n            those credentials\n          </span>\n        </div>\n      )}\n      <div className=\"w-full p-2\">\n        <SocialButton\n          provider={SocialsProvider.GOOGLE}\n          label=\"Sign in with Google\"\n          logo={\n            <svg\n              className=\"mx-1 h-4 w-4\"\n              viewBox=\"0 0 21 20\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <g clipPath=\"url(#clip0_13183_10121)\">\n                <path\n                  d=\"M20.3081 10.2303C20.3081 9.55056 20.253 8.86711 20.1354 8.19836H10.7031V12.0492H16.1046C15.8804 13.2911 15.1602 14.3898 14.1057 15.0879V17.5866H17.3282C19.2205 15.8449 20.3081 13.2728 20.3081 10.2303Z\"\n                  fill=\"#3F83F8\"\n                ></path>\n                <path\n                  d=\"M10.7019 20.0006C13.3989 20.0006 15.6734 19.1151 17.3306 17.5865L14.1081 15.0879C13.2115 15.6979 12.0541 16.0433 10.7056 16.0433C8.09669 16.0433 5.88468 14.2832 5.091 11.9169H1.76562V14.4927C3.46322 17.8695 6.92087 20.0006 10.7019 20.0006V20.0006Z\"\n                  fill=\"#34A853\"\n                ></path>\n                <path\n                  d=\"M5.08857 11.9169C4.66969 10.6749 4.66969 9.33008 5.08857 8.08811V5.51233H1.76688C0.348541 8.33798 0.348541 11.667 1.76688 14.4927L5.08857 11.9169V11.9169Z\"\n                  fill=\"#FBBC04\"\n                ></path>\n                <path\n                  d=\"M10.7019 3.95805C12.1276 3.936 13.5055 4.47247 14.538 5.45722L17.393 2.60218C15.5852 0.904587 13.1858 -0.0287217 10.7019 0.000673888C6.92087 0.000673888 3.46322 2.13185 1.76562 5.51234L5.08732 8.08813C5.87733 5.71811 8.09302 3.95805 10.7019 3.95805V3.95805Z\"\n                  fill=\"#EA4335\"\n                ></path>\n              </g>\n              <defs>\n                <clipPath id=\"clip0_13183_10121\">\n                  <rect\n                    width=\"20\"\n                    height=\"20\"\n                    fill=\"white\"\n                    transform=\"translate(0.5)\"\n                  ></rect>\n                </clipPath>\n              </defs>\n            </svg>\n          }\n        />\n      </div>\n      <div className=\"w-full p-2\">\n        <SocialButton\n          provider={SocialsProvider.DISCORD}\n          label=\"Sign in with Discord\"\n          logo={\n            <svg\n              className=\"mx-1 h-4 w-4\"\n              viewBox=\"0 -28.5 256 256\"\n              version=\"1.1\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"xMidYMid\"\n            >\n              <g>\n                <path\n                  d=\"M216.856339,16.5966031 C200.285002,8.84328665 182.566144,3.2084988 164.041564,0 C161.766523,4.11318106 159.108624,9.64549908 157.276099,14.0464379 C137.583995,11.0849896 118.072967,11.0849896 98.7430163,14.0464379 C96.9108417,9.64549908 94.1925838,4.11318106 91.8971895,0 C73.3526068,3.2084988 55.6133949,8.86399117 39.0420583,16.6376612 C5.61752293,67.146514 -3.4433191,116.400813 1.08711069,164.955721 C23.2560196,181.510915 44.7403634,191.567697 65.8621325,198.148576 C71.0772151,190.971126 75.7283628,183.341335 79.7352139,175.300261 C72.104019,172.400575 64.7949724,168.822202 57.8887866,164.667963 C59.7209612,163.310589 61.5131304,161.891452 63.2445898,160.431257 C105.36741,180.133187 151.134928,180.133187 192.754523,160.431257 C194.506336,161.891452 196.298154,163.310589 198.110326,164.667963 C191.183787,168.842556 183.854737,172.420929 176.223542,175.320965 C180.230393,183.341335 184.861538,190.991831 190.096624,198.16893 C211.238746,191.588051 232.743023,181.531619 254.911949,164.955721 C260.227747,108.668201 245.831087,59.8662432 216.856339,16.5966031 Z M85.4738752,135.09489 C72.8290281,135.09489 62.4592217,123.290155 62.4592217,108.914901 C62.4592217,94.5396472 72.607595,82.7145587 85.4738752,82.7145587 C98.3405064,82.7145587 108.709962,94.5189427 108.488529,108.914901 C108.508531,123.290155 98.3405064,135.09489 85.4738752,135.09489 Z M170.525237,135.09489 C157.88039,135.09489 147.510584,123.290155 147.510584,108.914901 C147.510584,94.5396472 157.658606,82.7145587 170.525237,82.7145587 C183.391518,82.7145587 193.761324,94.5189427 193.539891,108.914901 C193.539891,123.290155 183.391518,135.09489 170.525237,135.09489 Z\"\n                  fill=\"#5865F2\"\n                  fillRule=\"nonzero\"\n                ></path>\n              </g>\n            </svg>\n          }\n        />\n      </div>\n      <div className=\"divider\">OR</div>\n      <Form method=\"post\" className=\"space-y-6\">\n        <div>\n          <label\n            htmlFor=\"email\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Email address\n          </label>\n          <div className=\"mt-1\">\n            <input\n              ref={emailRef}\n              id=\"email\"\n              required\n              autoFocus={true}\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              aria-invalid={actionData?.errors?.email ? true : undefined}\n              aria-describedby=\"email-error\"\n              className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n            />\n            {actionData?.errors?.email && (\n              <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                {actionData.errors.email}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div>\n          <label\n            htmlFor=\"password\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Password\n          </label>\n          <div className=\"mt-1\">\n            <input\n              id=\"password\"\n              ref={passwordRef}\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              aria-invalid={actionData?.errors?.password ? true : undefined}\n              aria-describedby=\"password-error\"\n              className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n            />\n            {actionData?.errors?.password && (\n              <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                {actionData.errors.password}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n        <button\n          type=\"submit\"\n          className=\"w-full btn bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Log in\n        </button>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            <input\n              id=\"remember\"\n              name=\"remember\"\n              type=\"checkbox\"\n              className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <label\n              htmlFor=\"remember\"\n              className=\"ml-2 block text-sm text-gray-900\"\n            >\n              Remember me\n            </label>\n          </div>\n          <div className=\"text-center text-sm text-gray-500\">\n            Don't have an account?{\" \"}\n            <Link\n              className=\"text-blue-500 underline\"\n              to={{\n                pathname: \"/app/join\",\n                search: searchParams.toString(),\n              }}\n            >\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </Form>\n      <div className=\"py-2 w-full flex justify-center\">\n          <Link\n              className=\"text-xs mx-2 text-blue-500 underline\"\n              to={{\n                pathname: \"/privacy-policy\",\n              }}\n            >\n            Privacy Policy\n          </Link>\n          <Link\n              className=\"text-xs text-blue-500 underline\"\n              to={{\n                pathname: \"/terms-of-use\",\n              }}\n            >\n            Terms of Use\n          </Link>\n      </div>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport ReactS3Uploader from \"react-s3-uploader\";\nimport { useFetcher } from \"@remix-run/react\";\nimport { useOptionalUser } from \"~/utils\";\nimport { useEffect, useState } from \"react\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop\" }];\n\nexport default function ProjectsPage() {\n  const listObjectsFetcher = useFetcher();\n  const uploadedObjUrlFetcher = useFetcher();\n  const sqsAction = useFetcher();\n  const user = useOptionalUser();\n  const [inputComp, setInputComp] = useState<HTMLInputElement>();\n  const [previewUrl, setPreviewUrl] = useState<string>();\n\n  const getObjectUrl = async (bucket: string, key: string) => {\n    const params = new URLSearchParams({\n      key,\n      bucket,\n    });\n    const res = await fetch(`/s3/getobjecturl?${params.toString()}`);\n    const resJson = await res.json();\n    return resJson.signedUrl;\n  };\n\n  const downloadObject = async (bucket: string, key: string) => {\n    const signedUrl = await getObjectUrl(bucket, key);\n    window.open(signedUrl, \"_blank\");\n  };\n\n  const onUploadFinish = (res: any, file: any) => {\n    console.log(res, file);\n    const params = new URLSearchParams({\n      key: res.key,\n      bucket: res.bucket,\n    });\n    uploadedObjUrlFetcher.data = undefined;\n    uploadedObjUrlFetcher.load(`/s3/getobjecturl?${params.toString()}`);\n    if (inputComp) {\n      inputComp.value = \"\";\n    }\n    sqsAction.submit(\n      { key: res.key, bucket: res.bucket },\n      { method: \"post\", action: \"/sqs/cropper\" }\n    );\n  };\n\n  const listObjects = () => {\n    listObjectsFetcher.load(\"/s3/listobjects\");\n  };\n\n  useEffect(() => {\n    if (user) {\n      listObjects()\n    }\n  }, [])\n\n  return (\n    <div className=\"flex-1 p-6\">\n      <div className=\"p-2\">\n        <ReactS3Uploader\n          signingUrl=\"/s3/putobjecturl\"\n          signingUrlMethod=\"GET\"\n          s3path=\"tmp/\"\n          // preprocess={this.onUploadStart}\n          // onSignedUrl={onSignedUrl}\n          // onProgress={this.onUploadProgress}\n          // onError={this.onUploadError}\n          onFinish={onUploadFinish}\n          // signingUrlHeaders={{ additional: headers }}\n          // signingUrlQueryParams={{ additional: query-params }}\n          signingUrlWithCredentials={true} // in case when need to pass authentication credentials via CORS\n          uploadRequestHeaders={{ \"x-amz-acl\": \"private\" }}\n          contentDisposition=\"auto\"\n          scrubFilename={(filename: string) =>\n            filename.replace(/[^\\w\\d_\\-.]+/gi, \"\")\n          }\n          inputRef={(cmp) => setInputComp(cmp)}\n          autoUpload={true}\n        />\n      </div>\n      {uploadedObjUrlFetcher.state === \"idle\" &&\n        uploadedObjUrlFetcher.data && (\n          <div className=\"p-6\">\n            <h1>Input Preview</h1>\n            <video width=\"320\" height=\"240\" controls>\n              <source src={uploadedObjUrlFetcher.data.signedUrl} />\n            </video>\n          </div>\n          \n        )}\n      <button\n        onClick={listObjects}\n        className=\"bg-gray-100 hover:bg-gray-500 rounded-md p-2 font-medium text-black\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={1.5}\n          stroke=\"currentColor\"\n          className=\"h-4 w-4\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\"\n          />\n        </svg>\n      </button>\n      <ul className=\"list-disc px-6\">\n        {listObjectsFetcher.data &&\n          listObjectsFetcher.data.objects.Contents.map((content: any) => (\n            <li key={content.ETag}>\n              <button\n                className=\"mx-1 rounded-sm bg-gray-100 p-2 text-black hover:bg-gray-200\"\n                onClick={() =>\n                  downloadObject(\n                    listObjectsFetcher.data.objects.Name,\n                    content.Key\n                  )\n                }\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"h-4 w-4\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\"\n                  />\n                </svg>\n              </button>\n              <button\n                className=\"mx-1 rounded-sm bg-gray-100 p-2 text-black hover:bg-gray-200\"\n                onClick={() =>\n                  getObjectUrl(\n                    listObjectsFetcher.data.objects.Name,\n                    content.Key\n                  ).then((url) => setPreviewUrl(url))\n                }\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"h-4 w-4\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z\"\n                  />\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                  />\n                </svg>\n              </button>\n              {content.Key}\n            </li>\n          ))}\n      </ul>\n      {previewUrl && (\n          <div className=\"p-6\">\n            <h1>Output Preview</h1>\n            <video width=\"320\" height=\"240\" controls>\n              <source src={previewUrl} />\n            </video>\n          </div>\n        )}\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\nimport { authenticator } from \"~/auth.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n  \n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n      { status: 400 }\n    );\n  }\n  await createUser(email, password);\n\n  console.log(\"Created new user by email and password. Creating session next..\")\n\n  const user = await authenticator.authenticate(\"user-pass\", request, {\n    successRedirect: redirectTo,\n    failureRedirect: \"/app\",\n    context: { formData },\n  });\n\n  return json(\n    { errors: null, ...user },\n    { status: 200 }\n  )\n\n  // return createUserSession({\n  //   redirectTo,\n  //   remember: false,\n  //   request,\n  //   userId: user.id,\n  // });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Sign Up\" }];\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData<typeof action>();\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"mx-auto w-full max-w-md my-auto px-8\">\n      <Form method=\"post\" className=\"space-y-6\">\n        <div>\n          <label\n            htmlFor=\"email\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Email address\n          </label>\n          <div className=\"mt-1\">\n            <input\n              ref={emailRef}\n              id=\"email\"\n              required\n              autoFocus={true}\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              aria-invalid={actionData?.errors?.email ? true : undefined}\n              aria-describedby=\"email-error\"\n              className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n            />\n            {actionData?.errors?.email && (\n              <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                {actionData.errors.email}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div>\n          <label\n            htmlFor=\"password\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Password\n          </label>\n          <div className=\"mt-1\">\n            <input\n              id=\"password\"\n              ref={passwordRef}\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              aria-invalid={actionData?.errors?.password ? true : undefined}\n              aria-describedby=\"password-error\"\n              className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n            />\n            {actionData?.errors?.password && (\n              <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                {actionData.errors.password}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n        <button\n          type=\"submit\"\n          className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Create Account\n        </button>\n        <div className=\"flex items-center justify-center\">\n          <div className=\"text-center text-sm text-gray-500\">\n            Already have an account?{\" \"}\n            <Link\n              className=\"text-blue-500 underline\"\n              to={{\n                pathname: \"/app/login\",\n                search: searchParams.toString(),\n              }}\n            >\n              Log in\n            </Link>\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import type { V2_MetaFunction, ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { requireUserId } from \"~/session.server\";\nimport type { Size } from \"~/models/project.server\";\nimport { createProject } from \"~/models/project.server\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop - New Project\" }];\n\nenum AspectRatio {\n  TallPortrait = \"tall_portrait\",\n  Portrait = \"portrait\",\n  Box = \"box\",\n}\n\nexport const action = async ({ request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json(\n      { errors: { body: null, title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const sizes: { [key in AspectRatio]: Size } = {\n    [AspectRatio.TallPortrait]: {\n      width: 1080,\n      height: 1920,\n    },\n    [AspectRatio.Portrait]: {\n      width: 1080,\n      height: 1440,\n    },\n    [AspectRatio.Box]: {\n      width: 1080,\n      height: 1080,\n    },\n  };\n\n  const aspectRatioStr = formData.get(\"aspectRatio\");\n  const size: Size = sizes[aspectRatioStr as AspectRatio];\n\n  const project = await createProject({ size, title, userId });\n\n  return redirect(`/app/${project.id}`);\n};\n\nexport default function ProjectsPage() {\n  const actionData = useActionData<typeof action>();\n  const titleRef = useRef<HTMLInputElement>(null);\n  const [aspectRatio, setAspectRatio] = useState<AspectRatio>(\n    AspectRatio.TallPortrait\n  );\n\n  useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    }\n  }, [actionData]);\n\n  const onAspectRatioChange: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    setAspectRatio(event.currentTarget.value as AspectRatio);\n  };\n\n  return (\n    <div className=\"flex h-full w-full justify-center bg-gray-50\">\n      <div className=\"prose h-full w-full max-w-lg py-2\">\n        <h2 className=\"m-2\">\uD83D\uDC4B Create a new project</h2>\n        <Form method=\"post\" className=\"form-control space-y-2 p-2\">\n          <div>\n            <label className=\"label\">\n              <span className=\"label-text font-bold\">Project Title</span>\n            </label>\n            <input\n              ref={titleRef}\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"My awesome project\"\n              className={classNames(\"max-w-s input w-full\", {\n                \"input-error\": !!actionData?.errors?.title,\n              })}\n              defaultValue={\"Untitled Project\"}\n              aria-invalid={actionData?.errors?.title ? true : undefined}\n              autoFocus\n            />\n          </div>\n          <div>\n            <label className=\"label\">\n                <span className=\"label-text font-bold\">Aspect Ratio</span>\n            </label>\n            <label className=\"label cursor-pointer justify-normal space-x-2\">\n                <input\n                type=\"radio\"\n                name=\"aspectRatio\"\n                className=\"radio checked:bg-blue-500\"\n                onChange={onAspectRatioChange}\n                checked={aspectRatio === AspectRatio.TallPortrait}\n                value={AspectRatio.TallPortrait}\n                />\n                <span className=\"label-text\">\n                9:16 - 1080x1920 - For TikTok / Reels\n                </span>\n            </label>\n            <label className=\"label cursor-pointer justify-normal space-x-2\">\n                <input\n                type=\"radio\"\n                name=\"aspectRatio\"\n                className=\"radio checked:bg-blue-500\"\n                onChange={onAspectRatioChange}\n                checked={aspectRatio === AspectRatio.Portrait}\n                value={AspectRatio.Portrait}\n                />\n                <span className=\"m label-text\">3:4 - 1080x1440 - Portrait</span>\n            </label>\n            <label className=\"label cursor-pointer justify-normal space-x-2\">\n                <input\n                type=\"radio\"\n                name=\"aspectRatio\"\n                className=\"radio checked:bg-blue-500\"\n                onChange={onAspectRatioChange}\n                checked={aspectRatio === AspectRatio.Box}\n                value={AspectRatio.Box}\n                />\n                <span className=\"m label-text\">1:1 - 1080x1080 - Box</span>\n            </label>\n          </div>\n          <div className=\"rounded-md border-2 border-sky-600/10 bg-sky-500/10\">\n            <p className=\"m-4\">\u26A0\uFE0F All projects are deleted after 24 hours. </p>\n          </div>\n\n          <button type=\"submit\" className=\"btn-primary btn my-1\">\n            Create Project\n          </button>\n          <button onClick={() => history.back()} className=\"btn my-1\">\n            Cancel\n          </button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "export default function IndexPage() {\n  return (\n    <iframe\n      title=\"Feedback Form\"\n      src=\"https://docs.google.com/forms/d/e/1FAIpQLSexXwj2X1B0vRCG810aTXGtriUvYchjyRjkzLzuhSSufTJRlg/viewform?embedded=true\"\n      width=\"100%\"\n      height=\"100%\"\n    >\n      Loading\u2026\n    </iframe>\n  );\n}\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop\" }];\n\nexport async function loader() {\n  return redirect(\"/app\")\n}", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => logout(request);\n\nexport const loader = async () => redirect(\"/\");\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { Form, Link, Outlet, useSubmit } from \"@remix-run/react\";\nimport { useOptionalUser } from \"~/utils\";\nimport { UserIcon } from \"@heroicons/react/24/solid\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"PopCrop\" }];\n\nexport default function IndexPage() {\n  const user = useOptionalUser();\n  return (\n    <div className=\"flex-col h-full\">\n      <header className=\"bg-white w-full p-4 text-white\">\n        <div className=\"m-auto flex h-full w-full max-w-lg items-center justify-stretch\">\n          <Link className=\"prose flex-1\" to=\"/app\">\n            <div\n              className=\"h-12 w-12\"\n              style={{\n                backgroundImage: \"url(/_static/popcrop-icon.png)\",\n                backgroundSize: \"cover\",\n              }}\n            ></div>\n          </Link>\n          <div className=\"full-width flex justify-end space-x-2\">\n            {!user && (\n              <Link\n                to=\"/app/login\"\n                className=\"mx-2 flex items-center justify-center rounded-md bg-red-500 px-4 py-3 font-medium text-white hover:bg-red-600\"\n              >\n                Log In\n              </Link>\n            )}\n            {!user && (\n              <Link\n                to=\"/app/join\"\n                className=\"flex items-center justify-center rounded-md bg-red-500 px-4 py-3 font-medium text-white hover:bg-red-600\"\n              >\n                Sign Up\n              </Link>\n            )}\n            {user && (\n              <>\n                <Link to=\"new\" className=\"mx-4 block\">\n                  <button className=\"btn-primary btn-sm btn\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      strokeWidth={1.5}\n                      stroke=\"currentColor\"\n                      className=\"h-4 w-4\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        d=\"M12 4.5v15m7.5-7.5h-15\"\n                      />\n                    </svg>\n                    New\n                  </button>\n                </Link>\n                <Link to=\"profile\">\n                    <button className=\"rounded-full bg-slate-600 px-2 py-2 text-blue-100 hover:bg-blue-500 active:bg-blue-600\">\n                        <UserIcon\n                            className=\"h-4 w-4 text-white\"\n                            title={user.email}\n                        />\n                    </button>\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n      </header>\n      <main className=\"flex h-full\">\n        <Outlet />\n      </main>\n      {/* <footer className=\"footer items-center bg-neutral p-4 text-neutral-content\">\n        <div className=\"grid-flow-col items-center\">\n          <p>All rights reserved - gsalisi.dev</p>\n        </div>\n        {/* <div className=\"grid-flow-col gap-4 md:place-self-center md:justify-self-end\">\n        <a><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"fill-current\"><path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"></path></svg>\n        </a> \n        <a><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"fill-current\"><path d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path></svg></a>\n        <a><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"fill-current\"><path d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path></svg></a>\n    </div> \n      </footer> */}\n    </div>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\n// import { createUserSession } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  // const { email } = await request.json();\n  // if (!email) {\n  //   throw new Error(\"email required for login\");\n  // }\n  // if (!email.endsWith(\"@example.com\")) {\n  //   throw new Error(\"All test emails must end in @example.com\");\n  // }\n\n  // const user = await createUser(email, \"myreallystrongpassword\");\n\n  // return createUserSession({\n  //   redirectTo: \"/\",\n  //   remember: true,\n  //   request,\n  //   userId: user.id,\n  // });\n};\n\nexport default null;\n", "export default {'version':'75957277','entry':{'module':'/_static/build/entry.client-NQ5SGBKO.js','imports':['/_static/build/_shared/chunk-Y4OWZVFQ.js','/_static/build/_shared/chunk-B2IJQCAP.js','/_static/build/_shared/chunk-PBDWNJJD.js','/_static/build/_shared/chunk-2EMYTXBA.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-K6SFRFQD.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-7XPJTGAE.js','imports':['/_static/build/_shared/chunk-5VNUN7X6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/_index-RUKZZI3T.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app':{'id':'routes/app','parentId':'root','path':'app','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app-JH5HHHZJ.js','imports':['/_static/build/_shared/chunk-LF22ZIVG.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.$projectId':{'id':'routes/app.$projectId','parentId':'routes/app','path':':projectId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.$projectId-SZBPBVLD.js','imports':['/_static/build/_shared/chunk-J2TRKBBH.js','/_static/build/_shared/chunk-PIYU2WGE.js','/_static/build/_shared/chunk-5VNUN7X6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.$projectId._index':{'id':'routes/app.$projectId._index','parentId':'routes/app.$projectId','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/app.$projectId._index-MJRHSBUJ.js','imports':['/_static/build/_shared/chunk-SVH6S54U.js','/_static/build/_shared/chunk-A54NKAY7.js','/_static/build/_shared/chunk-FYZ2ZYRT.js','/_static/build/_shared/chunk-DSNOICC6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app._index':{'id':'routes/app._index','parentId':'routes/app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/app._index-JMI4RATI.js','imports':['/_static/build/_shared/chunk-SVH6S54U.js','/_static/build/_shared/chunk-A54NKAY7.js','/_static/build/_shared/chunk-PIYU2WGE.js','/_static/build/_shared/chunk-5VNUN7X6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.beta':{'id':'routes/app.beta','parentId':'routes/app','path':'beta','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.beta-MDYG4ANS.js','imports':['/_static/build/_shared/chunk-FYZ2ZYRT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.join':{'id':'routes/app.join','parentId':'routes/app','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.join-4ZK7Q3S5.js','imports':['/_static/build/_shared/chunk-NXGQJAK5.js','/_static/build/_shared/chunk-DSNOICC6.js','/_static/build/_shared/chunk-5VNUN7X6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.login':{'id':'routes/app.login','parentId':'routes/app','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.login-YSDFO4FR.js','imports':['/_static/build/_shared/chunk-NXGQJAK5.js','/_static/build/_shared/chunk-DSNOICC6.js','/_static/build/_shared/chunk-5VNUN7X6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.new':{'id':'routes/app.new','parentId':'routes/app','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.new-XY37GMQS.js','imports':['/_static/build/_shared/chunk-A54NKAY7.js','/_static/build/_shared/chunk-PIYU2WGE.js','/_static/build/_shared/chunk-5VNUN7X6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.profile':{'id':'routes/app.profile','parentId':'routes/app','path':'profile','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.profile-3ME4MZBW.js','imports':['/_static/build/_shared/chunk-5VNUN7X6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.$provider':{'id':'routes/auth.$provider','parentId':'root','path':'auth/:provider','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/auth.$provider-4BZZHEOO.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.$provider.callback':{'id':'routes/auth.$provider.callback','parentId':'routes/auth.$provider','path':'callback','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/auth.$provider.callback-HBZJWZNJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-DFNZ25DW.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/privacy-policy':{'id':'routes/privacy-policy','parentId':'root','path':'privacy-policy','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/privacy-policy-ZTJRMQVW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s3.getobjecturl':{'id':'routes/s3.getobjecturl','parentId':'root','path':'s3/getobjecturl','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/s3.getobjecturl-RB63VXTH.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s3.listobjects':{'id':'routes/s3.listobjects','parentId':'root','path':'s3/listobjects','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/s3.listobjects-P4DHZGVE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s3.putobjecturl':{'id':'routes/s3.putobjecturl','parentId':'root','path':'s3/putobjecturl','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/s3.putobjecturl-HROULB4F.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/support':{'id':'routes/support','parentId':'root','path':'support','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/support-QIJVJREF.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/terms-of-use':{'id':'routes/terms-of-use','parentId':'root','path':'terms-of-use','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/terms-of-use-JP4YGTLE.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/_static/build/manifest-75957277.js'};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,QAAM,EAAE,YAAY,IAAI,QAAQ,aAE1B,SAAS,YAAY;AAE3B,WAAO,OAAO,EAAE,oBAAoB,SAAS,CAAC;AAE9C,YAAQ,KAAK,UAAU,MAAM,OAAO,MAAM,CAAC;AAC3C,YAAQ,KAAK,WAAW,MAAM,OAAO,MAAM,CAAC;AAAA;AAAA;;;ACP5C;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqC;;;ACArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAMA,yBAA4B,mBAE5B,cAAyB,4BACzB,eAA4B,6BAC5B,eAAkB,2BAClB,gBAAuC,6BAiCjC,2DA/BA,cAAc;AAEL,SAAR,cACL,SACA,oBACA,iBACA,cACA;AACA,aAAO,aAAAA,SAAM,QAAQ,QAAQ,IAAI,YAAY,CAAC,IAC1C;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACN;AAEA,SAAS,iBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAM,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,aAAa;AACX,cAAM,OAAO,IAAI,+BAAY;AAE7B,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,qBAAS,MAAM;AAAA,cACjB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,+BAAqB,KACrB,QAAQ,MAAM,KAAK;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;AAEA,SAAS,qBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAM,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,eAAe;AACb,cAAM,OAAO,IAAI,+BAAY;AAE7B,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,qBAAS,MAAM;AAAA,cACjB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,kBAAQ,MAAM,KAAK,GACnB,qBAAqB;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;;;ACtHA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAC,eAAqB,4BACrBC,gBAOO;;;;;;ACTP,IAAAC,eAAyB,4BACzBC,yBAAsB;;;ACDtB,uBAAgB,0CAChB,kBAAmB,8BACnB,wBAAsB,oCACtB,wBAA4B;;;ACHrB,IAAM,wBAAqC,oBAAI,IAAI;AAAA,EACtrDH,IAAM,yBAAyB;AAa/B,SAAS,eAAe,OAAwB;AAC9C,SAAO,sBAAsB,IAAI,MAAM,MAAM,GAAG,EAAE,EAAE;AACtD;AAEA,eAAsB,YAAY,IAAwE;AAExG,MAAM,SAAS,OADJ,MAAM,iBAAAC,QAAI,OAAO,GACJ,KAAK,MAAM;AAAA,IACjC,wBAAwB;AAAA,IACxB,2BAA2B,EAAE,OAAO,GAAG;AAAA,EACzC,CAAC,GAEK,CAAC,MAAM,IAAI,OAAO;AACxB,SAAI,SAAe,EAAE,IAAI,OAAO,IAAI,OAAO,OAAO,OAAO,SAAS,OAAO,QAAQ,IAC1E;AACT;AAEA,eAAsB,eAAe,OAAsB;AACzD,SAAO,gBAAY,sBAAAC,SAAgB,KAAK,CAAC;AAC3C;AAEA,eAAe,uBAAuB,OAAsB;AAE1D,MAAM,SAAS,OADJ,MAAM,iBAAAD,QAAI,OAAO,GACJ,SAAS,MAAM;AAAA,IACrC,wBAAwB;AAAA,IACxB,2BAA2B,EAAE,WAAO,sBAAAC,SAAgB,KAAK,EAAE;AAAA,EAC7D,CAAC,GAEK,CAAC,MAAM,IAAI,OAAO;AAExB,SAAI,SAAe,EAAE,MAAM,OAAO,SAAS,IACpC;AACT;AAEA,IAAM,iBAAiB,CAAC,UAA0B,MAAM,MAAM,GAAG,EAAE,GAAG,MAAM,GAAG,EAAE,KAAK,MAAM,MAAM,MAAM,GAAG,EAAE;AAE7G,eAAsB,aAAa;AAAA,EACjC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAyE;AACvE,MAAM,aAAa,eAAe,KAAK,GACjC,OAAO,MAAM,eAAe,UAAU;AAC5C,MAAI;AACF,WAAO;AAIT,MAAG,CADiB,eAAe,UAAU;AAE3C,UAAM,MAAM,gCAAgC;AAG9C,MAAM,aAAS,sBAAAA,SAAgB,UAAU;AAEzC,SADW,MAAM,iBAAAD,QAAI,OAAO,GACnB,KAAK,IAAI;AAAA,IAChB,IAAI;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS;AAAA,EACX,CAAC;AAED,MAAM,UAAU,MAAM,eAAe,UAAU;AAC/C,mCAAAE,SAAU,SAAS,4DAA4D,GAExE;AACT;AAEA,eAAsB,WACpB,OACA,UACA;AACA,MAAM,aAAa,eAAe,KAAK;AAGvC,MAAG,CADiB,eAAe,UAAU;AAE3C,UAAM,MAAM,gCAAgC;AAG9C,MAAM,iBAAiB,MAAM,gBAAAC,QAAO,KAAK,UAAU,EAAE,GAC/C,aAAS,sBAAAF,SAAgB,UAAU,GACnC,KAAK,MAAM,iBAAAD,QAAI,OAAO;AAC5B,QAAM,GAAG,SAAS,IAAI;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,EACZ,CAAC,GAED,MAAM,GAAG,KAAK,IAAI;AAAA,IAChB,IAAI;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,EACX,CAAC;AAED,MAAM,OAAO,MAAM,eAAe,UAAU;AAC5C,mCAAAE,SAAU,MAAM,4DAA4D,GAErE;AACT;AASA,eAAsB,YACpB,OACA,UACA;AACA,MAAM,eAAe,MAAM,uBAAuB,KAAK;AAOvD,MALI,GAAC,gBAKD,CADY,MAAM,gBAAAE,QAAO,QAAQ,UAAU,aAAa,IAAI;AAKhE,WAAO,eAAe,KAAK;AAC7B;AAEA,eAAsB,aACpB,IACA;AACA,MAAM,OAAO,MAAM,YAAY,EAAE;AACjC,SAAK,OAGE,KAAK,UAFH;AAGX;;;AE1JA,IAAAC,eAAiD,4BACjD,oBAA8B,uBAC9B,yBAA6B,4BAC7B,4BAIO,+BACPC,yBAAsB;AAaf,IAAM,qBAAiB,yCAA2B;AAAA,EACrD,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS,CAAC,QAAQ,IAAI,kBAAkB,EAAE;AAAA,IAC1C,QAAQ;AAAA,EACV;AACF,CAAC,GAEQ,gBAAgB,IAAI,gCAAwB,gBAAgB;AAAA,EACrE,YAAY;AACd,CAAC,GAGK,cAAc,CAAC,aAA8B;AACjD,MAAMC,QAAO,QAAQ;AACrB,SAAI,QAAQ,IAAI,YAAY,YACnB,kCAAkCA,UAChC,QAAQ,IAAI,YAAY,eAC1B,0BAA0BA,UAE5B,yBAAyBA;AAClC,GAEM,yBAAyB,QAAQ,IAAI,wBACrC,6BAA6B,QAAQ,IAAI;AAAA,IAE/C,uBAAAC,SAAU,wBAAwB,iCAAiC;AAAA,IACnE,uBAAAA,SAAU,4BAA4B,qCAAqC;AAE3E,IAAM,iBAAiB,IAAI;AAAA,EACzB;AAAA,IACE,UAAU;AAAA,IACV,cAAc;AAAA,IACd,aAAa,YAAY,0CAAgB,MAAM;AAAA,EACjD;AAAA,EACA,OAAO,EAAE,aAAa,cAAc,aAAa,QAAQ,MAAM;AAE7D,QAAM,OAAO,MAAM,aAAa;AAAA,MAC9B,OAAO,QAAQ,OAAO,GAAG;AAAA,MACzB,SAAS,QAAQ,OAAO,GAAG;AAAA,MAC3B,UAAU,QAAQ;AAAA,MAClB,YAAY,QAAQ;AAAA,MACpB,MAAM,QAAQ;AAAA,IAChB,CAAC;AACD,mBAAQ,IAAI,GAAG,KAAK,iCAAiC,GAC9C;AAAA,MACL,QAAQ,KAAK;AAAA,MACb;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAEA,cAAc,IAAI,gBAAgB,0CAAgB,MAAM;AAExD,IAAM,0BAA0B,QAAQ,IAAI,yBACtC,8BAA8B,QAAQ,IAAI;AAAA,IAEhD,uBAAAA,SAAU,yBAAyB,kCAAkC;AAAA,IACrE,uBAAAA,SAAU,6BAA6B,sCAAsC;AAE7E,IAAM,kBAAkB,IAAI;AAAA,EAC1B;AAAA,IACE,UAAU,wBAAwB,MAAM,GAAG,EAAE;AAAA,IAC7C,cAAc;AAAA,IACd,aAAa,YAAY,0CAAgB,OAAO;AAAA,IAEhD,OAAO,CAAC,YAAY,OAAO;AAAA,EAC7B;AAAA,EACA,OAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF,MAAyB;AACvB,QAAM,QAAQ,QAAQ,OAAO,OACvB,UAAU,QAAQ,OAAO;AAE/B,QAAI,CAAC;AACH,YAAM,MAAM,8BAA8B;AAI5C,QAAM,OAAO,MAAM,aAAa;AAAA,MAC9B;AAAA,MACA,SAAS,WAAW;AAAA,MACpB,UAAU,QAAQ;AAAA,MAClB,YAAY,QAAQ;AAAA,MACpB,MAAM,QAAQ;AAAA,IAChB,CAAC;AAED,mBAAQ,IAAI,GAAG,KAAK,kCAAkC,GAE/C;AAAA,MACL,QAAQ,KAAK;AAAA,MACb,aAAa,QAAQ;AAAA,MACrB,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAEA,cAAc,IAAI,iBAAiB,0CAAgB,OAAO;AAG1D,cAAc;AAAA,EACZ,IAAI,oCAAa,OAAO,EAAE,QAAQ,MAAM;AACtC,+BAAAA,SAAU,SAAS,oDAAoD;AACvE,QAAM,WAAW,QAAQ,UACrB,QAAQ,SAAS,IAAI,OAAO,GAC5B,WAAW,SAAS,IAAI,UAAU;AAEtC,+BAAAA,SAAU,OAAO,SAAU,UAAU,wBAAwB,OAC7D,uBAAAA,SAAU,OAAO,YAAa,UAAU,2BAA2B,GAEnE,QAAQ,IAAI,GAAG,0CAA0C;AACzD,QAAI,OAAO,MAAM,YAAY,OAAO,QAAQ;AAE5C,QAAI,CAAC;AACD,gBAAM;AAAA,QACF,EAAE,QAAQ,EAAE,OAAO,MAAM,UAAU,iCAAiC,EAAE;AAAA,QACtE,EAAE,QAAQ,IAAI;AAAA,MAClB;AAEJ,mBAAQ,IAAI,GAAG,SAAS,KAAK,sCAAsC,GAC5D;AAAA,MACL,QAAQ,KAAK;AAAA,IACf;AAAA,EACF,CAAC;AAAA,EACD;AACF;;;IHpJA,uBAAAC,SAAU,QAAQ,IAAI,gBAAgB,4BAA4B;AAelE,eAAsB,WAAW,SAAkB;AACjD,MAAM,SAAS,QAAQ,QAAQ,IAAI,QAAQ;AAC3C,SAAO,eAAe,WAAW,MAAM;AACzC;AAEA,eAAsB,UACpB,SACiC;AACjC,MAAM,WAAW,MAAM,cAAc,gBAAgB,OAAO;AAG5D,SAAO,qCAAU;AACnB;AAEA,eAAsB,QAAQ,SAAkB;AAC9C,MAAM,SAAS,MAAM,UAAU,OAAO;AAEtC,MAAI,WAAW;AAAW,WAAO;AAEjC,MAAM,OAAO,MAAM,YAAY,MAAM;AACrC,MAAI;AAAM,WAAO;AAEjB,QAAM,MAAM,OAAO,OAAO;AAC5B;AAEA,eAAsB,cACpB,SACA,aAAqB,IAAI,IAAI,QAAQ,GAAG,EAAE,UAC1C;AACA,MAAM,SAAS,MAAM,UAAU,OAAO;AACtC,MAAI,CAAC,QAAQ;AACX,QAAM,eAAe,IAAI,gBAAgB,CAAC,CAAC,cAAc,UAAU,CAAC,CAAC;AACrE,cAAM,uBAAS,cAAc,cAAc;AAAA,EAC7C;AACA,SAAO;AACT;AAEA,eAAsB,YAAY,SAAkB;AAClD,MAAM,SAAS,MAAM,cAAc,OAAO,GAEpC,OAAO,MAAM,YAAY,MAAM;AACrC,MAAI;AAAM,WAAO;AAEjB,QAAM,MAAM,OAAO,OAAO;AAC5B;AA0BA,eAAsB,OAAO,SAAkB;AAC7C,MAAM,UAAU,MAAM,WAAW,OAAO;AACxC,aAAO,uBAAS,KAAK;AAAA,IACnB,SAAS;AAAA,MACP,cAAc,MAAM,eAAe,eAAe,OAAO;AAAA,IAC3D;AAAA,EACF,CAAC;AACH;;;ADvEQ,IAAAC,0BAAA,kCAdK,QAAuB,MAAM;AAAA,EACxC,EAAE,KAAK,cAAc,MAAM,iBAAsB;AAAA,EAEjD,EAAE,KAAK,QAAQ,MAAM,uBAAuB;AAC9C,GAEa,SAAS,OAAO,EAAE,QAAQ,UAC9B,mBAAK,EAAE,MAAM,MAAM,QAAQ,OAAO,EAAE,CAAC;AAG/B,SAAR,MAAuB;AAC5B,SACE,oDAAC,UAAK,MAAK,MAAK,WAAU,oCACxB;AAAA,wDAAC,UACC;AAAA,0DAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,oDAAC,UAAK,MAAK,YAAW,SAAQ,wCAA9B;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MACnE,oDAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,oDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAEA,oDAAC,YAAO,OAAK,IAAC,KAAI,8DAAlB;AAAA;AAAA;AAAA;AAAA,WAA6E;AAAA,IAC7E,oDAAC,YAAO,yBAAyB;AAAA,MAC/B,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOV,KARA;AAAA;AAAA;AAAA;AAAA,WAQE;AAAA,IACF,oDAAC,UAAK,WAAU,kCACd;AAAA,0DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,oDAAC,mCAAkB,QAAQ,CAAC,QAAQ,IAAI,YAAxC;AAAA;AAAA;AAAA;AAAA,aAAkD;AAAA,MAClD,oDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,oDAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SAJd;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAvBF;AAAA;AAAA;AAAA;AAAA,SAwBA;AAEJ;;;AKpDA;AAAA;AAAA,gBAAAC;AAAA;AAIO,IAAIC,UAAS,CAAC,EAAE,SAAS,OAAO,MAC9B,cAAc,aAAa,iCAAQ,UAAW,SAAS;AAAA,EAC5D,iBAAiB;AAAA,EACjB,iBAAiB;AACnB,CAAC;;;ACRH;AAAA;AAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AACA,IAAAC,eAA+B,4BAC/B,2BAA4B,uCAC5BC,gBAQO,6BACPA,gBAAyD;AAEzD,IAAAC,yBAAsB;;;ACdtB,IAAAC,oBAAgB,0CAChB,cAAiB;AAqDjB,IAAM,SAAS,CAAC,OAAyC,GAAG,QAAQ,aAAa,EAAE,GAC7E,SAAS,CAAC,OAAyC,WAAW,MAE9D,qBAAqB,KAAK;AAEhC,eAAsB,WAAW;AAAA,EAC/B;AAAA,EACA;AACF,GAA4D;AAG1D,MAAM,SAAS,OAFJ,MAAM,kBAAAC,QAAI,OAAO,GAEJ,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,OAAO,EAAE,EAAE,CAAC;AAElE,SAAI,SACK;AAAA,IACL,QAAQ,OAAO;AAAA,IACf,IAAI,OAAO,OAAO,EAAE;AAAA,IACpB,OAAO,OAAO;AAAA,IACd,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,WAAW,OAAO;AAAA,IAClB,WAAW,OAAO;AAAA,IAClB,gBAAgB,OAAO;AAAA,IACvB,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,iBAAiB,OAAO;AAAA,EAC1B,IAEK;AACT;AAEA,eAAsB,oBAAoB;AAAA,EACxC;AACF,GAAoI;AAQlI,MAAM,SALS,OAFJ,MAAM,kBAAAA,QAAI,OAAO,GAEJ,QAAQ,MAAM;AAAA,IACpC,wBAAwB;AAAA,IACxB,2BAA2B,EAAE,OAAO,OAAO;AAAA,EAC7C,CAAC,GAEoB,MAAM,IAAI,CAAC,OAAY;AAAA,IAC1C,OAAO,EAAE;AAAA,IACT,OAAO,EAAE;AAAA,IACT,IAAI,OAAO,EAAE,EAAE;AAAA,IACf,WAAW,EAAE;AAAA,IACb,gBAAgB,EAAE;AAAA,IAClB,WAAW,EAAE;AAAA,EACf,EAAE;AACF,eAAM,KAAK,CAAC,IAAI,QAAQ,GAAG,kBAAkB,MAAM,GAAG,kBAAkB,EAAE,GACnE;AACT;AAEA,eAAsB,cAAc;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AACF,GAAiE;AAC/D,MAAM,KAAK,MAAM,kBAAAA,QAAI,OAAO,GAEtB,eAAe,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,GAC3C,iBAAiB,eAAgB,KAAK,oBAEtC,SAAS,MAAM,GAAG,QAAQ,IAAI;AAAA,IAClC,IAAI;AAAA,IACJ,IAAI,WAAO,YAAAC,SAAK,CAAC;AAAA,IACjB;AAAA,IACA;AAAA,IACA,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,gBAAgB;AAAA,EAClB,CAAC;AACD,SAAO;AAAA,IACL,IAAI,OAAO,OAAO,EAAE;AAAA,IACpB,QAAQ,OAAO;AAAA,IACf,OAAO,OAAO;AAAA,IACd,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,WAAW,OAAO;AAAA,IAClB,WAAW,OAAO;AAAA,IAClB,gBAAgB,OAAO;AAAA,IACvB,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,iBAAiB,OAAO;AAAA,EAC1B;AACF;AAEA,eAAsB,cAAc;AAAA,EAClC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAkF;AAChF,MAAM,KAAK,MAAM,kBAAAD,QAAI,OAAO,GACtB,eAAe,MAAM,GAAG,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,OAAO,EAAE,EAAE,CAAC;AAExE,MAAI,CAAC;AACH,UAAM,MAAM,WAAW,oBAAoB;AAE7C,MAAM,aAAa,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,GACzC,SAAS,MAAM,GAAG,QAAQ,IAAI;AAAA,IAClC,GAAG;AAAA,IACH,WAAW,aAAa,aAAa;AAAA,IACrC,YAAY,cAAc,aAAa;AAAA,IACvC,iBAAiB,aAAa;AAAA,IAC9B,gBAAgB;AAAA,EAClB,CAAC;AAED,SAAO;AAAA,IACL,IAAI,OAAO,OAAO,EAAE;AAAA,IACpB,QAAQ,OAAO;AAAA,IACf,OAAO,OAAO;AAAA,IACd,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,WAAW,OAAO;AAAA,IAClB,WAAW,OAAO;AAAA,IAClB,gBAAgB,OAAO;AAAA,IACvB,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,iBAAiB,OAAO;AAAA,EAC1B;AACF;AAEA,eAAsB,6BAA6B;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AACF,GAAyE;AACvE,MAAM,KAAK,MAAM,kBAAAA,QAAI,OAAO,GACtB,eAAe,MAAM,GAAG,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,OAAO,EAAE,EAAE,CAAC;AAExE,MAAI,CAAC;AACH,UAAM,MAAM,WAAW,oBAAoB;AAE7C,MAAM,aAAa,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,GACzC,SAAS,MAAM,GAAG,QAAQ,IAAI;AAAA,IAClC,GAAG;AAAA,IACH,iBAAiB;AAAA,MACf,GAAG,aAAa;AAAA,MAChB,GAAG;AAAA,IACL;AAAA,IACA,gBAAgB;AAAA,EAClB,CAAC;AAED,SAAO;AAAA,IACL,IAAI,OAAO,OAAO,EAAE;AAAA,IACpB,QAAQ,OAAO;AAAA,IACf,OAAO,OAAO;AAAA,IACd,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,WAAW,OAAO;AAAA,IAClB,WAAW,OAAO;AAAA,IAClB,gBAAgB,OAAO;AAAA,IACvB,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,iBAAiB,OAAO;AAAA,EAC1B;AACF;AAGA,eAAsB,qBAAqB;AAAA,EACzC;AAAA,EACA;AACF,GAAmC,WAAwC;AACzE,MAAM,KAAK,MAAM,kBAAAA,QAAI,OAAO,GACtB,eAAe,MAAM,GAAG,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,OAAO,EAAE,EAAE,CAAC;AAExE,MAAI,CAAC;AACH,UAAM,MAAM,WAAW,oBAAoB;AAG7C,MAAM,iBAAiB,OAAO,OAAO,CAAC,GAAG,YAAY;AACrD,EAAK,eAAe,oBAClB,eAAe,kBAAkB,CAAC,IAEhC,eAAe,gBAAgB,aACjC,eAAe,gBAAgB,WAAW,KAAK,SAAS,IAExD,eAAe,gBAAgB,aAAa,CAAC,SAAS;AAExD,MAAM,aAAa,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAC/C,iBAAe,iBAAiB;AAChC,MAAM,SAAS,MAAM,GAAG,QAAQ,IAAI,cAAc;AAElD,SAAO;AAAA,IACL,IAAI,OAAO,OAAO,EAAE;AAAA,IACpB,QAAQ,OAAO;AAAA,IACf,OAAO,OAAO;AAAA,IACd,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,WAAW,OAAO;AAAA,IAClB,WAAW,OAAO;AAAA,IAClB,gBAAgB,OAAO;AAAA,IACvB,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,iBAAiB,OAAO;AAAA,EAC1B;AACF;AAEA,eAAsB,mBAAmB;AAAA,EACvC;AAAA,EACA;AAAA,EACA;AACF,GAA+D;AAC7D,MAAM,KAAK,MAAM,kBAAAA,QAAI,OAAO,GACtB,eAAe,MAAM,GAAG,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,OAAO,EAAE,EAAE,CAAC;AAExE,MAAI,CAAC;AACH,UAAM,MAAM,WAAW,oBAAoB;AAG7C,MAAM,iBAAiB,OAAO,OAAO,CAAC,GAAG,YAAY;AACrD,iBAAe,QAAQ,OACvB,eAAe,iBAAiB,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAC5D,MAAM,SAAS,MAAM,GAAG,QAAQ,IAAI,cAAc;AAElD,SAAO;AAAA,IACL,IAAI,OAAO,OAAO,EAAE;AAAA,IACpB,QAAQ,OAAO;AAAA,IACf,OAAO,OAAO;AAAA,IACd,MAAM,OAAO;AAAA,IACb,OAAO,OAAO;AAAA,IACd,WAAW,OAAO;AAAA,IAClB,WAAW,OAAO;AAAA,IAClB,gBAAgB,OAAO;AAAA,IACvB,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,iBAAiB,OAAO;AAAA,EAC1B;AACF;AAGA,eAAsB,cAAc,EAAE,IAAI,OAAO,GAAmC;AAElF,UADW,MAAM,kBAAAA,QAAI,OAAO,GAClB,QAAQ,OAAO,EAAE,IAAI,QAAQ,IAAI,OAAO,EAAE,EAAE,CAAC;AACzD;;;AClSA,qBAAyB,6BAGzB,mBAAiB,0BA4BX,YAAY,0EAGL,iBAAiB,OAC5B,YACmC;AAMnC,MAAM,OAAO,KAAK,UAAU,OAAO;AACnC,UAAQ,IAAI,IAAI;AAChB,MAAM,SAAS;AAAA,IACb,mBAAmB;AAAA,MACjB,QAAQ;AAAA,QACN,UAAU;AAAA,QACV,aAAa,QAAQ;AAAA,MACvB;AAAA,IACF;AAAA,IACA,aAAa;AAAA,IAGb,UAAU;AAAA,EACZ,GACM,MAAM,IAAI,eAAAE,QAAI,IAAI,EAAE,YAAY,aAAa,CAAC;AACpD,SAAO,IAAI;AAAA,IACT,CAAC,SAAS,WAAW;AACnB,UAAI,YAAY,QAAQ,SAAU,KAAK,MAAM;AAC3C,QAAI,MACF,OAAO,GAAG,IAEV,QAAQ,IAAI;AAAA,MAEhB,CAAC;AAAA,IACH;AAAA,EACF;AACF,GAEa,mBAAmB,CAAC,QACxB,iBAAAC,QAAK,MAAM,GAAG,EAAE,MAGZ,cAAc,CAAC,QACnB,iBAAAA,QAAK,MAAM,GAAG,EAAE;;;AFjDzB,wBAAuB;;;AG1BvB,IAAAC,eAAqB,4BACrBC,kBAAgB;AAGhB,eAAsB,iBAAiB,EAAE,QAAQ,QAAQ,IAAI,GAAoD;AAK7G,MAAI,CAAC,UAAU,CAAC;AACZ,cAAM,mBAAK,EAAE,OAAO,wBAAwB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAElE,MAAI,GAAE,2BAAK,WAAW,OAAO,eAAa,2BAAK,WAAW,eAAe;AACrE,cAAM,mBAAK,EAAE,OAAO,iCAAiC,GAAG,EAAE,QAAS,IAAI,CAAC;AAG5E,MAAM,WAAW;AAAA,IACb,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,SAAS;AAAA,EACb,GACM,KAAK,IAAI,gBAAAC,QAAI,GAAG;AACtB,MAAI;AACA,UAAM,GAAG,WAAW,EAAE,QAAQ,QAAQ,KAAK,IAAI,CAAC,EAAE,QAAQ;AAAA,EAC9D,QAAE;AACE,cAAM,mBAAK,EAAE,OAAO,yBAAyB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACnE;AAEA,MAAM,YAAY,MAAM,GAAG,oBAAoB,aAAa,QAAQ;AACpE,aAAO,mBAAK;AAAA,IACR,WAAW;AAAA,IACX,QAAQ,SAAS;AAAA,IACjB,KAAK,SAAS;AAAA,EAClB,CAAC;AACL;;;AClCA,IAAAC,gBAAqC,6BACrCA,gBAAoC;;;ACQ9B,IAAAC,0BAAA,kCATO,iBAAiB,MAE1B;AAAA,EAAC;AAAA;AAAA,IACC,eAAY;AAAA,IACZ,WAAU;AAAA,IACV,SAAQ;AAAA,IACR,MAAK;AAAA,IACL,OAAM;AAAA,IAEN;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,GAAE;AAAA,UACF,MAAK;AAAA;AAAA,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGA;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACC,GAAE;AAAA,UACF,MAAK;AAAA;AAAA,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGA;AAAA;AAAA;AAAA,EAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,GAIS,eAAe,MACnB;AAAA,EAAC;AAAA;AAAA,IACN,OAAM;AAAA,IACN,MAAK;AAAA,IACL,SAAQ;AAAA,IACR,aAAa;AAAA,IACb,QAAO;AAAA,IACP,WAAU;AAAA,IAEV;AAAA,MAAC;AAAA;AAAA,QACC,eAAc;AAAA,QACd,gBAAe;AAAA,QACf,GAAE;AAAA;AAAA,MAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA;AAAA,EAZK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP;;;AD2CM,IAAAC,0BAAA,kCAxEF,iBAAiB,OAAO,YAAqB;AACjD,MAAI,CAAC,QAAQ;AACX;AAEF,MAAM,aAAa,QAAQ,YACrB,SAAS,IAAI,gBAAgB;AAAA,IACjC,KAAK,WAAW;AAAA,IAChB,QAAQ,WAAW;AAAA,EACrB,CAAC,GACK,WAAW,MAAM,MAAM,oBAAoB,OAAO,SAAS,GAAG,GAC9D,OAAO,MAAM,SAAS,KAAK;AACjC,MAAI,CAAC,SAAS;AACZ,UAAM;AAER,SAAO,KAAK;AACd,GAEM,WAAW,MAAM;AACrB,MAAI,QAAQ;AACZ,SAAC,SAAS,GAAE;AAAC,KAAG,2TAA2T,KAAK,CAAC,KAAG,0kDAA0kD,KAAK,EAAE,OAAO,GAAE,CAAC,CAAC,OAAG,QAAQ;AAAA,EAAK,EAAG,UAAU,aAAW,UAAU,MAAM,GACj+D;AACT;AAEe,SAAR,eAAgC,EAAE,SAAS,YAAY,GAAyE;AACrI,MAAM,CAAC,WAAW,YAAY,QAAI,wBAAiB,EAAE,GAC/C,CAAC,oBAAoB,qBAAqB,QAAI,wBAAuB;AAG3E,+BAAU,MAAM;AACd,IAAI,sBACF,cAAc,kBAAkB,GAElC,eAAe,OAAO,EAAE,KAAK,CAAC,QAAQ;AAClC,mBAAa,GAAG,GAChB,YAAY,WAAW;AAAA,IAC3B,CAAC;AACD,QAAM,WAAW,YAAY,MAAM;AACjC,qBAAe,OAAO,EAAE,KAAK,CAAC,QAAQ;AACpC,qBAAa,GAAG,GAChB,YAAY,WAAW,GACvB,cAAc,QAAQ;AAAA,MACxB,CAAC;AAAA,IACH,GAAG,GAAK;AAER,iCAAsB,QAAQ,GAEvB,MAAM,cAAc,QAAQ;AAAA,EACrC,GAAG,CAAC,CAAC;AAGL,MAAM,iBAAiB,YAAY;AACjC,QAAI,CAAC,QAAQ;AACX,YAAM,MAAM,4CAA4C;AAE1D,QAAM,SAAS,IAAI,gBAAgB;AAAA,MACjC,KAAK,QAAQ,WAAW;AAAA,MACxB,QAAQ,QAAQ,WAAW;AAAA,IAC7B,CAAC,GAEK,UAAU,OADJ,MAAM,MAAM,oBAAoB,OAAO,SAAS,GAAG,GACrC,KAAK;AAE/B,IAAI,SAAS,IACX,SAAS,OAAO,QAAQ,SAAS,IAEjC,KAAK,QAAQ,WAAW,QAAQ;AAAA,EAEpC;AAGA,SACE,wFACG;AAAA,YAAQ,UAAU,KACjB,wFACE;AAAA,0DAAC,QAAG,IAAG,aAAY,WAAU,QAAO;AAAA;AAAA,QAAC,oDAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,eAAgB;AAAA,QAAE;AAAA,WAAvD;AAAA;AAAA;AAAA;AAAA,aAA4F;AAAA,MAC5F,oDAAC,SAAI,WAAU,uEACb;AAAA,4DAAC,OAAE,WAAU,iBAAgB,qEAA7B;AAAA;AAAA;AAAA;AAAA,eAA2E;AAAA,QAC3E,oDAAC,OAAE,WAAU,OAAM,+EAAnB;AAAA;AAAA;AAAA;AAAA,eAAwE;AAAA,QACxE,oDAAC,OAAE,WAAU,OAAM,0DAAnB;AAAA;AAAA;AAAA;AAAA,eAAsD;AAAA,WAHxD;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,IAED,QAAQ,UAAU,KACjB,wFACE;AAAA,0DAAC,QAAG,IAAG,aAAY,WAAU,QAAO,yCAApC;AAAA;AAAA;AAAA;AAAA,aAAsD;AAAA,MACtD,oDAAC,YAAO,WAAU,wBAAuB,SAAS,gBAAgB,UAAU,CAAC,WAC3E;AAAA,4DAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,eAAa;AAAA,QAAE;AAAA,WADjB;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,oDAAC,WAAM,WAAU,SAAQ,uEAAzB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,oDAAC,SAAI,WAAU,eACb,8DAAC,SAAI,WAAU,4BACZ,uBACC,wFACE,8DAAC,SAAI,WAAU,mBACb,8DAAC,SAAI,WAAU,iBACb,8DAAC,WAAM,WAAU,kBAAiB,UAAQ,IAAC,SAAQ,QACjD,8DAAC,YAAO,KAAK,aAAb;AAAA;AAAA;AAAA;AAAA,aAAwB,KAD1B;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIC,KALH;AAAA;AAAA;AAAA;AAAA,aAMA,KAPF;AAAA;AAAA;AAAA;AAAA,aAQA,KAVJ;AAAA;AAAA;AAAA;AAAA,aAYA,KAbF;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA,SAvBF;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,IAED,QAAQ,UAAU,KACjB,wFACE;AAAA,0DAAC,QAAG,IAAG,aAAY,WAAU,QAAO,4CAApC;AAAA;AAAA;AAAA;AAAA,aAAyD;AAAA,MACzD,oDAAC,OAAE,WAAU,gBAAe;AAAA;AAAA,QACyB,oDAAC,sBAAK,IAAG,YAAW,2BAApB;AAAA;AAAA;AAAA;AAAA,eAA+B;AAAA,QAAO;AAAA,WAD3F;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAnDJ;AAAA;AAAA;AAAA;AAAA,SAsDA;AAGJ;;;AEpIA,IAAAC,gBAA4C,kBA8PpCC,0BAAA;AA3PO,SAAR,gBAAiC;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AACF,GAIG;AACD,MAAM,gBAAY,sBAA0B,IAAI,GAC1C,iBAAa,sBAA0B,IAAI,GAC3C,CAAC,eAAe,YAAY,QAAI,wBAAoB,GACpD,CAAC,kBAAkB,mBAAmB,QAAI,wBAAS,CAAC,GACpD,CAAC,gBAAgB,iBAAiB,QAAI,wBAAS,EAAI,GACnD,CAAC,YAAY,aAAa,QAAI,wBAAS,CAAC,kBAAkB,GAC1D,CAAC,WAAW,YAAY,QAAI,wBAAS,EAAK,GAE1C,kBAAkB,MAAM;AAC5B,QAAI,CAAC,UAAU,WAAW,CAAC,WAAW;AACpC;AAGF,QAAM,OAAO,MAAM,sBAAsB;AACzC,cAAU,QAAQ,QAAQ,KAAK,OAC/B,UAAU,QAAQ,SAAS,KAAK,QAChC,WAAW,QAAQ,QAAQ,KAAK,OAChC,WAAW,QAAQ,SAAS,KAAK;AAAA,EACnC,GAEM,oBAAoB,MAAM;AAC9B,QAAI,CAAC,UAAU;AACb;AAEF,QAAM,MAAM,UAAU,QAAQ,WAAW,IAAI;AAC7C,QAAI,CAAC;AACH;AAEF,oBAAgB;AAChB,QAAM,OAAO,MAAM,sBAAsB;AACzC,QAAI,UAAU,OAAO,GAAG,GAAG,KAAK,OAAO,KAAK,MAAM,GAClD,QAAQ,IAAI,MAAM,WAAW,GAC7B,oBAAoB,MAAM,WAAW;AAAA,EACvC;AAEA,QAAM,WAAW,mBACjB,MAAM,UAAU,mBAChB,MAAM,SAAS,mBAEf,MAAM,mBAAmB,MAAM;AAC7B,IAAI,MAAM,eAAe,MACvB,MAAM,cAAc,MAAM,WAAW;AAAA,EAEzC;AAEA,MAAM,2BAA2B,CAC/B,SACA,WACG;AACH,QAAM,MAAM,QAAQ,WAAW,IAAI;AACnC,QAAI,CAAC;AACH;AAIF,QAAI,WAAW,IAGX,OAAO,GACP,OAAO,GACP,QAAQ,GACR,SAAS,GACT,UAAU,GACV,UAAU,GACV,UAAU,GAER,QAAQ,MAAM;AAClB,UAAM,OAAO,OAAO,sBAAsB;AAC1C,cAAQ,QAAQ,KAAK,OACrB,QAAQ,SAAS,KAAK,QAEtB,UAAU,KAAK,MAAM,KAAK,IAAI,KAAK,OAAO,KAAK,MAAM,IAAI,CAAC,GAG1D,IAAI,cAAc,QAClB,IAAI,YAAY,GAChB,IAAI,cAAc,QAClB,IAAI,aAAa,IACjB,IAAI,WAAW,GAAG,GAAG,KAAK,OAAO,KAAK,MAAM;AAI5C,UAAI,cAAc,QAAQ,sBAAsB;AAEhD,gBAAU,YAAY,MACtB,UAAU,YAAY,KAEtB,OAAO,SACP,OAAO,SACP,QAAQ,SACR,SAAS;AAAA,IACX;AAEA,UAAM;AAEN,QAAM,kBAAkB,CAAC,QAAgB,WAAmB;AAE1D,aAAO,KAAK;AAAA,QACV,KAAK,MAAM,SAAS,OAAO,IAAI,KAAK,MAAM,UAAU,CAAC;AAAA,QACrD;AAAA,MACF,GACA,OAAO,KAAK,IAAI,KAAK,MAAM,SAAS,OAAO,IAAI,SAAS,CAAC,GAEzD,QAAQ,KAAK,IAAI,SAAS,QAAQ,QAAQ,IAAI,GAC9C,SAAS,KAAK,IAAI,UAAU,GAAG,QAAQ,SAAS,IAAI,GAGpD,IAAI,UAAU,GAAG,GAAG,QAAQ,OAAO,QAAQ,MAAM,GAIjD,IAAI,WAAW,MAAM,MAAM,OAAO,MAAM;AAAA,IAC1C;AAEA,YAAQ,cAAc,CAAC,MAAM;AAC3B,QAAE,eAAe,GACjB,EAAE,gBAAgB,GAClB,MAAM,GACN,gBAAgB,EAAE,SAAS,EAAE,OAAO,GACpC,WAAW;AAAA,IACb,GAEA,QAAQ,YAAY,CAAC,MAAM;AACzB,QAAE,eAAe,GACjB,EAAE,gBAAgB,GAGlB,WAAW;AACX,UAAM,OAAO,OAAO,sBAAsB;AAC1C,mBAAa;AAAA,QACX,UAAU;AAAA,UACR,OAAO,KAAK;AAAA,UACZ,OAAO,KAAK;AAAA,UACZ,QAAQ,KAAK;AAAA,UACb,SAAS,KAAK;AAAA,QAChB;AAAA,QACA,UAAU;AAAA,MACZ,CAAC;AAAA,IAEH,GAEA,QAAQ,cAAc,CAAC,MAAM;AAK3B,MAJA,EAAE,eAAe,GACjB,EAAE,gBAAgB,GAGb,YAGL,gBAAgB,EAAE,SAAS,EAAE,OAAO;AAAA,IACtC,GAQA,QAAQ;AAAA,MACN;AAAA,MACA,CAAC,MAAM;AACL,YAAM,QAAQ,EAAE,QAAQ;AACxB,eAAO,KAAK,MAAM,MAAM,UAAU,OAAO,GACzC,OAAO,KAAK,MAAM,MAAM,UAAU,OAAO;AACzC,YAAI,aAAa,IAAI,WAAW,aAAa;AAAA,UAC3C,SAAS,MAAM;AAAA,UACf,SAAS,MAAM;AAAA,QACjB,CAAC;AACD,gBAAQ,cAAc,UAAU;AAAA,MAClC;AAAA,MACA;AAAA,IACF,GACA,QAAQ;AAAA,MACN;AAAA,MACA,CAAC,MAAM;AACL,YAAI,aAAa,IAAI,WAAW,WAAW,CAAC,CAAC;AAC7C,gBAAQ,cAAc,UAAU;AAAA,MAClC;AAAA,MACA;AAAA,IACF,GACA,QAAQ;AAAA,MACN;AAAA,MACA,CAAC,MAAM;AACL,YAAI,QAAQ,EAAE,QAAQ,IAClB,aAAa,IAAI,WAAW,aAAa;AAAA,UAC3C,SAAS,MAAM;AAAA,UACf,SAAS,MAAM;AAAA,QACjB,CAAC;AACD,gBAAQ,cAAc,UAAU;AAAA,MAClC;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,sCAAU,MAAM;AACd,IAAI,CAAC,UAAU,WAAW,CAAC,WAAW,WAItC,WAAW,MAAM;AACf,UAAI,GAAC,UAAU,WAAW,CAAC,WAAW,UAItC;AAAA,YADA,gBAAgB,GACZ,CAAC;AACH,mCAAyB,WAAW,SAAS,UAAU,OAAO;AAAA,aACzD;AACL,cAAM,cAAc,WAAW,QAAQ,sBAAsB,GACvD,MAAM,WAAW,QAAQ,WAAW,IAAI;AAC9C,cAAI,CAAC;AAAK;AAEV,cAAI,cAAc,QAClB,IAAI,YAAY;AAEhB,cAAI,YAAY,mBAAmB,IAC7B,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,UAAU;AAC/B,cAAI;AAAA,YACF,IAAI,YAAY;AAAA,YAChB,IAAI,YAAY;AAAA,YAChB,IAAI,YAAY;AAAA,YAChB,IAAI,YAAY;AAAA,UAClB;AAAA,QACF;AAEA,cAAM,cAAc,MAAM,aAC1B,kBAAkB,EAAK;AAAA;AAAA,IACzB,GAAG,GAAI;AAAA,EAET,GAAG,CAAC,WAAW,YAAY,KAAK,CAAC,GAY/B,oDAAC,SAAI,WAAU,mBACb;AAAA,wDAAC,WAAM,WAAU,SACf,8DAAC,UAAK,WAAU,wBACb,2EADH;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IAEA,oDAAC,SAAI,WAAU,YACb;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,KAAK;AAAA,UACL,WAAU;AAAA;AAAA,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGC;AAAA,MACD,oDAAC,YAAO,KAAK,aAAb;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA,SAL1B;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACA,oDAAC,WAAM,WAAU,SACf,8DAAC,UAAK,WAAU,cAAa,wGAA7B;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,SA/BmB,MAAM;AAC7B,UAAI,kBACA,cAAc,WAAW,kBACzB,SAAS,aAAa,GACtB,cAAc,EAAK,GACnB,aAAa,EAAI;AAAA,QAEvB;AAAA,QAyBM,UAAU,CAAC,iBAAiB,CAAC;AAAA,QAE7B;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,aAAa;AAAA,cACb,QAAO;AAAA,cACP,WAAU;AAAA,cAEV;AAAA,gBAAC;AAAA;AAAA,kBACC,eAAc;AAAA,kBACd,gBAAe;AAAA,kBACf,GAAE;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAaA;AAAA,UAAM;AAAA;AAAA;AAAA,MAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAoBA;AAAA,IACC,aACC,oDAAC,WAAM,WAAU,SACf,8DAAC,UAAK,WAAU,kBAAiB,4CAAjC;AAAA;AAAA;AAAA;AAAA,WAAsD,KADxD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OA3CJ;AAAA;AAAA;AAAA;AAAA,SA6CA;AAEJ;;;AN9QA,sBAAyD;AAoX7C,IAAAC,0BAAA;AA3WZ,IAAM,2BAA2B,aAC3B,wCAAwC,0BAExC,wBAAwB,cACxB,qBAAqB;AAAA,EACzB,CAAC,wBAAwB;AAC3B,GAEa,OAAwB,MAAM,CAAC,EAAE,OAAO,UAAU,CAAC,GAEnDC,UAAS,OAAO,EAAE,QAAQ,QAAQ,MAAkB;AAC/D,MAAM,SAAS,MAAM,cAAc,OAAO;AAC1C,6BAAAC,SAAU,OAAO,WAAW,qBAAqB;AAEjD,MAAM,UAAU,MAAM,WAAW,EAAE,IAAI,OAAO,WAAW,OAAO,CAAC;AACjE,MAAI,CAAC;AACH,UAAM,IAAI,SAAS,aAAa,EAAE,QAAQ,IAAI,CAAC;AAIjD,MAAI,iBAAiB,IACnB,kBAAkB;AACpB,MAAI,QAAQ,WAAW;AACrB,QAAM,OAAO,MAAM,iBAAiB;AAAA,MAClC;AAAA,MACA,QAAQ,QAAQ,UAAU;AAAA,MAC1B,KAAK,QAAQ,UAAU;AAAA,IACzB,CAAC;AACD,QAAI,CAAC,KAAK;AACR,gBAAM,mBAAK,EAAE,OAAO,4BAA4B,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpE,sBADa,MAAM,KAAK,KAAK,GACP;AAAA,EACxB;AACA,MAAI,QAAQ;AACV,QAAI;AAOF,yBADa,OALA,MAAM,iBAAiB;AAAA,QAClC;AAAA,QACA,QAAQ,QAAQ,WAAW;AAAA,QAC3B,KAAK,QAAQ,WAAW;AAAA,MAC1B,CAAC,GACuB,KAAK,GACN,WAEnB,QAAQ,UAAU,sBAGpB,MAAM,mBAAmB;AAAA,QACvB,IAAI,OAAO;AAAA,QACX;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IAEL,QAAE;AACA,cAAQ,KAAK,cAAc,QAAQ,WAAW,qBAAqB;AAAA,IACrE;AAEF,aAAO,mBAAK,EAAE,SAAS,gBAAgB,gBAAgB,CAAC;AAC1D,GAEa,SAAS,OAAO,EAAE,QAAQ,QAAQ,MAAkB;AAC/D,MAAM,SAAS,MAAM,cAAc,OAAO;AAC1C,6BAAAA,SAAU,OAAO,WAAW,qBAAqB;AAEjD,MAAM,WAAW,MAAM,QAAQ,SAAS,GAClC,gBAAgB,SAAS,IAAI,QAAQ;AAC3C,MAAI,OAAO,iBAAkB,YAAY,CAAC;AACxC,eAAO;AAAA,MACL,EAAE,QAAQ,EAAE,MAAM,MAAM,OAAO,qBAAqB,EAAE;AAAA,MACtD,EAAE,QAAQ,IAAI;AAAA,IAChB;AAIF,MADgB,MAAM,aAAa,MAAM,KAC1B;AACb,mBAAQ,IAAI,uBAAuB,SAAS,OACrC,uBAAS,UAAU,uBAAuB;AAKnD,MAFA,QAAQ,IAAI,4BAA4B,GAEpC,SAAS,aAAa,MAAM,oBAA8B;AAC5D,YAAQ,IAAI,kCAAkC;AAC9C,QAAM,MAAM,SAAS,IAAI,KAAK,GACxB,SAAS,SAAS,IAAI,QAAQ;AACpC,QAAI,OAAO,OAAQ,YAAY,IAAI,WAAW;AAC5C,iBAAO;AAAA,QACL,EAAE,QAAQ,EAAE,MAAM,MAAM,OAAO,kBAAkB,EAAE;AAAA,QACnD,EAAE,QAAQ,IAAI;AAAA,MAChB;AAEF,QAAI,OAAO,UAAW,YAAY,OAAO,WAAW;AAClD,iBAAO;AAAA,QACL,EAAE,QAAQ,EAAE,MAAM,MAAM,OAAO,qBAAqB,EAAE;AAAA,QACtD,EAAE,QAAQ,IAAI;AAAA,MAChB;AAEF,QAAM,YAAY,OAAO,UAAU,OAAO,iBAAiB;AAAA,MACzD;AAAA,IACF;AAEA,UAAM,cAAc;AAAA,MAClB,IAAI,OAAO;AAAA,MACX;AAAA,MACA,WAAW;AAAA,QACT;AAAA,QACA;AAAA,MACF;AAAA,MACA,YAAY;AAAA,QACV;AAAA,QACA,KAAK;AAAA,MACP;AAAA,IACF,CAAC,GACD,MAAM,mBAAmB;AAAA,MACvB,IAAI,OAAO;AAAA,MACX;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH,WAAW,SAAS,aAAa,MAAM,sBAAgC;AACrE,YAAQ,IAAI,4BAA4B;AACxC,QAAM,eAAe,SAAS,IAAI,WAAW;AAC7C,QAAI,OAAO,gBAAiB,YAAY,aAAa,WAAW;AAC9D,iBAAO;AAAA,QACL,EAAE,QAAQ,EAAE,MAAM,MAAM,OAAO,wBAAwB,EAAE;AAAA,QACzD,EAAE,QAAQ,IAAI;AAAA,MAChB;AAGF,QAAM,YAAuB,KAAK,MAAM,YAAY;AACpD,YAAQ,IAAI,SAAS,GACrB,MAAM;AAAA,MACJ;AAAA,QACE,IAAI,OAAO;AAAA,QACX;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAAA,EACF,WAAW,SAAS,aAAa,MAAM,4BAAsC;AAC3E,YAAQ,IAAI,iCAAiC;AAC7C,QAAM,qBAAqB,SAAS,IAAI,iBAAiB;AACzD,QAAI,OAAO,sBAAuB,YAAY,mBAAmB,WAAW;AAC1E,iBAAO;AAAA,QACL,EAAE,QAAQ,EAAE,MAAM,MAAM,OAAO,+BAA+B,EAAE;AAAA,QAChE,EAAE,QAAQ,IAAI;AAAA,MAChB;AAEF,QAAM,kBAAmC,KAAK,MAAM,kBAAkB,GAEhE,iBAAiB,MAAM,6BAA6B;AAAA,MACxD,IAAI,OAAO;AAAA,MACX;AAAA,MACA;AAAA,IACF,CAAC;AAED,QAAI,CAAC,eAAe,aAAa,CAAC,eAAe;AAC/C,YAAM,IAAI,SAAS,sDAAsD;AAAA,QACvE,QAAQ;AAAA,MACV,CAAC;AAEH,QAAI,CAAC,eAAe;AAClB,YAAM,IAAI,SAAS,2CAA2C;AAAA,QAC5D,QAAQ;AAAA,MACV,CAAC;AAGH,QAAM,WAAW,MAAM,eAAe;AAAA,MACpC,MAAM;AAAA,MACN,KAAK,QAAQ,IAAI;AAAA,MACjB,SAAS,eAAe;AAAA,MACxB,YAAY,eAAe;AAAA,MAC3B,WAAW,eAAe,UAAU;AAAA,MACpC,YAAY,eAAe,WAAW;AAAA,MACtC,QAAQ,eAAe,UAAU;AAAA,MACjC,cAAc,eAAe,KAAK;AAAA,MAClC,eAAe,eAAe,KAAK;AAAA,MACnC,eAAe,eAAe,gBAAgB;AAAA,MAC9C,eAAe,eAAe,gBAAgB;AAAA,MAC9C,uBAAuB,eAAe,gBAAgB;AAAA,MACtD,aAAa,eAAe,gBAAgB;AAAA,IAC9C,CAAC;AAED,YAAQ,IAAI,eAAe,GAC3B,QAAQ,IAAI,QAAQ,GAEpB,MAAM,mBAAmB;AAAA,MACvB,IAAI,OAAO;AAAA,MACX;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAEA,aAAO,uBAAS,GAAG;AACrB;AASe,SAAR,cAA+B;AAhPtC;AAiPE,MAAM,WAAO,6BAA6B,GACpC,4BAAwB,0BAAW,GACnCC,gBAAW,2BAAY,GACvB,aAAS,yBAAU,GACnB,CAAC,aAAa,cAAc,QAAI;AAAA,IACpC,KAAK,QAAQ,YAAY,mBAAuB;AAAA,EAClD,GACM,CAAC,eAAe,gBAAgB,QAAI,wBAAiB,CAAC,GACtD,CAAC,iBAAiB,kBAAkB,QAAI,wBAAe,GACvD,CAAC,iBAAiB,kBAAkB,QAAI,wBAAS,CAAC,GAClD,CAAC,qBAAqB,sBAAsB,QAChD,wBAAkB,EAAK,GACnB,CAAC,eAAe,gBAAgB,QAAI,wBAAkB,EAAK,GAC3D,CAAC,gBAAgB,iBAAiB,QAAI,wBAAkB,EAAK,GAC7D,CAAC,wBAAwB,yBAAyB,QACtD,wBAAiB,EAAE,GACf,CAAC,UAAU,WAAW,QAAI,wBAAkC,GAC5D,kBAAc,8BAAe,GAC7B,CAAC,iBAAiB,kBAAkB,QAAI,wBAA0B;AAAA,IACtE,cAAc;AAAA,IACd,cAAc;AAAA,IACd,qBAAqB;AAAA,EACvB,CAAC,GACK,iBACH,sBAAsB,QAAQ,sBAAsB,KAAK,aAC1D,KAAK,gBAGD,YADS,IAAI,gBAAgBA,UAAS,MAAM,EACzB,IAAI,OAAO;AAEpC,+BAAU,MAAM;AA/QlB,QAAAC;AAgRI,KAAIA,MAAA,KAAK,QAAQ,oBAAb,QAAAA,IAA8B,cAChC,0BAA0B,OAAO,GACjC,kBAAkB,EAAI,GACtB,iBAAiB,EAAI,KACZ,KAAK,QAAQ,aAAa,KAAK,QAAQ,SAAS,MACzD,0BAA0B,QAAQ,GAClC,kBAAkB,EAAI;AAAA,EAE1B,GAAG,CAAC,KAAK,QAAQ,eAAe,CAAC;AAEjC,MAAM,oBAAgB,2BAAY,CAAC,QAAiC;AAClE,gBAAY,GAAG;AAAA,EACjB,GAAG,CAAC,CAAC,GAEC,gBAAgB,CAAC,MAAY,SAA4B;AAC7D,mBAAe,iBAAqB,GACpC,iBAAiB,CAAC,GAClB,KAAK,IAAI;AAAA,EACX,GAEM,mBAAmB,CAAC,SAAiB,QAAgB,SAAe;AACxE,qBAAiB,OAAO;AAAA,EAC1B,GAEM,iBAAiB,CAAC,KAAU,SAAc;AAE9C,QAAMC,UAAS,IAAI,gBAAgB;AAAA,MACjC,KAAK,IAAI;AAAA,MACT,QAAQ,IAAI;AAAA,IACd,CAAC;AACD,0BAAsB,OAAO,QAC7B,sBAAsB,KAAK,oBAAoBA,QAAO,SAAS,GAAG;AAQlE,QAAM,WAAW,IAAI,SAAS;AAC9B,aAAS,OAAO,UAAU,mBAA6B,SAAS,CAAC,GACjE,SAAS,OAAO,OAAO,IAAI,GAAG,GAC9B,SAAS,OAAO,UAAU,IAAI,MAAM,GACpC,OAAO,UAAU;AAAA,MACf,QAAQ;AAAA,IACV,CAAC,GACD,eAAe,gBAAoB,GACnC,iBAAiB,CAAC;AAAA,EACpB,GAEM,gBAAgB,CAAC,YAAoB;AACzC,mBAAe,aAAiB;AAAA,EAClC,GAEM,kBAA+D,CAAC,MAAM;AAC1E,8BAA0B,EAAE,OAAO,KAAK,GACxC,uBAAuB,EAAE,OAAO,UAAU,OAAO,GAC7C,EAAE,OAAO,UAAU,YACrB,kBAAkB,EAAI,GAEpB,EAAE,OAAO,UAAU,WAAW,CAAC,kBACjC,kBAAkB,EAAK,GACvB,6BAAU;AAAA,EAEd,GAEM,WAAW,CAAC,cAAyB;AACzC,QAAI,CAAC,WAAW;AACd,cAAQ,MAAM,kCAAkC;AAChD;AAAA,IACF;AACA,YAAQ,IAAI,SAAS;AACrB,QAAM,WAAW,IAAI,SAAS;AAC9B,aAAS,OAAO,UAAU,qBAA+B,SAAS,CAAC,GACnE,SAAS,OAAO,aAAa,KAAK,UAAU,SAAS,CAAC,GACtD,OAAO,UAAU;AAAA,MACf,QAAQ;AAAA,IACV,CAAC,GACD,iBAAiB,EAAI,GACrB,kBAAkB,EAAI;AAAA,EACxB,GAEM,qBAAqB,MAAM;AAC/B,uBAAmB,CAAC;AACpB,QAAM,WAAW,IAAI,SAAS;AAO9B,QANA,SAAS,OAAO,mBAAmB,KAAK,UAAU,eAAe,CAAC,GAClE,SAAS,OAAO,UAAU,2BAAqC,SAAS,CAAC,GACzE,OAAO,UAAU;AAAA,MACf,QAAQ;AAAA,IACV,CAAC,GAEG,UAAU;AAEZ,UAAM,8BAA8B,SAAS,WAAW,IAClD,mBAAmB,IAAI,KAAK,KAAK,QAAQ,iBAAiB,GAAI,GAC9D,cAAU,qBAAI,kBAAkB;AAAA,QACpC,SAAS;AAAA,MACX,CAAC;AACD,yBAAmB,OAAO;AAAA,IAC5B;AAEA,WAAO,SAAS,EAAE,KAAK,EAAE,CAAC,GAC1B,YAAY,WAAW;AAAA,EACzB,GAEM,yBAAsE,CAAC,UAAU;AACrF,uBAAmB;AAAA,MACjB,GAAG;AAAA,MACH,cAAc,MAAM,OAAO,UAAU;AAAA,IACvC,CAAC;AAAA,EACH;AAeA,SACE,oDAAC,SAAI,WAAU,+DACb,8DAAC,SAAI,WAAU,mBACZ;AAAA,iBACC,oDAAC,SAAI,WAAU,4DACb,8DAAC,OAAE,WAAU,OAAO,6BAAmB,cAAvC;AAAA;AAAA;AAAA;AAAA,WAAkD,KADpD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEF,oDAAC,SAAI,WAAU,kBACb;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,OAAM;AAAA,UACN,MAAK;AAAA,UACL,SAAQ;AAAA,UACR,aAAa;AAAA,UACb,QAAO;AAAA,UACP,WAAU;AAAA,UAEV;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,GAAE;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGA;AAAA;AAAA,QAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA;AAAA,MACA,oDAAC,QAAG,WAAU,sCACX,eAAK,QAAQ,SADhB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,WAiBA;AAAA,IACA,oDAAC,SAAI,WAAU,aAAf;AAAA;AAAA;AAAA;AAAA,WAAyB;AAAA,IACxB,KAAK,QAAQ,UAAU,KACtB,wFACE;AAAA,0DAAC,QAAG,IAAG,QAAO,WAAU,QAAO,qDAA/B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,oDAAC,WAAM,WAAU,SACf,8DAAC,UAAK,WAAU,cAAc,yCAA9B;AAAA;AAAA;AAAA;AAAA,aAA0D,KAD5D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA;AAAA,QAAC,yBAAAC;AAAA,QAAA;AAAA,UACC,WAAU;AAAA,UACV,YAAW;AAAA,UACX,kBAAiB;AAAA,UACjB,QAAQ,GAAG,KAAK,QAAQ;AAAA,UACxB,YAAY;AAAA,UAEZ,YAAY;AAAA,UACZ,SAAS;AAAA,UACT,UAAU;AAAA,UAGV,2BAA2B;AAAA,UAC3B,sBAAsB,EAAE,aAAa,UAAU;AAAA,UAC/C,oBAAmB;AAAA,UACnB,eAAe,CAAC,aACd,SAAS,QAAQ,kBAAkB,EAAE;AAAA,UAGvC,YAAY;AAAA,UACZ,UAAU,gBAAgB;AAAA,UAC1B,UAAQ;AAAA;AAAA,QArBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAsBA;AAAA,MACC,gBAAgB,qBACf,oDAAC,WAAM,WAAU,SAAQ,sEAAzB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEF;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,OAAO;AAAA,UACP,KAAI;AAAA,UACJ,QAAQ,gBAAgB;AAAA;AAAA,QAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKC;AAAA,MACA,gBAAgB,oBACf,oDAAC,WAAM,WAAU,SAAQ,iDAAzB;AAAA;AAAA;AAAA;AAAA,aAA0D;AAAA,MAE3D,gBAAgB,qBACf,oDAAC,WAAM,WAAU,SAAQ,kEAAzB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEF,oDAAC,SAAI,WAAU,aAAf;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,SAjD3B;AAAA;AAAA;AAAA;AAAA,WAkDA;AAAA,IAED,KAAK,QAAQ,UAAU,KACtB,wFACE;AAAA,0DAAC,QAAG,IAAG,SAAQ,WAAU,QAAO,qEAAhC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACC,KAAK,QAAQ,SAAS,KACrB,oDAAC,SAAI,WAAU,UACZ,4BACC,wFACE;AAAA,4DAAC,SAAI,WAAU,iCACb;AAAA,8DAAC,WAAM,WAAU,SACf,8DAAC,UAAK,WAAU,aAAY,yDAA5B;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,MAAK;AAAA,cACL,OAAO;AAAA,cACP,UAAU;AAAA,cACV,UAAU,KAAK,QAAQ,SAAS;AAAA,cAEhC;AAAA,oEAAC,YAAO,OAAM,IAAG,UAAQ,IAAC,gCAA1B;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBACA,oDAAC,YAAO,OAAM,UAAS,yBAAvB;AAAA;AAAA;AAAA;AAAA,uBAAgC;AAAA,gBAChC,oDAAC,YAAO,OAAM,SAAQ,gCAAtB;AAAA;AAAA;AAAA;AAAA,uBAAsC;AAAA;AAAA;AAAA,YAXxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAYA;AAAA,aAlBF;AAAA;AAAA;AAAA;AAAA,eA+BA;AAAA,QACC,0BACC,wFACE;AAAA,8DAAC,WAAM,WAAU,SACf,8DAAC,UAAK,WAAU,cAAa,uBAA7B;AAAA;AAAA;AAAA;AAAA,iBAAoC,KADtC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,SAAI,WAAU,sBACb;AAAA,YAAC;AAAA;AAAA,cACC,KAAK;AAAA,cACL,WAAU;AAAA,cACV,UAAQ;AAAA,cACR,SAAQ;AAAA,cAER,8DAAC,YAAO,KAAK,kBAAb;AAAA;AAAA;AAAA;AAAA,qBAA6B;AAAA;AAAA,YAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOA,KARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA,aAbF;AAAA;AAAA;AAAA;AAAA,eAcA;AAAA,QAED,2BAA2B,WAAW,YACrC;AAAA,UAAC;AAAA;AAAA,YACC,OAAO;AAAA,YACP;AAAA,YACA,qBACE,UAAK,QAAQ,oBAAb,mBAA8B;AAAA;AAAA,UAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMC;AAAA,QAEF,0BACC,oDAAC,SAAI,WAAU,iCACb;AAAA,8DAAC,WAAM,WAAU,SACf,8DAAC,UAAK,WAAU,aAAY,sCAA5B;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,MAAK;AAAA,cACL,OAAO,gBAAgB,eAAe,2BAA2B;AAAA,cACjE,UAAU;AAAA,cACV,UAAU,KAAK,QAAQ,SAAS;AAAA,cAEhC;AAAA,oEAAC,YAAO,OAAO,0BAA0B,yBAAzC;AAAA;AAAA;AAAA;AAAA,uBAAkD;AAAA,gBAClD,oDAAC,YAAO,OAAO,uCAAuC,sCAAtD;AAAA;AAAA;AAAA;AAAA,uBAA4E;AAAA;AAAA;AAAA,YAR9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASA;AAAA,aAfF;AAAA;AAAA;AAAA;AAAA,eA4BA;AAAA,QAEF;AAAA,UAAC;AAAA;AAAA,YACC,eAAW,kBAAAC,SAAW,+BAA+B;AAAA,cACnD,SAAS,kBAAkB;AAAA,YAC7B,CAAC;AAAA,YACD,UAAU,CAAC;AAAA,YACX,SAAS;AAAA,YAER;AAAA;AAAA,UAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQA;AAAA,WAlGF;AAAA;AAAA;AAAA;AAAA,aAmGA,KArGJ;AAAA;AAAA;AAAA;AAAA,aAuGA;AAAA,MAEF,oDAAC,SAAI,WAAU,aAAf;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,SA9G3B;AAAA;AAAA;AAAA;AAAA,WA+GA;AAAA,IAED,KAAK,QAAQ,SAAS,KACrB,wFACE;AAAA,0DAAC,kBAAe,SAAS,KAAK,SAAS,eAAvC;AAAA;AAAA;AAAA;AAAA,aAAiE;AAAA,MACjE,oDAAC,SAAI,WAAU,aAAf;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,SAF3B;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,OApMJ;AAAA;AAAA;AAAA;AAAA,SAsMA,KAvMF;AAAA;AAAA;AAAA;AAAA,SAwMA;AAEJ;;;AOxlBA;AAAA;AAAA,gBAAAC;AAAA;AACA,IAAAC,eAAqB,4BACrBC,kBAAgB;AAKhB,eAAsBC,QAAO,EAAE,QAAQ,GAAe;AAClD,MAAM,SAAS,MAAM,cAAc,OAAO,GACpC,MAAM,IAAI,IAAI,QAAQ,GAAG,GACzB,SAAS,IAAI,aAAa,IAAI,QAAQ,GACtC,MAAM,IAAI,aAAa,IAAI,KAAK;AAEtC,MAAI,CAAC,UAAU,CAAC;AACZ,eAAO,mBAAK,EAAE,OAAO,wBAAwB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAEnE,MAAI,GAAE,2BAAK,WAAW,OAAO,eAAa,2BAAK,WAAW,eAAe;AACrE,eAAO,mBAAK,EAAE,OAAO,iCAAiC,GAAG,EAAE,QAAS,IAAI,CAAC;AAG7E,MAAM,WAAW;AAAA,IACb,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,SAAS;AAAA,IACT,4BAA4B,yBAAyB,iBAAiB,GAAG,KAAK,YAAY,GAAG;AAAA,EACjG,GACM,KAAK,IAAI,gBAAAC,QAAI,GAAG;AACtB,MAAI;AACA,UAAM,GAAG,WAAW,EAAE,QAAQ,QAAQ,KAAK,IAAI,CAAC,EAAE,QAAQ;AAAA,EAC9D,QAAE;AACE,eAAO,mBAAK,EAAE,OAAO,yBAAyB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACpE;AAEA,MAAM,YAAY,MAAM,GAAG,oBAAoB,aAAa,QAAQ;AAEpE,aAAO,mBAAK;AAAA,IACR,WAAW;AAAA,IACX,QAAQ,SAAS;AAAA,IACjB,KAAK,SAAS;AAAA,EAClB,CAAC;AACL;;;ACxCA;AAAA;AAAA,gBAAAC;AAAA;AACA,IAAAC,eAAqB,4BACrBC,kBAAgB;AAIhB,IAAM,uBAAuB,uBACvB,uBAAuB;AAE7B,eAAsBC,QAAO,EAAE,QAAQ,GAAe;AAClD,MAAM,SAAS,MAAM,cAAc,OAAO,GACpC,MAAM,IAAI,IAAI,QAAQ,GAAG,GACzB,aAAa,IAAI,aAAa,IAAI,YAAY,GAC9C,cAAc,IAAI,aAAa,IAAI,aAAa,GAChD,YAAY,IAAI,aAAa,IAAI,MAAM,GAGvC,WAAW;AAAA,IACb,QAAQ;AAAA,IACR,KAAK,GAAG,wBAAwB,UAAU,aAAa;AAAA,IACvD,SAAS;AAAA,IACT,aAAa;AAAA,IACb,KAAK;AAAA,EACT,GAGM,YAAY,MADP,IAAI,gBAAAC,QAAI,GAAG,EACK,oBAAoB,aAAa,QAAQ;AAEpE,aAAO,mBAAK;AAAA,IACR,WAAW;AAAA,IACX,QAAQ,SAAS;AAAA,IACjB,KAAK,SAAS;AAAA,IACd,aAAa,SAAS;AAAA,EAC1B,CAAC;AACL;;;AClCA;AAAA;AAAA,iBAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,eAAkD,4BAClDC,gBAAmD;AAEnD,IAAAC,yBAAsB;AAsBd,IAAAC,0BAAA,kCAnBKC,QAAwB,MAAM,CAAC,EAAE,OAAO,UAAU,CAAC,GAEnDC,UAAS,OAAO,EAAE,QAAQ,QAAQ,MAAkB;AAC/D,MAAM,SAAS,MAAM,cAAc,OAAO;AAC1C,6BAAAC,SAAU,OAAO,WAAW,qBAAqB;AAEjD,MAAM,UAAU,MAAM,WAAW,EAAE,IAAI,OAAO,WAAW,OAAO,CAAC;AACjE,MAAI,CAAC;AACH,cAAM,mBAAK,EAAE,OAAO,YAAY,GAAG,EAAE,QAAQ,IAAI,CAAC;AAEpD,aAAO,mBAAK,EAAE,QAAQ,CAAC;AACzB;AAEe,SAARC,aAA6B,OAAqB;AACvD,MAAM,WAAO,6BAA6B;AAE1C,SACE,oDAAC,SAAI,WAAU,yCACb,8DAAC,SAAI,WAAU,2CACb,8DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,SAAO,KADT;AAAA;AAAA;AAAA;AAAA,SAEA,KAHF;AAAA;AAAA;AAAA;AAAA,SAIA;AAEJ;;;AC7BA;AAAA;AAAA,gBAAAC;AAAA,EAAA,cAAAC;AAAA;AAAA,IAAAC,gBAAqC,4BACrCC,yBAAsB;AAGf,IAAIC,UAAS,UAAM,wBAAS,YAAY,GAEpCC,UAAS,OAAO,EAAE,SAAS,OAAO,WACzC,uBAAAC,SAAU,OAAO,UAAU,qCAAqC,GAChE,QAAQ,IAAI,uBAAuB,OAAO,UAAU,GAC7C,cAAc,aAAa,OAAO,UAAU,OAAO;;;ACT9D;AAAA;AAAA;AAAA,cAAAC;AAAA;AAMQ,IAAAC,0BAAA,kCAJKD,QAAwB,MAAM,CAAC,EAAE,OAAO,UAAU,CAAC;AAEjD,SAAR,gBAAiC;AACpC,SACI,oDAAC,YAAO,OAAM,QAAO,QAAO,QAAO,KAAI,kCAAvC;AAAA;AAAA;AAAA;AAAA,SAAqE;AAE7E;;;ACRA;AAAA;AAAA,gBAAAE;AAAA;AACA,IAAAC,gBAAqB,4BACrBC,kBAAgB;AAGhB,IAAMC,wBAAuB,uBACvBC,wBAAuB;AAE7B,eAAsBC,QAAO,EAAE,SAAS,OAAO,GAAe;AAC1D,MAAM,SAAS,MAAM,cAAc,SAAS,GAAG,GAGzC,gBAAgB;AAAA,IAClB,QAAQF;AAAA,IACR,QAAQ,GAAGC,yBAAwB,UAAU,OAAO;AAAA,EACxD,GAGM,UAAU,MADL,IAAI,gBAAAE,QAAI,GAAG,EACG,cAAc,aAAa,EAAE,QAAQ;AAG9D,aAAO,oBAAK;AAAA,IACR;AAAA,EACJ,CAAC;AACL;;;ACxBA;AAAA;AAAA,iBAAAC;AAAA,EAAA,YAAAC;AAAA;AAMQ,IAAAC,0BAAA,kCAJKD,QAAwB,MAAM,CAAC,EAAE,OAAO,UAAU,CAAC;AAEjD,SAARD,iBAAiC;AACpC,SACI,oDAAC,YAAO,OAAM,QAAO,QAAO,QAAO,KAAI,gCAAvC;AAAA;AAAA;AAAA;AAAA,SAAmE;AAE3E;;;ACRA;AAAA;AAAA;AAAA,gBAAAG;AAAA,EAAA,YAAAC;AAAA;AACA,IAAAC,gBAAqB,4BACrBC,gBAA0C;AAiB9B,IAAAC,2BAAA,kCAdCC,QAAwB,MAAM,CAAC,EAAE,OAAO,oBAAoB,CAAC,GAE7DC,UAAS,OAAO,EAAE,QAAQ,MAAkB;AACvD,MAAM,OAAO,MAAM,YAAY,OAAO;AAEtC,aAAO,oBAAK,EAAE,KAAK,CAAC;AACtB;AAEe,SAAR,cAA+B;AAClC,MAAM,WAAO,6BAA6B;AAC1C,SACE,qDAAC,SAAI,WAAU,yCACb,+DAAC,SAAI,WAAU,qCACb;AAAA,yDAAC,SAAI,WAAU,8BACb;AAAA,2DAAC,QAAG,WAAU,cAAa,uBAA3B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,qDAAC,OAAE,WAAU,cAAa;AAAA;AAAA,QAAQ,KAAK,KAAK;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA,aAAkD;AAAA,MAClD,qDAAC,OAAE,WAAU,cAAa;AAAA;AAAA,QAAoB,KAAK,KAAK;AAAA,WAAxD;AAAA;AAAA;AAAA;AAAA,aAAgE;AAAA,SALlE;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACA,qDAAC,SAAI,WAAU,aAAf;AAAA;AAAA;AAAA;AAAA,WAAyB;AAAA,IACzB,qDAAC,sBAAK,QAAO,WAAU,QAAO,QAC5B,+DAAC,YAAO,WAAU,wBAAuB,sBAAzC;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,qDAAC,SAAI,WAAU,mCACb;AAAA;AAAA,QAAC;AAAA;AAAA,UACG,WAAU;AAAA,UACV,IAAI;AAAA,YACF,UAAU;AAAA,UACZ;AAAA,UACD;AAAA;AAAA,QALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACG,WAAU;AAAA,UACV,IAAI;AAAA,YACF,UAAU;AAAA,UACZ;AAAA,UACD;AAAA;AAAA,QALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,WAiBF;AAAA,OA/BA;AAAA;AAAA;AAAA;AAAA,SAgCA,KAjCF;AAAA;AAAA;AAAA;AAAA,SAkCA;AAEJ;;;ACpDF;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AAAA,IAAAC,gBAKO,4BACPA,gBAAqB,4BACrBC,iBAAwE,6BACxEC,qBAAuB,gCACvBC,mBAAoC,qBACpCF,iBAA0B;AAuEhB,IAAAG,2BAAA,kCA9DGC,QAAwB,MAAM,CAAC,EAAE,OAAO,UAAU,CAAC,GAEnDC,WAAS,OAAO,EAAE,QAAQ,MAAkB;AACvD,MAAM,SAAS,MAAM,cAAc,OAAO,GACpC,mBAAmB,MAAM,oBAAoB,EAAE,OAAO,CAAC;AAC7D,aAAO,oBAAK,EAAE,iBAAiB,CAAC;AAClC,GAEaC,UAAS,OAAO,EAAE,QAAQ,QAAQ,MAAkB;AAC/D,MAAM,SAAS,MAAM,cAAc,OAAO,GAEpC,aADW,MAAM,QAAQ,SAAS,GACb,IAAI,WAAW;AAC1C,SAAI,OAAO,aAAc,YAAY,UAAU,WAAW,QACjD;AAAA,IACL,EAAE,QAAQ,CAAE,EAAE;AAAA,IACd,EAAE,QAAQ,IAAI;AAAA,EAChB,KAGF,MAAM,cAAc,EAAE,IAAI,WAAW,OAAO,CAAC,OAEtC,wBAAS,MAAM;AACxB;AAEe,SAAR,eAAgC;AACrC,MAAM,WAAO,8BAA6B,GACpC,kBAAc,+BAAe,GAC7B,aAAS,0BAAU,GACnB,uBAAuB,CAAC,UAAwB;AACpD,YAAQ,OAAO;AAAA,MACb,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AAEA,gCAAU,MAAM;AACd,QAAM,WAAW,YAAY,MAAM;AACjC,kBAAY,WAAW;AAAA,IACzB,GAAG,GAAI;AAEP,WAAO,MAAM,cAAc,QAAQ;AAAA,EACrC,GAAG,CAAC,CAAC;AAEL,MAAMC,iBAAgB,CAAC,OAAe;AACpC,QAAM,WAAW,IAAI,SAAS;AAC9B,aAAS,OAAO,aAAa,EAAE,GAC/B,OAAO,UAAU;AAAA,MACf,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AACA,SACE,qDAAC,SAAI,WAAU,qCACb,+DAAC,SAAI,WAAU,0BACb;AAAA,yDAAC,SAAI,WAAU,6BACb,+DAAC,QAAG,WAAU,6CAA4C,wBAA1D;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IAEA,qDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,IACH,KAAK,iBAAiB,WAAW,IAChC,qDAAC,OAAE,WAAU,OAAM,+BAAnB;AAAA;AAAA;AAAA;AAAA,WAAkC,IAElC,qDAAC,QACE,eAAK,iBAAiB,IAAI,CAAC,SAAS,QACnC,qDAAC,QAAoB,WAAU,eAC7B;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,IAAI,QAAQ;AAAA,QAEZ;AAAA,+DAAC,SAAI,WAAU,kBACb;AAAA;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,MAAK;AAAA,gBACL,SAAQ;AAAA,gBACR,aAAa;AAAA,gBACb,QAAO;AAAA,gBACP,WAAU;AAAA,gBAEV;AAAA,kBAAC;AAAA;AAAA,oBACC,eAAc;AAAA,oBACd,GAAE;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAYA;AAAA,YACA,qDAAC,UAAK,WAAU,gDACb,aAAG,QAAQ,WADd;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,qDAAC,UAAK,WAAU,4CACb,kBAAQ,kBAAkB,OAAG,sCAAoB,IAAI,KAAK,QAAQ,iBAAiB,GAAI,CAAC,WAD3F;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAnBF;AAAA;AAAA;AAAA;AAAA,iBAoBA;AAAA,UAEA,qDAAC,SAAI,WAAU,kBACb;AAAA,iEAAC,UAAK,WAAU,mCACd;AAAA,mEAAC,UAAK,eAAW,mBAAAC,SAAW,sFAAsF;AAAA,gBAChH,cAAc,QAAQ,UAAU;AAAA,gBAChC,QAAU,QAAQ,UAAU;AAAA,cAC9B,CAAC,KAHD;AAAA;AAAA;AAAA;AAAA,qBAGI;AAAA,cACJ,qDAAC,UAAK,eAAW,mBAAAA,SAAW,6CAA6C;AAAA,gBACvE,eAAe,QAAQ,QAAQ;AAAA,gBAC/B,cAAc,QAAQ,UAAU;AAAA,gBAChC,gBAAgB,QAAQ,UAAU;AAAA,gBAClC,cAAc,QAAQ,UAAU;AAAA,cAClC,CAAC,KALD;AAAA;AAAA;AAAA;AAAA,qBAKI;AAAA,iBAVN;AAAA;AAAA;AAAA;AAAA,mBAWA;AAAA,YACA,qDAAC,UAAK,WAAU,+BAEb,aAAG,qBAAqB,QAAQ,KAAK,OAFxC;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YACA,qDAAC,YAAO,SAAS,CAAC,MAAM;AACtB,gBAAE,gBAAgB,GAClB,EAAE,eAAe,GACjBD,eAAc,QAAQ,EAAE;AAAA,YAC1B,GACE;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,MAAK;AAAA,gBACL,SAAQ;AAAA,gBACR,aAAa;AAAA,gBACb,QAAO;AAAA,gBACP,WAAU;AAAA,gBAEV;AAAA,kBAAC;AAAA;AAAA,oBACC,eAAc;AAAA,oBACd,gBAAe;AAAA,oBACf,GAAE;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAaA,KAlBF;AAAA;AAAA;AAAA;AAAA,mBAmBA;AAAA,eApCF;AAAA;AAAA;AAAA;AAAA,iBAqCA;AAAA;AAAA;AAAA,MA/DF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAgEA,KAjEO,QAAQ,IAAjB;AAAA;AAAA;AAAA;AAAA,WAkEA,CACD,KArEH;AAAA;AAAA;AAAA;AAAA,WAsEA;AAAA,OAjFJ;AAAA;AAAA;AAAA;AAAA,SAmFA,KApFF;AAAA;AAAA;AAAA;AAAA,SAqFA;AAEJ;;;ACrKA;AAAA;AAAA,gBAAAE;AAAA,EAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AACA,IAAAC,gBAA+B,4BAC/BC,iBAA2D,6BAC3DA,iBAAkC,kBAClCC,6BAAgC;;;ACJhC,IAAAC,iBAA2B,6BAC3BA,iBAAwB,kBAIlB,mBAAmB;AASlB,SAAS,aACd,IACA,kBAA0B,kBAC1B;AAKA,SAJI,CAAC,MAAM,OAAO,MAAO,YAIrB,CAAC,GAAG,WAAW,GAAG,KAAK,GAAG,WAAW,IAAI,IACpC,kBAGF;AACT;AAQO,SAAS,eACd,IACqC;AACrC,MAAM,qBAAiB,2BAAW,GAC5B,YAAQ;AAAA,IACZ,MAAM,eAAe,KAAK,CAACC,WAAUA,OAAM,OAAO,EAAE;AAAA,IACpD,CAAC,gBAAgB,EAAE;AAAA,EACrB;AACA,SAAO,+BAAO;AAChB;AAEA,SAAS,OAAO,MAAyB;AACvC,SAAO,QAAQ,OAAO,QAAS,YAAY,OAAO,KAAK,SAAU;AACnE;AAEO,SAAS,kBAAoC;AAClD,MAAM,OAAO,eAAe,MAAM;AAClC,MAAI,GAAC,QAAQ,CAAC,OAAO,KAAK,IAAI;AAG9B,WAAO,KAAK;AACd;AAYO,SAAS,cAAc,OAAiC;AAC7D,SAAO,OAAO,SAAU,YAAY,MAAM,SAAS,KAAK,MAAM,SAAS,GAAG;AAC5E;;;ADUI,IAAAC,2BAAA,kCArESC,WAAS,OAAO,EAAE,QAAQ,MACtB,MAAM,UAAU,OAAO,QACnB,wBAAS,GAAG,QACxB,oBAAK,CAAC,CAAC,GAGHC,UAAS,OAAO,EAAE,QAAQ,MAAkB;AACvD,MAAM,WAAW,MAAM,QAAQ,SAAS,GAClC,QAAQ,SAAS,IAAI,OAAO,GAC5B,WAAW,SAAS,IAAI,UAAU,GAClC,aAAa,aAAa,SAAS,IAAI,YAAY,GAAG,GAAG;AAE/D,SAAK,cAAc,KAAK,IAOpB,OAAO,YAAa,YAAY,SAAS,WAAW,QAC/C;AAAA,IACL,EAAE,QAAQ,EAAE,OAAO,MAAM,UAAU,uBAAuB,EAAE;AAAA,IAC5D,EAAE,QAAQ,IAAI;AAAA,EAChB,IAGE,SAAS,SAAS,QACb;AAAA,IACL,EAAE,QAAQ,EAAE,OAAO,MAAM,UAAU,wBAAwB,EAAE;AAAA,IAC7D,EAAE,QAAQ,IAAI;AAAA,EAChB,IAGS,MAAM,YAAY,OAAO,QAAQ,KAS5C,MAAM,cAAc,aAAa,aAAa,SAAS;AAAA,IACrD,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,SAAS,EAAE,SAAS;AAAA,EACtB,CAAC,OAIM;AAAA,IACL,EAAE,QAAQ,EAAE,OAAO,MAAM,UAAU,+BAA+B,EAAE;AAAA,IACpE,EAAE,QAAQ,IAAI;AAAA,EAChB,SAjBS;AAAA,IACH,EAAE,QAAQ,EAAE,OAAO,MAAM,UAAU,6BAA6B,EAAE;AAAA,IAClE,EAAE,QAAQ,IAAI;AAAA,EAClB,QA1BO;AAAA,IACL,EAAE,QAAQ,EAAE,OAAO,oBAAoB,UAAU,KAAK,EAAE;AAAA,IACxD,EAAE,QAAQ,IAAI;AAAA,EAChB;AAsCJ,GAEaC,QAAwB,MAAM,CAAC,EAAE,OAAO,QAAQ,CAAC,GAOxD,eAA4C,CAAC;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AACF,MACE,qDAAC,uBAAK,QAAQ,SAAS,YAAY,QAAO,QACxC,+DAAC,YAAO,WAAU,cACf;AAAA;AAAA,EACA;AAAA,KAFH;AAAA;AAAA;AAAA;AAAA,OAGA,KAJF;AAAA;AAAA;AAAA;AAAA,OAKA;AAGa,SAAR,YAA6B;AAvFpC;AAwFE,MAAM,CAAC,YAAY,QAAI,gCAAgB,GACjC,aAAa,aAAa,IAAI,YAAY,KAAK,KAC/C,QAAQ,aAAa,IAAI,OAAO,KAAK,IACrC,iBAAa,8BAA6B,GAC1C,eAAW,uBAAyB,IAAI,GACxC,kBAAc,uBAAyB,IAAI;AAEjD,uCAAU,MAAM;AA/FlB,QAAAC,KAAAC,KAAAC,KAAAC;AAgGI,KAAIH,MAAA,yCAAY,WAAZ,QAAAA,IAAoB,SACtBC,MAAA,SAAS,YAAT,QAAAA,IAAkB,WACTC,MAAA,yCAAY,WAAZ,QAAAA,IAAoB,cAC7BC,MAAA,YAAY,YAAZ,QAAAA,IAAqB;AAAA,EAEzB,GAAG,CAAC,UAAU,CAAC,GAGb,qDAAC,SAAI,WAAU,+CACZ;AAAA,aACC,qDAAC,SAAI,WAAU,0BACb;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,OAAM;AAAA,UACN,WAAU;AAAA,UACV,MAAK;AAAA,UACL,SAAQ;AAAA,UAER;AAAA,YAAC;AAAA;AAAA,cACC,eAAc;AAAA,cACd,gBAAe;AAAA,cACf,aAAY;AAAA,cACZ,GAAE;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA;AAAA,QAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA;AAAA,MACA,qDAAC,UAAK,mGAAN;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SAjBF;AAAA;AAAA;AAAA;AAAA,WAkBA;AAAA,IAEF,qDAAC,SAAI,WAAU,cACb;AAAA,MAAC;AAAA;AAAA,QACC,UAAU,2CAAgB;AAAA,QAC1B,OAAM;AAAA,QACN,MACE;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,OAAM;AAAA,YAEN;AAAA,mEAAC,OAAE,UAAS,2BACV;AAAA;AAAA,kBAAC;AAAA;AAAA,oBACC,GAAE;AAAA,oBACF,MAAK;AAAA;AAAA,kBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGC;AAAA,gBACD;AAAA,kBAAC;AAAA;AAAA,oBACC,GAAE;AAAA,oBACF,MAAK;AAAA;AAAA,kBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGC;AAAA,gBACD;AAAA,kBAAC;AAAA;AAAA,oBACC,GAAE;AAAA,oBACF,MAAK;AAAA;AAAA,kBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGC;AAAA,gBACD;AAAA,kBAAC;AAAA;AAAA,oBACC,GAAE;AAAA,oBACF,MAAK;AAAA;AAAA,kBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGC;AAAA,mBAhBH;AAAA;AAAA;AAAA;AAAA,qBAiBA;AAAA,cACA,qDAAC,UACC,+DAAC,cAAS,IAAG,qBACX;AAAA,gBAAC;AAAA;AAAA,kBACC,OAAM;AAAA,kBACN,QAAO;AAAA,kBACP,MAAK;AAAA,kBACL,WAAU;AAAA;AAAA,gBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAKC,KANH;AAAA;AAAA;AAAA;AAAA,qBAOA,KARF;AAAA;AAAA;AAAA;AAAA,qBASA;AAAA;AAAA;AAAA,UAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAkCA;AAAA;AAAA,MAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAwCA,KAzCF;AAAA;AAAA;AAAA;AAAA,WA0CA;AAAA,IACA,qDAAC,SAAI,WAAU,cACb;AAAA,MAAC;AAAA;AAAA,QACC,UAAU,2CAAgB;AAAA,QAC1B,OAAM;AAAA,QACN,MACE;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,SAAQ;AAAA,YACR,SAAQ;AAAA,YACR,OAAM;AAAA,YACN,qBAAoB;AAAA,YAEpB,+DAAC,OACC;AAAA,cAAC;AAAA;AAAA,gBACC,GAAE;AAAA,gBACF,MAAK;AAAA,gBACL,UAAS;AAAA;AAAA,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIC,KALH;AAAA;AAAA;AAAA;AAAA,mBAMA;AAAA;AAAA,UAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAcA;AAAA;AAAA,MAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAoBA,KArBF;AAAA;AAAA;AAAA;AAAA,WAsBA;AAAA,IACA,qDAAC,SAAI,WAAU,WAAU,kBAAzB;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,IAC3B,qDAAC,uBAAK,QAAO,QAAO,WAAU,aAC5B;AAAA,2DAAC,SACC;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,WAAU;AAAA,YACX;AAAA;AAAA,UAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QACA,qDAAC,SAAI,WAAU,QACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,KAAK;AAAA,cACL,IAAG;AAAA,cACH,UAAQ;AAAA,cACR,WAAW;AAAA,cACX,MAAK;AAAA,cACL,MAAK;AAAA,cACL,cAAa;AAAA,cACb,iBAAc,8CAAY,WAAZ,WAAoB,QAAQ,KAAO;AAAA,cACjD,oBAAiB;AAAA,cACjB,WAAU;AAAA;AAAA,YAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWA;AAAA,YACC,8CAAY,WAAZ,mBAAoB,UACnB,qDAAC,SAAI,WAAU,qBAAoB,IAAG,eACnC,qBAAW,OAAO,SADrB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAhBJ;AAAA;AAAA;AAAA;AAAA,eAkBA;AAAA,WAzBF;AAAA;AAAA;AAAA;AAAA,aA0BA;AAAA,MAEA,qDAAC,SACC;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,SAAQ;AAAA,YACR,WAAU;AAAA,YACX;AAAA;AAAA,UAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QACA,qDAAC,SAAI,WAAU,QACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,KAAK;AAAA,cACL,MAAK;AAAA,cACL,MAAK;AAAA,cACL,cAAa;AAAA,cACb,iBAAc,8CAAY,WAAZ,WAAoB,WAAW,KAAO;AAAA,cACpD,oBAAiB;AAAA,cACjB,WAAU;AAAA;AAAA,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASA;AAAA,YACC,8CAAY,WAAZ,mBAAoB,aACnB,qDAAC,SAAI,WAAU,qBAAoB,IAAG,kBACnC,qBAAW,OAAO,YADrB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAdJ;AAAA;AAAA;AAAA;AAAA,eAgBA;AAAA,WAvBF;AAAA;AAAA;AAAA;AAAA,aAwBA;AAAA,MAEA,qDAAC,WAAM,MAAK,UAAS,MAAK,cAAa,OAAO,cAA9C;AAAA;AAAA;AAAA;AAAA,aAA0D;AAAA,MAC1D;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,WAAU;AAAA,UACX;AAAA;AAAA,QAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,MACA,qDAAC,SAAI,WAAU,qCACb;AAAA,6DAAC,SAAI,WAAU,qBACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,WAAU;AAAA;AAAA,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,SAAQ;AAAA,cACR,WAAU;AAAA,cACX;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,QACA,qDAAC,SAAI,WAAU,qCAAoC;AAAA;AAAA,UAC1B;AAAA,UACvB;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,IAAI;AAAA,gBACF,UAAU;AAAA,gBACV,QAAQ,aAAa,SAAS;AAAA,cAChC;AAAA,cACD;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQA;AAAA,aAVF;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,WA1BF;AAAA;AAAA;AAAA;AAAA,aA2BA;AAAA,SAzFF;AAAA;AAAA;AAAA;AAAA,WA0FA;AAAA,IACA,qDAAC,SAAI,WAAU,mCACX;AAAA;AAAA,QAAC;AAAA;AAAA,UACG,WAAU;AAAA,UACV,IAAI;AAAA,YACF,UAAU;AAAA,UACZ;AAAA,UACD;AAAA;AAAA,QALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACG,WAAU;AAAA,UACV,IAAI;AAAA,YACF,UAAU;AAAA,UACZ;AAAA,UACD;AAAA;AAAA,QALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA;AAAA,SAhBJ;AAAA;AAAA;AAAA;AAAA,WAiBA;AAAA,OArMF;AAAA;AAAA;AAAA;AAAA,SAsMA;AAEJ;;;AEhTA;AAAA;AAAA,iBAAAC;AAAA,EAAA,YAAAC;AAAA;AACA,IAAAC,4BAA4B,uCAC5BC,iBAA2B;AAE3B,IAAAC,iBAAoC,kBAyD5BC,2BAAA,kCAvDKC,QAAwB,MAAM,CAAC,EAAE,OAAO,UAAU,CAAC;AAEjD,SAARC,gBAAgC;AACrC,MAAM,yBAAqB,2BAAW,GAChC,4BAAwB,2BAAW,GACnC,gBAAY,2BAAW,GACvB,OAAO,gBAAgB,GACvB,CAAC,WAAW,YAAY,QAAI,yBAA2B,GACvD,CAAC,YAAY,aAAa,QAAI,yBAAiB,GAE/C,eAAe,OAAO,QAAgB,QAAgB;AAC1D,QAAM,SAAS,IAAI,gBAAgB;AAAA,MACjC;AAAA,MACA;AAAA,IACF,CAAC;AAGD,YADgB,OADJ,MAAM,MAAM,oBAAoB,OAAO,SAAS,GAAG,GACrC,KAAK,GAChB;AAAA,EACjB,GAEM,iBAAiB,OAAO,QAAgB,QAAgB;AAC5D,QAAM,YAAY,MAAM,aAAa,QAAQ,GAAG;AAChD,WAAO,KAAK,WAAW,QAAQ;AAAA,EACjC,GAEM,iBAAiB,CAAC,KAAU,SAAc;AAC9C,YAAQ,IAAI,KAAK,IAAI;AACrB,QAAM,SAAS,IAAI,gBAAgB;AAAA,MACjC,KAAK,IAAI;AAAA,MACT,QAAQ,IAAI;AAAA,IACd,CAAC;AACD,0BAAsB,OAAO,QAC7B,sBAAsB,KAAK,oBAAoB,OAAO,SAAS,GAAG,GAC9D,cACF,UAAU,QAAQ,KAEpB,UAAU;AAAA,MACR,EAAE,KAAK,IAAI,KAAK,QAAQ,IAAI,OAAO;AAAA,MACnC,EAAE,QAAQ,QAAQ,QAAQ,eAAe;AAAA,IAC3C;AAAA,EACF,GAEM,cAAc,MAAM;AACxB,uBAAmB,KAAK,iBAAiB;AAAA,EAC3C;AAEA,uCAAU,MAAM;AACd,IAAI,QACF,YAAY;AAAA,EAEhB,GAAG,CAAC,CAAC,GAGH,qDAAC,SAAI,WAAU,cACb;AAAA,yDAAC,SAAI,WAAU,OACb;AAAA,MAAC,0BAAAC;AAAA,MAAA;AAAA,QACC,YAAW;AAAA,QACX,kBAAiB;AAAA,QACjB,QAAO;AAAA,QAKP,UAAU;AAAA,QAGV,2BAA2B;AAAA,QAC3B,sBAAsB,EAAE,aAAa,UAAU;AAAA,QAC/C,oBAAmB;AAAA,QACnB,eAAe,CAAC,aACd,SAAS,QAAQ,kBAAkB,EAAE;AAAA,QAEvC,UAAU,CAAC,QAAQ,aAAa,GAAG;AAAA,QACnC,YAAY;AAAA;AAAA,MAlBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAmBA,KApBF;AAAA;AAAA;AAAA;AAAA,WAqBA;AAAA,IACC,sBAAsB,UAAU,UAC/B,sBAAsB,QACpB,qDAAC,SAAI,WAAU,OACb;AAAA,2DAAC,QAAG,6BAAJ;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,MACjB,qDAAC,WAAM,OAAM,OAAM,QAAO,OAAM,UAAQ,IACtC,+DAAC,YAAO,KAAK,sBAAsB,KAAK,aAAxC;AAAA;AAAA;AAAA;AAAA,aAAmD,KADrD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAGJ;AAAA,MAAC;AAAA;AAAA,QACC,SAAS;AAAA,QACT,WAAU;AAAA,QAEV;AAAA,UAAC;AAAA;AAAA,YACC,OAAM;AAAA,YACN,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,aAAa;AAAA,YACb,QAAO;AAAA,YACP,WAAU;AAAA,YAEV;AAAA,cAAC;AAAA;AAAA,gBACC,eAAc;AAAA,gBACd,gBAAe;AAAA,gBACf,GAAE;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIA;AAAA;AAAA,UAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAaA;AAAA;AAAA,MAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBA;AAAA,IACA,qDAAC,QAAG,WAAU,kBACX,6BAAmB,QAClB,mBAAmB,KAAK,QAAQ,SAAS,IAAI,CAAC,YAC5C,qDAAC,QACC;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,SAAS,MACP;AAAA,YACE,mBAAmB,KAAK,QAAQ;AAAA,YAChC,QAAQ;AAAA,UACV;AAAA,UAGF;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,aAAa;AAAA,cACb,QAAO;AAAA,cACP,WAAU;AAAA,cAEV;AAAA,gBAAC;AAAA;AAAA,kBACC,eAAc;AAAA,kBACd,gBAAe;AAAA,kBACf,GAAE;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAaA;AAAA;AAAA,QAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAuBA;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,SAAS,MACP;AAAA,YACE,mBAAmB,KAAK,QAAQ;AAAA,YAChC,QAAQ;AAAA,UACV,EAAE,KAAK,CAAC,QAAQ,cAAc,GAAG,CAAC;AAAA,UAGpC;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,aAAa;AAAA,cACb,QAAO;AAAA,cACP,WAAU;AAAA,cAEV;AAAA;AAAA,kBAAC;AAAA;AAAA,oBACC,eAAc;AAAA,oBACd,gBAAe;AAAA,oBACf,GAAE;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIA;AAAA,gBACA;AAAA,kBAAC;AAAA;AAAA,oBACC,eAAc;AAAA,oBACd,gBAAe;AAAA,oBACf,GAAE;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAkBA;AAAA;AAAA,QA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA4BA;AAAA,MACC,QAAQ;AAAA,SAtDF,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA,WAuDA,CACD,KA3DL;AAAA;AAAA;AAAA;AAAA,WA4DA;AAAA,IACC,cACG,qDAAC,SAAI,WAAU,OACb;AAAA,2DAAC,QAAG,8BAAJ;AAAA;AAAA;AAAA;AAAA,aAAkB;AAAA,MAClB,qDAAC,WAAM,OAAM,OAAM,QAAO,OAAM,UAAQ,IACtC,+DAAC,YAAO,KAAK,cAAb;AAAA;AAAA;AAAA;AAAA,aAAyB,KAD3B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAvHN;AAAA;AAAA;AAAA;AAAA,SAyHA;AAEJ;;;ACtLA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AACA,IAAAC,gBAA+B,4BAC/BC,iBAA2D,6BAC3DA,iBAAkC;AAgGxB,IAAAC,2BAAA,kCAzFGC,WAAS,OAAO,EAAE,QAAQ,MACtB,MAAM,UAAU,OAAO,QACnB,wBAAS,GAAG,QACxB,oBAAK,CAAC,CAAC,GAGHC,UAAS,OAAO,EAAE,QAAQ,MAAkB;AACvD,MAAM,WAAW,MAAM,QAAQ,SAAS,GAClC,QAAQ,SAAS,IAAI,OAAO,GAC5B,WAAW,SAAS,IAAI,UAAU,GAClC,aAAa,aAAa,SAAS,IAAI,YAAY,GAAG,GAAG;AAE/D,MAAI,CAAC,cAAc,KAAK;AACtB,eAAO;AAAA,MACL,EAAE,QAAQ,EAAE,OAAO,oBAAoB,UAAU,KAAK,EAAE;AAAA,MACxD,EAAE,QAAQ,IAAI;AAAA,IAChB;AAGF,MAAI,OAAO,YAAa,YAAY,SAAS,WAAW;AACtD,eAAO;AAAA,MACL,EAAE,QAAQ,EAAE,OAAO,MAAM,UAAU,uBAAuB,EAAE;AAAA,MAC5D,EAAE,QAAQ,IAAI;AAAA,IAChB;AAGF,MAAI,SAAS,SAAS;AACpB,eAAO;AAAA,MACL,EAAE,QAAQ,EAAE,OAAO,MAAM,UAAU,wBAAwB,EAAE;AAAA,MAC7D,EAAE,QAAQ,IAAI;AAAA,IAChB;AAIF,MADqB,MAAM,eAAe,KAAK;AAE7C,eAAO;AAAA,MACL;AAAA,QACE,QAAQ;AAAA,UACN,OAAO;AAAA,UACP,UAAU;AAAA,QACZ;AAAA,MACF;AAAA,MACA,EAAE,QAAQ,IAAI;AAAA,IAChB;AAEF,QAAM,WAAW,OAAO,QAAQ,GAEhC,QAAQ,IAAI,iEAAiE;AAE7E,MAAM,OAAO,MAAM,cAAc,aAAa,aAAa,SAAS;AAAA,IAClE,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,SAAS,EAAE,SAAS;AAAA,EACtB,CAAC;AAED,aAAO;AAAA,IACL,EAAE,QAAQ,MAAM,GAAG,KAAK;AAAA,IACxB,EAAE,QAAQ,IAAI;AAAA,EAChB;AAQF,GAEaC,QAAwB,MAAM,CAAC,EAAE,OAAO,UAAU,CAAC;AAEjD,SAAR,OAAwB;AAhF/B;AAiFE,MAAM,CAAC,YAAY,QAAI,gCAAgB,GACjC,aAAa,aAAa,IAAI,YAAY,KAAK,QAC/C,iBAAa,8BAA6B,GAC1C,eAAW,uBAAyB,IAAI,GACxC,kBAAc,uBAAyB,IAAI;AAEjD,uCAAU,MAAM;AAvFlB,QAAAC,KAAAC,KAAAC,KAAAC;AAwFI,KAAIH,MAAA,yCAAY,WAAZ,QAAAA,IAAoB,SACtBC,MAAA,SAAS,YAAT,QAAAA,IAAkB,WACTC,MAAA,yCAAY,WAAZ,QAAAA,IAAoB,cAC7BC,MAAA,YAAY,YAAZ,QAAAA,IAAqB;AAAA,EAEzB,GAAG,CAAC,UAAU,CAAC,GAGb,qDAAC,SAAI,WAAU,wCACb,+DAAC,uBAAK,QAAO,QAAO,WAAU,aAC5B;AAAA,yDAAC,SACC;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,WAAU;AAAA,UACX;AAAA;AAAA,QAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,MACA,qDAAC,SAAI,WAAU,QACb;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,IAAG;AAAA,YACH,UAAQ;AAAA,YACR,WAAW;AAAA,YACX,MAAK;AAAA,YACL,MAAK;AAAA,YACL,cAAa;AAAA,YACb,iBAAc,8CAAY,WAAZ,WAAoB,QAAQ,KAAO;AAAA,YACjD,oBAAiB;AAAA,YACjB,WAAU;AAAA;AAAA,UAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWA;AAAA,UACC,8CAAY,WAAZ,mBAAoB,UACnB,qDAAC,SAAI,WAAU,qBAAoB,IAAG,eACnC,qBAAW,OAAO,SADrB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAhBJ;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,SAzBF;AAAA;AAAA;AAAA;AAAA,WA0BA;AAAA,IAEA,qDAAC,SACC;AAAA;AAAA,QAAC;AAAA;AAAA,UACC,SAAQ;AAAA,UACR,WAAU;AAAA,UACX;AAAA;AAAA,QAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,MACA,qDAAC,SAAI,WAAU,QACb;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,KAAK;AAAA,YACL,MAAK;AAAA,YACL,MAAK;AAAA,YACL,cAAa;AAAA,YACb,iBAAc,8CAAY,WAAZ,WAAoB,WAAW,KAAO;AAAA,YACpD,oBAAiB;AAAA,YACjB,WAAU;AAAA;AAAA,UARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA;AAAA,UACC,8CAAY,WAAZ,mBAAoB,aACnB,qDAAC,SAAI,WAAU,qBAAoB,IAAG,kBACnC,qBAAW,OAAO,YADrB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAdJ;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,SAvBF;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,IAEA,qDAAC,WAAM,MAAK,UAAS,MAAK,cAAa,OAAO,cAA9C;AAAA;AAAA;AAAA;AAAA,WAA0D;AAAA,IAC1D;AAAA,MAAC;AAAA;AAAA,QACC,MAAK;AAAA,QACL,WAAU;AAAA,QACX;AAAA;AAAA,MAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA;AAAA,IACA,qDAAC,SAAI,WAAU,oCACb,+DAAC,SAAI,WAAU,qCAAoC;AAAA;AAAA,MACxB;AAAA,MACzB;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,IAAI;AAAA,YACF,UAAU;AAAA,YACV,QAAQ,aAAa,SAAS;AAAA,UAChC;AAAA,UACD;AAAA;AAAA,QAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA;AAAA,SAVF;AAAA;AAAA;AAAA;AAAA,WAWA,KAZF;AAAA;AAAA;AAAA;AAAA,WAaA;AAAA,OA3EF;AAAA;AAAA;AAAA;AAAA,SA4EA,KA7EF;AAAA;AAAA;AAAA;AAAA,SA8EA;AAEJ;;;AChLA;AAAA;AAAA,gBAAAC;AAAA,EAAA,eAAAC;AAAA,EAAA,YAAAC;AAAA;AACA,IAAAC,gBAA+B;AAI/B,IAAAC,iBAAoC,6BACpCA,iBAA4C,kBAC5CC,qBAAuB,gCAoEfC,2BAAA,kCAlEKC,SAAwB,MAAM,CAAC,EAAE,OAAO,wBAAwB,CAAC;AAQvE,IAAMC,UAAS,OAAO,EAAE,QAAQ,MAAkB;AACvD,MAAM,SAAS,MAAM,cAAc,OAAO,GAEpC,WAAW,MAAM,QAAQ,SAAS,GAClC,QAAQ,SAAS,IAAI,OAAO;AAElC,MAAI,OAAO,SAAU,YAAY,MAAM,WAAW;AAChD,eAAO;AAAA,MACL,EAAE,QAAQ,EAAE,MAAM,MAAM,OAAO,oBAAoB,EAAE;AAAA,MACrD,EAAE,QAAQ,IAAI;AAAA,IAChB;AAGF,MAAM,QAAwC;AAAA,IAC5C,CAAC,qCAA2B;AAAA,MAC1B,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,IACA,CAAC,4BAAuB;AAAA,MACtB,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,IACA,CAAC,kBAAkB;AAAA,MACjB,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,EACF,GAEM,iBAAiB,SAAS,IAAI,aAAa,GAC3C,OAAa,MAAM,iBAEnB,UAAU,MAAM,cAAc,EAAE,MAAM,OAAO,OAAO,CAAC;AAE3D,aAAO,wBAAS,QAAQ,QAAQ,IAAI;AACtC;AAEe,SAARC,gBAAgC;AArDvC;AAsDE,MAAM,iBAAa,8BAA6B,GAC1C,eAAW,uBAAyB,IAAI,GACxC,CAAC,aAAa,cAAc,QAAI;AAAA,IACpC;AAAA,EACF;AAEA,gCAAU,MAAM;AA5DlB,QAAAC,KAAAC;AA6DI,KAAID,MAAA,yCAAY,WAAZ,QAAAA,IAAoB,WACtBC,MAAA,SAAS,YAAT,QAAAA,IAAkB;AAAA,EAEtB,GAAG,CAAC,UAAU,CAAC;AAEf,MAAM,sBAAkE,CACtE,UACG;AACH,mBAAe,MAAM,cAAc,KAAoB;AAAA,EACzD;AAEA,SACE,qDAAC,SAAI,WAAU,gDACb,+DAAC,SAAI,WAAU,qCACb;AAAA,yDAAC,QAAG,WAAU,OAAM,8CAApB;AAAA;AAAA;AAAA;AAAA,WAA2C;AAAA,IAC3C,qDAAC,uBAAK,QAAO,QAAO,WAAU,8BAC5B;AAAA,2DAAC,SACC;AAAA,6DAAC,WAAM,WAAU,SACf,+DAAC,UAAK,WAAU,wBAAuB,6BAAvC;AAAA;AAAA;AAAA;AAAA,eAAoD,KADtD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAK;AAAA,YACL,MAAK;AAAA,YACL,aAAY;AAAA,YACZ,eAAW,mBAAAC,SAAW,wBAAwB;AAAA,cAC5C,eAAe,CAAC,GAAC,8CAAY,WAAZ,WAAoB;AAAA,YACvC,CAAC;AAAA,YACD,cAAc;AAAA,YACd,iBAAc,8CAAY,WAAZ,WAAoB,QAAQ,KAAO;AAAA,YACjD,WAAS;AAAA;AAAA,UAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWA;AAAA,WAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,MACA,qDAAC,SACC;AAAA,6DAAC,WAAM,WAAU,SACb,+DAAC,UAAK,WAAU,wBAAuB,4BAAvC;AAAA;AAAA;AAAA;AAAA,eAAmD,KADvD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,qDAAC,WAAM,WAAU,iDACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACD,MAAK;AAAA,cACL,MAAK;AAAA,cACL,WAAU;AAAA,cACV,UAAU;AAAA,cACV,SAAS,gBAAgB;AAAA,cACzB,OAAO;AAAA;AAAA,YANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOA;AAAA,UACA,qDAAC,UAAK,WAAU,cAAa,qDAA7B;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAXJ;AAAA;AAAA;AAAA;AAAA,eAYA;AAAA,QACA,qDAAC,WAAM,WAAU,iDACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACD,MAAK;AAAA,cACL,MAAK;AAAA,cACL,WAAU;AAAA,cACV,UAAU;AAAA,cACV,SAAS,gBAAgB;AAAA,cACzB,OAAO;AAAA;AAAA,YANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOA;AAAA,UACA,qDAAC,UAAK,WAAU,gBAAe,0CAA/B;AAAA;AAAA;AAAA;AAAA,iBAAyD;AAAA,aAT7D;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,QACA,qDAAC,WAAM,WAAU,iDACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACD,MAAK;AAAA,cACL,MAAK;AAAA,cACL,WAAU;AAAA,cACV,UAAU;AAAA,cACV,SAAS,gBAAgB;AAAA,cACzB,OAAO;AAAA;AAAA,YANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOA;AAAA,UACA,qDAAC,UAAK,WAAU,gBAAe,qCAA/B;AAAA;AAAA;AAAA;AAAA,iBAAoD;AAAA,aATxD;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,WAtCF;AAAA;AAAA;AAAA;AAAA,aAuCA;AAAA,MACA,qDAAC,SAAI,WAAU,uDACb,+DAAC,OAAE,WAAU,OAAM,sEAAnB;AAAA;AAAA;AAAA;AAAA,aAA+D,KADjE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,qDAAC,YAAO,MAAK,UAAS,WAAU,wBAAuB,8BAAvD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,qDAAC,YAAO,SAAS,MAAM,QAAQ,KAAK,GAAG,WAAU,YAAW,sBAA5D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAnEF;AAAA;AAAA;AAAA;AAAA,WAoEA;AAAA,OAtEF;AAAA;AAAA;AAAA;AAAA,SAuEA,KAxEF;AAAA;AAAA;AAAA;AAAA,SAyEA;AAEJ;;;ACpJA;AAAA;AAAA;AAAA;AAEI,IAAAC,2BAAA;AAFW,SAAR,YAA6B;AAClC,SACE;AAAA,IAAC;AAAA;AAAA,MACC,OAAM;AAAA,MACN,KAAI;AAAA,MACJ,OAAM;AAAA,MACN,QAAO;AAAA,MACR;AAAA;AAAA,IALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA;AAEJ;;;ACXA;AAAA;AAAA,gBAAAC;AAAA,EAAA,YAAAC;AAAA;AACA,IAAAC,gBAAyB,4BAEZD,SAAwB,MAAM,CAAC,EAAE,OAAO,UAAU,CAAC;AAEhE,eAAsBD,WAAS;AAC7B,aAAO,wBAAS,MAAM;AACxB;;;ACPA;AAAA;AAAA,gBAAAG;AAAA,EAAA,cAAAC;AAAA;AACA,IAAAC,gBAAyB;AAIlB,IAAMC,UAAS,OAAO,EAAE,QAAQ,MAAkB,OAAO,OAAO,GAE1DC,WAAS,gBAAY,wBAAS,GAAG;;;ACP9C;AAAA;AAAA,iBAAAC;AAAA,EAAA,YAAAC;AAAA;AACA,IAAAC,iBAA8C;AAE9C,mBAAyB,sCAWbC,2BAAA,kCATCC,SAAwB,MAAM,CAAC,EAAE,OAAO,UAAU,CAAC;AAEjD,SAARC,aAA6B;AAClC,MAAM,OAAO,gBAAgB;AAC7B,SACE,qDAAC,SAAI,WAAU,mBACb;AAAA,yDAAC,YAAO,WAAU,kCAChB,+DAAC,SAAI,WAAU,mEACb;AAAA,2DAAC,uBAAK,WAAU,gBAAe,IAAG,QAChC;AAAA,QAAC;AAAA;AAAA,UACC,WAAU;AAAA,UACV,OAAO;AAAA,YACL,iBAAiB;AAAA,YACjB,gBAAgB;AAAA,UAClB;AAAA;AAAA,QALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMC,KAPH;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,qDAAC,SAAI,WAAU,yCACZ;AAAA,SAAC,QACA;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,WAAU;AAAA,YACX;AAAA;AAAA,UAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QAED,CAAC,QACA;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,WAAU;AAAA,YACX;AAAA;AAAA,UAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QAED,QACC,0FACE;AAAA,+DAAC,uBAAK,IAAG,OAAM,WAAU,cACvB,+DAAC,YAAO,WAAU,0BAChB;AAAA;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,MAAK;AAAA,gBACL,SAAQ;AAAA,gBACR,aAAa;AAAA,gBACb,QAAO;AAAA,gBACP,WAAU;AAAA,gBAEV;AAAA,kBAAC;AAAA;AAAA,oBACC,eAAc;AAAA,oBACd,gBAAe;AAAA,oBACf,GAAE;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAaA;AAAA,YAAM;AAAA,eAdR;AAAA;AAAA;AAAA;AAAA,iBAgBA,KAjBF;AAAA;AAAA;AAAA;AAAA,iBAkBA;AAAA,UACA,qDAAC,uBAAK,IAAG,WACL,+DAAC,YAAO,WAAU,0FACd;AAAA,YAAC;AAAA;AAAA,cACG,WAAU;AAAA,cACV,OAAO,KAAK;AAAA;AAAA,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGA,KAJJ;AAAA;AAAA;AAAA;AAAA,iBAKA,KANJ;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,aA3BF;AAAA;AAAA;AAAA;AAAA,eA4BA;AAAA,WA9CJ;AAAA;AAAA;AAAA;AAAA,aAgDA;AAAA,SA1DF;AAAA;AAAA;AAAA;AAAA,WA2DA,KA5DF;AAAA;AAAA;AAAA;AAAA,WA6DA;AAAA,IACA,qDAAC,UAAK,WAAU,eACd,+DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,WAAQ,KADV;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAjEF;AAAA;AAAA;AAAA;AAAA,SA6EA;AAEJ;;;ACzFA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AACA,IAAAC,gBAAyB,4BAKZD,UAAS,OAAO,EAAE,QAAQ,MAAkB;AA2BzD,GAEO,sBAAQ;;;ACnCf,IAAO,0BAAQ,EAAC,SAAU,YAAW,OAAQ,EAAC,QAAS,2CAA0C,SAAU,CAAC,4CAA2C,4CAA2C,4CAA2C,0CAA0C,EAAC,GAAE,QAAS,EAAC,8CAA6C,EAAC,IAAK,8CAA6C,UAAW,QAAO,MAAO,uBAAsB,OAAQ,QAAU,eAAgB,QAAU,QAAS,2EAA0E,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,mCAAkC,SAAU,CAAC,0CAA0C,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,4CAA2C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,cAAa,EAAC,IAAK,cAAa,UAAW,QAAO,MAAO,OAAM,OAAQ,QAAU,eAAgB,QAAU,QAAS,yCAAwC,SAAU,CAAC,0CAA0C,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,cAAa,MAAO,cAAa,OAAQ,QAAU,eAAgB,QAAU,QAAS,oDAAmD,SAAU,CAAC,4CAA2C,4CAA2C,0CAA0C,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gCAA+B,EAAC,IAAK,gCAA+B,UAAW,yBAAwB,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,2DAA0D,SAAU,CAAC,4CAA2C,4CAA2C,4CAA2C,0CAA0C,GAAE,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,qBAAoB,EAAC,IAAK,qBAAoB,UAAW,cAAa,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,gDAA+C,SAAU,CAAC,4CAA2C,4CAA2C,4CAA2C,0CAA0C,GAAE,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,mBAAkB,EAAC,IAAK,mBAAkB,UAAW,cAAa,MAAO,QAAO,OAAQ,QAAU,eAAgB,QAAU,QAAS,8CAA6C,SAAU,CAAC,0CAA0C,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,mBAAkB,EAAC,IAAK,mBAAkB,UAAW,cAAa,MAAO,QAAO,OAAQ,QAAU,eAAgB,QAAU,QAAS,8CAA6C,SAAU,CAAC,4CAA2C,4CAA2C,0CAA0C,GAAE,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,oBAAmB,EAAC,IAAK,oBAAmB,UAAW,cAAa,MAAO,SAAQ,OAAQ,QAAU,eAAgB,QAAU,QAAS,+CAA8C,SAAU,CAAC,4CAA2C,4CAA2C,0CAA0C,GAAE,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,kBAAiB,EAAC,IAAK,kBAAiB,UAAW,cAAa,MAAO,OAAM,OAAQ,QAAU,eAAgB,QAAU,QAAS,6CAA4C,SAAU,CAAC,4CAA2C,4CAA2C,0CAA0C,GAAE,WAAY,IAAK,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,sBAAqB,EAAC,IAAK,sBAAqB,UAAW,cAAa,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,iDAAgD,SAAU,CAAC,0CAA0C,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,QAAO,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,oDAAmD,SAAU,QAAU,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,kCAAiC,EAAC,IAAK,kCAAiC,UAAW,yBAAwB,MAAO,YAAW,OAAQ,QAAU,eAAgB,QAAU,QAAS,6DAA4D,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,UAAS,OAAQ,QAAU,eAAgB,QAAU,QAAS,4CAA2C,SAAU,QAAU,WAAY,IAAK,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,QAAO,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,oDAAmD,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,0BAAyB,EAAC,IAAK,0BAAyB,UAAW,QAAO,MAAO,mBAAkB,OAAQ,QAAU,eAAgB,QAAU,QAAS,qDAAoD,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,QAAO,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,oDAAmD,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,0BAAyB,EAAC,IAAK,0BAAyB,UAAW,QAAO,MAAO,mBAAkB,OAAQ,QAAU,eAAgB,QAAU,QAAS,qDAAoD,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,kBAAiB,EAAC,IAAK,kBAAiB,UAAW,QAAO,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,6CAA4C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,QAAO,MAAO,gBAAe,OAAQ,QAAU,eAAgB,QAAU,QAAS,kDAAiD,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,EAAC,GAAE,eAAgB,QAAU,KAAM,QAAU,KAAM,sCAAqC;;;AlCwB54O,IAAM,uBAAuB,gBACvB,SAAS,EAAC,qBAAsB,IAAM,+BAAgC,IAAM,cAAe,IAAM,kBAAmB,IAAM,mBAAoB,IAAM,yBAA0B,IAAM,kBAAmB,IAAK,SAAU,IAAK,wBAAyB,IAAK,oBAAqB,GAAI,GAClR,aAAa,mBACb,QAAQ,EAAE,QAAQ,qBAAY,GAE9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,kCAAkC;AAAA,IAC9B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gCAAgC;AAAA,IAC5B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,0BAA0B;AAAA,IACtB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,0BAA0B;AAAA,IACtB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,sBAAsB;AAAA,IAClB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,qBAAqB;AAAA,IACjB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,oBAAoB;AAAA,IAChB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,mBAAmB;AAAA,IACf,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,mBAAmB;AAAA,IACf,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,kBAAkB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,kBAAkB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,cAAc;AAAA,IACV,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,8CAA8C;AAAA,IAC1C,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;;;ADlMA;AAGK,IAAM,cAAU,uCAAqB;AAAA,EAC1C;AAAA,EACA,MAAM;AACR,CAAC;",
  "names": ["isbot", "import_node", "import_react", "import_node", "import_tiny_invariant", "arc", "getUuidByString", "invariant", "bcrypt", "bcrypt", "import_node", "import_tiny_invariant", "path", "invariant", "invariant", "import_jsx_dev_runtime", "loader", "loader", "loader", "import_node", "import_react", "import_tiny_invariant", "import_functions", "arc", "cuid", "AWS", "path", "import_node", "import_aws_sdk", "AWS", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "invariant", "location", "_a", "params", "ReactS3Uploader", "classNames", "loader", "import_node", "import_aws_sdk", "loader", "AWS", "loader", "import_node", "import_aws_sdk", "loader", "AWS", "ProjectPage", "loader", "meta", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "meta", "loader", "invariant", "ProjectPage", "action", "loader", "import_node", "import_tiny_invariant", "loader", "action", "invariant", "meta", "import_jsx_dev_runtime", "loader", "import_node", "import_aws_sdk", "CLIPS_S3_BUCKET_NAME", "CLIPS_S3_UPLOAD_PATH", "loader", "AWS", "PrivacyPolicy", "meta", "import_jsx_dev_runtime", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "action", "loader", "meta", "import_node", "import_react", "import_classnames", "import_date_fns", "import_jsx_dev_runtime", "meta", "loader", "action", "deleteProject", "classNames", "action", "loader", "meta", "import_node", "import_react", "import_remix_auth_socials", "import_react", "route", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "ProjectsPage", "meta", "import_react_s3_uploader", "import_react", "import_react", "import_jsx_dev_runtime", "meta", "ProjectsPage", "ReactS3Uploader", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "action", "ProjectsPage", "meta", "import_node", "import_react", "import_classnames", "import_jsx_dev_runtime", "meta", "action", "ProjectsPage", "_a", "_b", "classNames", "import_jsx_dev_runtime", "loader", "meta", "import_node", "action", "loader", "import_node", "action", "loader", "IndexPage", "meta", "import_react", "import_jsx_dev_runtime", "meta", "IndexPage", "action", "import_node"]
}
