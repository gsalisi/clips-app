{
  "version": 3,
  "sources": ["../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/routes/app.$projectId._index.tsx", "../app/models/project.server.ts", "../app/sqs.server.ts", "../app/s3.server.ts", "../app/components/ProjectPreview.tsx", "../app/components/FrameAnnotation.tsx", "../app/routes/s3.getobjecturl.tsx", "../app/routes/s3.putobjecturl.tsx", "../app/routes/app.$projectId.tsx", "../app/routes/s3.listobjects.tsx", "../app/routes/app._index.tsx", "../app/routes/app.login.tsx", "../app/utils.ts", "../app/routes/app.beta.tsx", "../app/routes/app.join.tsx", "../app/routes/app.new.tsx", "../app/routes/_index.tsx", "../app/routes/logout.tsx", "../app/routes/app.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"/home/gsalisi/code/clips-app/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/app.$projectId._index.tsx\";\nimport * as route2 from \"./routes/s3.getobjecturl.tsx\";\nimport * as route3 from \"./routes/s3.putobjecturl.tsx\";\nimport * as route4 from \"./routes/app.$projectId.tsx\";\nimport * as route5 from \"./routes/s3.listobjects.tsx\";\nimport * as route6 from \"./routes/app._index.tsx\";\nimport * as route7 from \"./routes/app.login.tsx\";\nimport * as route8 from \"./routes/app.beta.tsx\";\nimport * as route9 from \"./routes/app.join.tsx\";\nimport * as route10 from \"./routes/app.new.tsx\";\nimport * as route11 from \"./routes/_index.tsx\";\nimport * as route12 from \"./routes/logout.tsx\";\nimport * as route13 from \"./routes/app.tsx\";\nimport * as route14 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/app.$projectId._index\": {\n      id: \"routes/app.$projectId._index\",\n      parentId: \"routes/app.$projectId\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/s3.getobjecturl\": {\n      id: \"routes/s3.getobjecturl\",\n      parentId: \"root\",\n      path: \"s3/getobjecturl\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/s3.putobjecturl\": {\n      id: \"routes/s3.putobjecturl\",\n      parentId: \"root\",\n      path: \"s3/putobjecturl\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/app.$projectId\": {\n      id: \"routes/app.$projectId\",\n      parentId: \"routes/app\",\n      path: \":projectId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/s3.listobjects\": {\n      id: \"routes/s3.listobjects\",\n      parentId: \"root\",\n      path: \"s3/listobjects\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/app._index\": {\n      id: \"routes/app._index\",\n      parentId: \"routes/app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/app.login\": {\n      id: \"routes/app.login\",\n      parentId: \"routes/app\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/app.beta\": {\n      id: \"routes/app.beta\",\n      parentId: \"routes/app\",\n      path: \"beta\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/app.join\": {\n      id: \"routes/app.join\",\n      parentId: \"routes/app\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/app.new\": {\n      id: \"routes/app.new\",\n      parentId: \"routes/app\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/app\": {\n      id: \"routes/app\",\n      parentId: \"root\",\n      path: \"app\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    }\n  };", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}", "import type { LinksFunction, LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"~/styles/tailwind.css\";\nimport { getUser } from \"~/session.server\";\n\nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n  // NOTE: Architect deploys the public directory to /_static/\n  { rel: \"icon\", href: \"/_static/favicon.ico\" },\n];\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  return json({ user: await getUser(request) });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>    \n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/app/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\nimport getUuidByString from \"uuid-by-string\";\n\nexport type User = { id: string; email: string };\nexport type Password = { password: string };\n\nexport async function getUserById(id: User[\"id\"]): Promise<User | null> {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) return { id: record.pk, email: record.email };\n  return null;\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return getUserById(getUuidByString(email));\n}\n\nasync function getUserPasswordByEmail(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": getUuidByString(email) },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nconst dePlussedEmail = (email: string): string => email.split('@')[0].split('+')[0] + '@' + email.split('@')[1];\n\nexport async function createUser(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const cleanEmail = dePlussedEmail(email)\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const db = await arc.tables();\n  const userId = getUuidByString(cleanEmail)\n  await db.password.put({\n    pk: userId,\n    password: hashedPassword,\n  });\n\n  await db.user.put({\n    pk: userId,\n    email,\n  });\n\n  const user = await getUserByEmail(cleanEmail);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const userId = getUuidByString(email)\n  await db.password.delete({ pk: userId });\n  await db.user.delete({ pk: userId });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const userPassword = await getUserPasswordByEmail(email);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByEmail(email);\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport ReactS3Uploader from \"react-s3-uploader\";\nimport {\n  Form,\n  useFetcher,\n  useLoaderData,\n  useRevalidator,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { requireUserId } from \"~/session.server\";\nimport invariant from \"tiny-invariant\";\nimport type { CropTrackerOpts, TrackHint } from \"~/models/project.server\";\nimport {\n  addProjectTrackHints,\n  getProject,\n  ProjectState,\n  updateCropTrackerOptsProject,\n  updateProject,\n  updateProjectState,\n} from \"~/models/project.server\";\nimport { getS3KeyFileName, sendSqsMessage } from \"~/sqs.server\";\nimport classNames from \"classnames\";\nimport { signGetObjectUrl } from \"~/s3.server\";\nimport ProjectPreview from \"~/components/ProjectPreview\";\nimport FrameAnnotation from \"~/components/FrameAnnotation\";\n\nenum ProjectFormAction {\n  uploadFile,\n  addTrackHint,\n  sendProcessRequest,\n}\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Clips App\" }];\n\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.projectId, \"projectId not found\");\n\n  const project = await getProject({ id: params.projectId, userId });\n  if (!project) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  console.log(\"loading project page\");\n  console.log(project);\n  let inputSignedUrl = \"\",\n    outputSignedUrl = \"\";\n  if (project.inputFile) {\n    const resp = await signGetObjectUrl({\n      userId,\n      bucket: project.inputFile.bucket,\n      key: project.inputFile.key,\n    });\n    if (!resp.ok) {\n      throw json({ error: \"Failed to sign object url\" }, { status: 400 });\n    }\n    const body = await resp.json();\n    inputSignedUrl = body.signedUrl;\n  }\n  if (project.outputFile) {\n    try {\n      const resp = await signGetObjectUrl({\n        userId,\n        bucket: project.outputFile.bucket,\n        key: project.outputFile.key,\n      });\n      const body = await resp.json();\n      outputSignedUrl = body.signedUrl;\n\n      if (project.state === ProjectState.Processing) {\n        // TODO: Technically this is a side-effect;\n        // but this is good for now while i work on adding this to the clips-core\n        await updateProjectState({\n          id: params.projectId,\n          userId,\n          state: ProjectState.Completed,\n        });\n      }\n    } catch (e) {\n      console.warn(`Output key ${project.outputFile.key} does not exist.`);\n    }\n  }\n  return json({ project, inputSignedUrl, outputSignedUrl });\n};\n\nexport const action = async ({ params, request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.projectId, \"projectId not found\");\n\n  const formData = await request.formData();\n  const projectAction = formData.get(\"action\");\n  if (typeof projectAction !== \"string\" || !action) {\n    return json(\n      { errors: { body: null, title: \"action is required\" } },\n      { status: 400 }\n    );\n  }\n\n  console.log(\"===== PROJECT ACTION =====\");\n\n  if (parseInt(projectAction) === ProjectFormAction.uploadFile) {\n    console.log(\"====> Updating with file info...\");\n    const key = formData.get(\"key\");\n    const bucket = formData.get(\"bucket\");\n    if (typeof key !== \"string\" || key.length === 0) {\n      return json(\n        { errors: { body: null, title: \"key is required\" } },\n        { status: 400 }\n      );\n    }\n    if (typeof bucket !== \"string\" || bucket.length === 0) {\n      return json(\n        { errors: { body: null, title: \"bucket is required\" } },\n        { status: 400 }\n      );\n    }\n    const outputKey = `tmp/${userId}/${params.projectId}/out/${getS3KeyFileName(\n      key\n    )}.mp4`;\n\n    await updateProject({\n      id: params.projectId,\n      userId,\n      inputFile: {\n        bucket,\n        key,\n      },\n      outputFile: {\n        bucket,\n        key: outputKey,\n      },\n    });\n    await updateProjectState({\n      id: params.projectId,\n      userId,\n      state: ProjectState.Ready,\n    });\n  } else if (parseInt(projectAction) === ProjectFormAction.addTrackHint) {\n    console.log(\"====> Adding track hint...\");\n    const trackHintStr = formData.get(\"trackHint\");\n    if (typeof trackHintStr !== \"string\" || trackHintStr.length === 0) {\n      return json(\n        { errors: { body: null, title: \"trackHint is required\" } },\n        { status: 400 }\n      );\n    }\n\n    const trackHint: TrackHint = JSON.parse(trackHintStr);\n    console.log(trackHint);\n    await addProjectTrackHints(\n      {\n        id: params.projectId,\n        userId,\n      },\n      trackHint\n    );\n  } else if (parseInt(projectAction) === ProjectFormAction.sendProcessRequest) {\n    console.log(\"====> Sending request to SQS...\");\n    const cropTrackerOpts: CropTrackerOpts = {\n      excludeLimbs: true,\n      paddingRatio: 1.2,\n      smoothingWindowSecs: 2,\n    };\n\n    const updatedProject = await updateCropTrackerOptsProject({\n      id: params.projectId,\n      userId,\n      cropTrackerOpts,\n    });\n\n    if (!updatedProject.inputFile || !updatedProject.outputFile) {\n      throw new Response(\"Missing inputFile and outputFile fields in project\", {\n        status: 400,\n      });\n    }\n    if (!updatedProject.cropTrackerOpts) {\n      throw new Response(\"Missing effectMetadata field in project\", {\n        status: 400,\n      });\n    }\n\n    const response = await sendSqsMessage({\n      type: \"crop\",\n      input_key: updatedProject.inputFile.key,\n      output_key: updatedProject.outputFile.key,\n      bucket: updatedProject.inputFile.bucket,\n      output_width: updatedProject.size.width,\n      output_height: updatedProject.size.height,\n      exclude_limbs: updatedProject.cropTrackerOpts.excludeLimbs,\n      padding_ratio: updatedProject.cropTrackerOpts.paddingRatio,\n      smoothing_window_secs: updatedProject.cropTrackerOpts.smoothingWindowSecs,\n      track_hints: updatedProject.cropTrackerOpts.trackHints,\n    });\n\n    console.log(\"SQS Response:\");\n    console.log(response);\n\n    await updateProjectState({\n      id: params.projectId,\n      userId,\n      state: ProjectState.Processing,\n    });\n  }\n\n  return redirect(`?`);\n};\n\nenum UploadState {\n  Idle,\n  Uploading,\n  Complete,\n  Error,\n}\n\nexport default function ProjectPage() {\n  const data = useLoaderData<typeof loader>();\n  const uploadedObjUrlFetcher = useFetcher();\n  const submit = useSubmit();\n  const [uploadState, setUploadState] = useState<UploadState>(\n    data.project.inputFile ? UploadState.Complete : UploadState.Idle\n  );\n  const [uploadPercent, setUploadPercent] = useState<number>(0);\n  const [showFrameAnnotation, setShowFrameAnnotation] =\n    useState<boolean>(false);\n  const [hasAddedFocus, setHasAddedFocus] = useState<boolean>(false);\n  const [readyToProcess, setReadyToProcess] = useState<boolean>(false);\n  const [numOfPersonSelectValue, setNumOfPersonSelectValue] =\n    useState<string>(\"\");\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const revalidator = useRevalidator();\n  const inputSignedUrl =\n    (uploadedObjUrlFetcher.data && uploadedObjUrlFetcher.data.signedUrl) ||\n    data.inputSignedUrl;\n\n  useEffect(() => {\n    if (videoRef.current && data.project.cropTrackerOpts?.trackHints) {\n      setNumOfPersonSelectValue(\"multi\")\n      setReadyToProcess(true)\n      setHasAddedFocus(true)\n    }\n  }, [data, videoRef]);\n\n  const onUploadStart = (file: File, next: (f: File) => void) => {\n    setUploadState(UploadState.Uploading);\n    setUploadPercent(0);\n    next(file);\n  };\n\n  const onUploadProgress = (percent: number, status: string, file: File) => {\n    setUploadPercent(percent);\n  };\n\n  const onUploadFinish = (res: any, file: any) => {\n    // console.log(res, file);\n    const params = new URLSearchParams({\n      key: res.key,\n      bucket: res.bucket,\n    });\n    uploadedObjUrlFetcher.data = undefined;\n    uploadedObjUrlFetcher.load(`/s3/getobjecturl?${params.toString()}`);\n    // if (inputComp) {\n    //   inputComp.disabled = true;\n    // }\n    // setInputFile({\n    //   key: res.key,\n    //   bucket: res.bucket,\n    // });\n    setUploadState(UploadState.Complete);\n    setUploadPercent(0);\n\n    const formData = new FormData();\n    formData.append(\"action\", ProjectFormAction.uploadFile.toString());\n    formData.append(\"key\", res.key);\n    formData.append(\"bucket\", res.bucket);\n    submit(formData, {\n      method: \"post\",\n    });\n  };\n\n  const onUploadError = (message: string) => {\n    setUploadState(UploadState.Error);\n  };\n\n  const selectNumPerson: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setNumOfPersonSelectValue(e.target.value);\n    setShowFrameAnnotation(e.target.value === \"multi\");\n    if (e.target.value === \"single\") {\n      setReadyToProcess(true);\n    }\n    if (e.target.value === \"multi\" && !hasAddedFocus) {\n      setReadyToProcess(false);\n    }\n  };\n\n  const addFocus = (trackHint: TrackHint) => {\n    if (!trackHint) {\n      console.error(\"Current selection or video time.\");\n      return;\n    }\n    console.log(trackHint);\n    const formData = new FormData();\n    formData.append(\"action\", ProjectFormAction.addTrackHint.toString());\n    formData.append(\"trackHint\", JSON.stringify(trackHint));\n    submit(formData, {\n      method: \"post\",\n    });\n    setHasAddedFocus(true);\n    setReadyToProcess(true);\n  };\n\n  const sendProcessRequest = () => {\n    const formData = new FormData();\n    formData.append(\"action\", ProjectFormAction.sendProcessRequest.toString());\n    submit(formData, {\n      method: \"post\",\n    });\n    revalidator.revalidate();\n  };\n\n  return (\n    <div className=\"prose flex h-full w-full max-w-xl flex-col items-center p-2\">\n      <div className=\"w-full max-w-lg\">\n        <h3 className=\"mt-0\">1. Upload your video file here</h3>\n        <label className=\"label\">\n          <span className=\"label-text\">{\"Accepts video files < 5GB\"}</span>\n        </label>\n        <ReactS3Uploader\n          className=\"file-input w-full max-w-lg\"\n          signingUrl=\"/s3/putobjecturl\"\n          signingUrlMethod=\"GET\"\n          s3path={`${data.project.id}`}\n          preprocess={onUploadStart}\n          // onSignedUrl={onSignedUrl}\n          onProgress={onUploadProgress}\n          onError={onUploadError}\n          onFinish={onUploadFinish}\n          // signingUrlHeaders={{ additional: headers }}\n          // signingUrlQueryParams={{ additional: query-params }}\n          signingUrlWithCredentials={true} // in case when need to pass authentication credentials via CORS\n          uploadRequestHeaders={{ \"x-amz-acl\": \"private\" }}\n          contentDisposition=\"auto\"\n          scrubFilename={(filename: string) =>\n            filename.replace(/[^\\w\\d_\\-.]+/gi, \"\")\n          }\n          // inputRef={(cmp) => setInputComp(cmp)}\n          autoUpload={true}\n          disabled={uploadState !== UploadState.Idle}\n        />\n        <progress\n          className=\"progress progress-success w-full\"\n          value={uploadPercent}\n          max=\"100\"\n          hidden={uploadState !== UploadState.Uploading}\n        ></progress>\n        <div className=\"divider\"></div>\n        <h3 className=\"mt-0\">2. Select processing options</h3>\n        {data.project.state >= 1 && (\n          <div className=\"w-full\">\n            {inputSignedUrl && (\n              <>\n                <label className=\"label\">\n                  <span className=\"label-text\">{\"Input Video Preview\"}</span>\n                </label>\n                <div className=\"flex flex-col\">\n                  <video\n                    ref={videoRef}\n                    className=\"m-0 max-h-96 max-w-full\"\n                    controls\n                  >\n                    <source src={inputSignedUrl} />\n                  </video>\n                </div>\n                <div className=\"flex justify-between py-2\">\n                  <select\n                    className=\"max-w-s select-bordered select w-full\"\n                    name=\"numOfPerson\"\n                    value={numOfPersonSelectValue}\n                    onChange={selectNumPerson}\n                    // disabled={data.project.state >= 2}\n                  >\n                    <option value=\"\" disabled>\n                      Are there multiple people in the video?\n                    </option>\n                    <option value=\"multi\">\n                      Yes, I will identify the focus of the video.\n                    </option>\n                    <option value=\"single\">No, just one.</option>\n                  </select>\n                  {/* <label className=\"label cursor-pointer justify-start space-x-1\">\n                    <span className=\"label-text\">\n                      Are there multiple people in the video?\n                    </span>\n                    <input\n                      type=\"checkbox\"\n                      className=\"checkbox-primary checkbox\"\n                      checked={showFrameAnnotation}\n                      onChange={toggleSelector}\n                      disabled={data.project.state >= 2}\n                    />\n                  </label> */}\n                </div>\n                {showFrameAnnotation && videoRef.current && (\n                  <FrameAnnotation\n                    video={videoRef.current}\n                    addFocus={addFocus}\n                    existingTrackHints={data.project.cropTrackerOpts?.trackHints}\n                  ></FrameAnnotation>\n                )}\n                <button\n                  className={classNames(\"btn-primary btn my-4 w-full\", {\n                    loading: data.project.state === 2,\n                  })}\n                  disabled={!readyToProcess || data.project.state === 2}\n                  onClick={sendProcessRequest}\n                >\n                  {data.project.state === 2 ? \"Processing\" : \"Start Processing\"}\n                </button>\n              </>\n            )}\n          </div>\n        )}\n        <div className=\"divider\"></div>\n        <h3 className=\"mt-0\">3. Voila! See results. </h3>\n        {data.project.state >= 2 && (\n          <>\n            <ProjectPreview\n              project={data.project}\n              revalidator={revalidator}\n            ></ProjectPreview>\n          </>\n        )}\n        <div className=\"divider\"></div>\n      </div>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nimport type { User } from \"./user.server\";\n\nexport type Size = {\n  width: number\n  height: number\n}\n\nexport type S3Location = {\n  bucket: string\n  key: string\n}\n\nexport type TrackHint = {\n  timeSecs: number\n  normLtwh: [number, number, number, number]\n}\n\nexport type CropTrackerOpts = {\n  excludeLimbs: boolean,\n  paddingRatio: number,\n  smoothingWindowSecs: number,\n  trackHints?: TrackHint[],\n}\n\nexport enum ProjectState {\n  Created,\n  Ready,\n  Processing,\n  Completed,\n}\n\nexport type Project = {\n  id: ReturnType<typeof cuid>;\n  userId: User[\"id\"];\n  title: string;\n  size: Size;\n  state: ProjectState,\n  inputFile?: S3Location,\n  outputFile?: S3Location,\n  cropTrackerOpts?: CropTrackerOpts,\n};\n\ntype ProjectItem = {\n  pk: User[\"id\"];\n  sk: `project#${Project[\"id\"]}`;\n};\n\nconst skToId = (sk: ProjectItem[\"sk\"]): Project[\"id\"] => sk.replace(/^project#/, \"\");\nconst idToSk = (id: Project[\"id\"]): ProjectItem[\"sk\"] => `project#${id}`;\n\nexport async function getProject({\n  id,\n  userId,\n}: Pick<Project, \"id\" | \"userId\">): Promise<Project | null> {\n  const db = await arc.tables();\n\n  const result = await db.project.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: skToId(result.sk),\n      title: result.title,\n      size: result.size,\n      state: result.state,\n      inputFile: result.inputFile,\n      outputFile: result.outputFile,\n      cropTrackerOpts: result.cropTrackerOpts,\n    };\n  }\n  return null;\n}\n\nexport async function getProjectListItems({\n  userId,\n}: Pick<Project, \"userId\">): Promise<Array<Pick<Project, \"id\" | \"title\" | \"state\">>> {\n  const db = await arc.tables();\n\n  const result = await db.project.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  return result.Items.map((n: any) => ({\n    title: n.title,\n    state: n.state,\n    id: skToId(n.sk),\n  }));\n}\n\nexport async function createProject({\n  size,\n  title,\n  userId,\n}: Pick<Project, \"size\" | \"title\" | \"userId\">): Promise<Project> {\n  const db = await arc.tables();\n\n  const result = await db.project.put({\n    pk: userId,\n    sk: idToSk(cuid()),\n    title: title,\n    size: size,\n    state: ProjectState.Created,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\nexport async function updateProject({\n  id,\n  userId,\n  inputFile,\n  outputFile,\n}: Pick<Project, \"id\" | \"userId\" | \"inputFile\" | \"outputFile\">): Promise<Project> {\n  const db = await arc.tables();\n  const existingProj = await db.project.get({ pk: userId, sk: idToSk(id) });\n  \n  if (!existingProj) {\n    throw Error(`Project ${id} does not exist.`)\n  }\n\n  const result = await db.project.put({\n    ...existingProj,\n    inputFile: inputFile ?? existingProj.inputFile,\n    outputFile: outputFile ?? existingProj.outputFile,\n    cropTrackerOpts: existingProj.cropTrackerOpts\n  });\n  \n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\nexport async function updateCropTrackerOptsProject({\n  id,\n  userId,\n  cropTrackerOpts,\n}: Pick<Project, \"id\" | \"userId\" | \"cropTrackerOpts\">): Promise<Project> {\n  const db = await arc.tables();\n  const existingProj = await db.project.get({ pk: userId, sk: idToSk(id) });\n  \n  if (!existingProj) {\n    throw Error(`Project ${id} does not exist.`)\n  }\n\n  const result = await db.project.put({\n    ...existingProj,\n    cropTrackerOpts: {\n      ...existingProj.cropTrackerOpts,\n      ...cropTrackerOpts,\n    }\n  });\n  \n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\n\nexport async function addProjectTrackHints({\n  id,\n  userId,\n}: Pick<Project, \"id\" | \"userId\">, trackHint: TrackHint): Promise<Project> {\n  const db = await arc.tables();\n  const existingProj = await db.project.get({ pk: userId, sk: idToSk(id) });\n  \n  if (!existingProj) {\n    throw Error(`Project ${id} does not exist.`)\n  }\n\n  const updatedProject = Object.assign({}, existingProj)\n  if (!updatedProject.cropTrackerOpts) {\n    updatedProject.cropTrackerOpts = {}\n  } \n  if (updatedProject.cropTrackerOpts.trackHints) {\n    updatedProject.cropTrackerOpts.trackHints.push(trackHint)\n  } else {\n    updatedProject.cropTrackerOpts.trackHints = [trackHint]\n  }\n  const result = await db.project.put(updatedProject);\n  \n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\nexport async function updateProjectState({\n  id,\n  userId,\n  state,\n}: Pick<Project, \"id\" | \"userId\" | \"state\">): Promise<Project> {\n  const db = await arc.tables();\n  const existingProj = await db.project.get({ pk: userId, sk: idToSk(id) });\n  \n  if (!existingProj) {\n    throw Error(`Project ${id} does not exist.`)\n  }\n\n  const updatedProject = Object.assign({}, existingProj)\n  updatedProject.state = state\n  const result = await db.project.put(updatedProject);\n  \n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    size: result.size,\n    state: result.state,\n    inputFile: result.inputFile,\n    outputFile: result.outputFile,\n    cropTrackerOpts: result.cropTrackerOpts,\n  };\n}\n\n\nexport async function deleteProject({ id, userId }: Pick<Project, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.project.delete({ pk: userId, sk: idToSk(id) });\n}\n", "import AWS, { SQS } from \"aws-sdk\";\nimport { bool } from \"aws-sdk/clients/signer\";\nimport cuid from \"cuid\";\nimport path from \"node:path\";\nimport { TrackHint } from \"./models/project.server\";\n\n// This is in camel-case because this is consumed in the python code\ntype CropperSQSPayload = {\n  type: \"crop\";\n  bucket: string;\n  input_key: string;\n  output_key: string;\n  output_width: number;\n  output_height: number;\n  padding_ratio: number;\n  smoothing_window_secs: number;\n  exclude_limbs: bool;\n  track_hints?: TrackHint[];\n};\n\n// type TrackerSQSPayload = {\n//     type: \"track\";\n//     bucket: string;\n//     input_key: string;\n//     track_dest: string;\n//     track_preview_dir: string;\n// };\n\nconst QUEUE_URL = \"https://sqs.us-west-2.amazonaws.com/872511653058/cropper_queue-4f01062\"\n\n// TODO: Use explicit dedupe id for project ?\nexport const sendSqsMessage = async (\n  payload: CropperSQSPayload\n): Promise<SQS.SendMessageResult> => {\n  // for (let [key, value] of Object.entries(payload)) {\n  //   if (key !== \"trackHints\" && !value) {\n  //     throw Error(`All parameters required. ${value} does not exist.`);\n  //   }\n  // }\n  const body = JSON.stringify(payload)\n  console.log(body)\n  const params = {\n    MessageAttributes: {\n      Action: {\n        DataType: \"String\",\n        StringValue: payload.type,\n      },\n    },\n    MessageBody: body,\n    // MessageDeduplicationId: cuid(), // Required for FIFO queues\n    // MessageGroupId: \"Group1\", // Required for FIFO queues\n    QueueUrl: QUEUE_URL,\n  };\n  const sqs = new AWS.SQS({ apiVersion: \"2012-11-05\" });\n  return new Promise(\n    (resolve, reject) => {\n      sqs.sendMessage(params, function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    }\n  );\n};\n\nexport const getS3KeyFileName = (key: string): string => {\n  return path.parse(key).name;\n};\n", "import { json } from \"@remix-run/node\";\nimport AWS from \"aws-sdk\";\n\n\nexport async function signGetObjectUrl({ userId, bucket, key }: { userId: string, bucket: string, key: string }) {\n    // const url = new URL(request.url)\n    // const bucket = url.searchParams.get('bucket')\n    // const key = url.searchParams.get('key')\n\n    if (!bucket || !key) {\n        throw json({ error: \"Missing key or bucket\" }, { status: 422 })\n    }\n    if (!(key?.startsWith(`tmp/${userId}`) || key?.startsWith(`cropper_out/${userId}`))) {\n        throw json({ error: \"S3 path not accessible by user\" }, { status : 403 })\n    }\n\n    const s3Params = {\n        Bucket: bucket,\n        Key: key,\n        Expires: 300,\n    }\n    const s3 = new AWS.S3()\n    try {\n        await s3.headObject({ Bucket: bucket, Key: key }).promise();\n    } catch (e) {\n        throw json({ error: \"S3 path does not exist\" }, { status: 404 })\n    }\n    \n    const getObjUrl = await s3.getSignedUrlPromise('getObject', s3Params)\n    return json({\n        signedUrl: getObjUrl,\n        bucket: s3Params.Bucket,\n        key: s3Params.Key,\n    })\n}", "import { useRevalidator } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport type { Project } from \"~/models/project.server\";\n\n\nconst fetchOutputUrl = async (project: Project) => {\n  if (!project.outputFile) {\n    return;\n  }\n  const outputFile = project.outputFile;\n  const params = new URLSearchParams({\n    key: outputFile.key,\n    bucket: outputFile.bucket,\n  });\n  const response = await fetch(`/s3/getobjecturl?${params.toString()}`);\n  const body = await response.json();\n  if (!response.ok) {\n    throw body;\n  }\n  return body.signedUrl;\n};\n\nexport default function ProjectPreview({ project, revalidator }: { project: Project, revalidator: ReturnType<typeof useRevalidator> }) {\n  const [outputUrl, setOutputUrl] = useState<string>(\"\");\n  const [outputPollInterval, setOutputPollInterval] = useState<NodeJS.Timer>();\n\n  useEffect(() => {\n    if (outputPollInterval) {\n      clearInterval(outputPollInterval);\n    }\n    fetchOutputUrl(project).then((url) => {\n        setOutputUrl(url);\n        revalidator.revalidate()\n    });\n    const interval = setInterval(() => {\n      fetchOutputUrl(project).then((url) => {\n        setOutputUrl(url);\n        revalidator.revalidate()\n        clearInterval(interval);\n      });\n    }, 10000);\n\n    setOutputPollInterval(interval);\n    return () => clearInterval(interval);\n  }, []);\n\n  const downloadObject = async () => {\n    if (!project.outputFile) {\n      throw Error(\"Project.outputFile should not be undefined\");\n    }\n    const params = new URLSearchParams({\n      key: project.outputFile.key,\n      bucket: project.outputFile.bucket,\n    });\n    const res = await fetch(`/s3/getobjecturl?${params.toString()}`);\n    const resJson = await res.json();\n    window.open(resJson.signedUrl, \"_blank\");\n  };\n\n  return (\n    <div className=\"flex h-full w-full max-w-xl flex-col items-center p-2\">\n      <div className=\"form-control w-full max-w-lg\">\n        <label className=\"label\">\n          <span className=\"label-text\">{\"Output Preview\"}</span>\n        </label>\n        {outputUrl && (\n          <>\n            <div className=\"w-full max-w-lg\">\n              <div className=\"flex flex-col\">\n                <video className=\"m-0 max-h-96 max-full-w\" controls>\n                  <source src={outputUrl} />\n                </video>\n              </div>\n            </div>\n          </>\n        )}\n        {!outputUrl && <progress className=\"progress w-56\"></progress>}\n        <button className=\"btn my-2\" onClick={downloadObject} disabled={!outputUrl}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth={1.5}\n            stroke=\"currentColor\"\n            className=\"h-4 w-4 mr-1\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\"\n            />\n          </svg>\n          Download\n        </button>\n      </div>\n    </div>\n  );\n}\n", "import { useRevalidator } from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport type { Project, TrackHint } from \"~/models/project.server\";\n\nexport default function FrameAnnotation({\n  video,\n  addFocus,\n  existingTrackHints,\n}: {\n  video: HTMLVideoElement;\n  existingTrackHints?: TrackHint[];\n  addFocus: (t: TrackHint) => void;\n}) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const overlayRef = useRef<HTMLCanvasElement>(null);\n  const [lastTrackHint, setTrackHint] = useState<TrackHint>();\n  const [currentVideoTime, setCurrentVideoTime] = useState(0);\n  const [canAddHint, setCanAddHint] = useState(!existingTrackHints);\n\n  video.onseeked = (ev) => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const ctx = canvasRef.current.getContext(\"2d\");\n    if (!ctx) {\n      return;\n    }\n    const dims = video.getBoundingClientRect();\n    ctx.drawImage(video, 0, 0, dims.width, dims.height);\n    setCurrentVideoTime(video.currentTime);\n  };\n\n  video.oncanplaythrough = () => {\n    if (video.currentTime <= 1) {\n        video.currentTime = video.duration / 2;\n    }\n  }\n\n  const setupInteractionHandlers = (overlay: HTMLCanvasElement, canvas: HTMLCanvasElement) => {\n      const ctx = overlay.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      \n      // this flage is true when the user is dragging the mouse\n      let isActive = false;\n\n      // these vars will hold the starting mouse position\n      let posX = 0;\n      let posY = 0;\n      let width = 0;\n      let height = 0;\n      let offsetX = 0;\n      let offsetY = 0;\n      let boxSize = 0;\n\n      const setup = () => {\n        const dims = canvas.getBoundingClientRect();\n        overlay.width = dims.width;\n        overlay.height = dims.height;\n  \n        boxSize = Math.floor(Math.min(dims.width, dims.height) / 6)\n  \n        // style the context\n        ctx.strokeStyle = \"cyan\";\n        ctx.lineWidth = 4;\n        ctx.strokeRect(0, 0, dims.width, dims.height);\n  \n        // calculate where the canvas is on the window\n        // (used to help calculate mouseX/mouseY)\n        let overlayRect = overlay.getBoundingClientRect();\n        \n        offsetX = overlayRect.left;\n        offsetY = overlayRect.top;\n\n        posX = offsetX;\n        posY = offsetY;\n        width = boxSize;\n        height = boxSize;\n      }\n\n\n      const drawSelectorBox = (mouseX: number, mouseY: number) =>  {\n        // save the starting x/y of the rectangle\n        posX = Math.max(Math.floor(mouseX - offsetX) - Math.floor(boxSize / 2), 0);\n        posY = Math.max(Math.floor(mouseY - offsetY) - boxSize , 0);\n\n        width = Math.min(boxSize, overlay.width - posX);\n        height = Math.min(boxSize * 2, overlay.height - posY);\n\n        // clear the canvas\n        ctx.clearRect(0, 0, overlay.width, overlay.height);\n\n        // draw a new rect from the start position\n        // to the current mouse position\n        ctx.strokeRect(posX, posY, width, height);\n      }\n\n      overlay.onmousedown = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setup()\n        drawSelectorBox(e.clientX, e.clientY)\n        isActive = true;\n      };\n\n      overlay.onmouseup = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        // the drag is over, clear the dragging flag\n        isActive = false;\n        const dims = canvas.getBoundingClientRect();\n        setTrackHint({\n          normLtwh: [\n            posX / dims.width,\n            posY / dims.height,\n            width / dims.width,\n            height / dims.height,\n          ],\n          timeSecs: video.currentTime,\n        });\n        // setCurrentVideoTime(video.currentTime)\n      };\n\n      overlay.onmousemove = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        // if we're not dragging, just return\n        if (!isActive) {\n          return;\n        }\n        drawSelectorBox(e.clientX, e.clientY)\n      };\n\n      // overlay.ontouchstart = (e) => {\n      //   const touch = e.touches[0]\n      // }\n      // overlay.ontouchend\n      // overlay.ontouchmove\n      // Get the position of a touch relative to the canvas\n      overlay.addEventListener(\n        \"touchstart\",\n        (e) => {\n          const touch = e.touches[0];\n          posX = Math.floor(touch.clientX - offsetX);\n          posY = Math.floor(touch.clientY - offsetY);\n          var mouseEvent = new MouseEvent(\"mousedown\", {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n          });\n          overlay.dispatchEvent(mouseEvent);\n        },\n        false\n      );\n      overlay.addEventListener(\n        \"touchend\",\n        (e) => {\n          var mouseEvent = new MouseEvent(\"mouseup\", {});\n          overlay.dispatchEvent(mouseEvent);\n        },\n        false\n      );\n      overlay.addEventListener(\n        \"touchmove\",\n        (e) => {\n          var touch = e.touches[0];\n          var mouseEvent = new MouseEvent(\"mousemove\", {\n            clientX: touch.clientX,\n            clientY: touch.clientY,\n          });\n          overlay.dispatchEvent(mouseEvent);\n        },\n        false\n      );\n  }\n\n  useEffect(() => {\n    if (!canvasRef.current || !overlayRef.current) {\n      return;\n    }\n    const dims = video.getBoundingClientRect();\n    // eslint-disable-next-line no-self-assign\n    video.currentTime = video.currentTime // This triggers an onseeked event\n    canvasRef.current.width = dims.width;\n    canvasRef.current.height = dims.height;\n    overlayRef.current.width = dims.width;\n    overlayRef.current.height = dims.height;\n\n    if (!existingTrackHints) {\n        setupInteractionHandlers(overlayRef.current, canvasRef.current)\n    } else {\n        const overlayRect = overlayRef.current.getBoundingClientRect();\n        const ctx = overlayRef.current.getContext('2d')\n        if (!ctx) return\n        // style the context\n        ctx.strokeStyle = \"cyan\";\n        ctx.lineWidth = 4;\n        \n        let trackHint = existingTrackHints[0]\n        const [l, t, w, h] = trackHint.normLtwh\n        ctx.strokeRect(l * overlayRect.width, t * overlayRect.height, w * overlayRect.width, h * overlayRect.height);\n    }\n    \n  }, [canvasRef, overlayRef, video]);\n\n  const clearOverlay = () => {\n    if (overlayRef.current) {\n      const canvas = overlayRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      canvas.width = 0;\n      canvas.height = 0;\n    }\n  };\n\n  const addLastTrackHint = () => {\n    if (lastTrackHint) {\n        addFocus(lastTrackHint)\n        // clearOverlay()\n        setCanAddHint(false)\n    }\n  }\n\n  return (\n    <div className=\"form-control w-full max-w-lg\">\n      <label className=\"label\">\n        <span className=\"label-text\">{\"Click on the person that you want to crop in to:\"}</span>\n      </label>\n      <div className=\"relative\">\n        <canvas\n            ref={overlayRef}\n            className=\"absolute left-0 top-0 z-10\"\n        ></canvas>\n        <canvas ref={canvasRef}></canvas>\n      </div>\n      \n      <button\n        className=\"btn-s m btn-primary btn m-2\"\n        onClick={addLastTrackHint}\n        disabled={!lastTrackHint || !canAddHint}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={1.5}\n          stroke=\"currentColor\"\n          className=\"mr-1 h-6 w-6\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n        Focus on this person\n      </button>\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport AWS from \"aws-sdk\";\nimport { requireUserId } from \"~/session.server\";\n\n\nexport async function loader({ request }: LoaderArgs) {\n    const userId = await requireUserId(request);\n    const url = new URL(request.url)\n    const bucket = url.searchParams.get('bucket')\n    const key = url.searchParams.get('key')\n\n    if (!bucket || !key) {\n        return json({ error: \"Missing key or bucket\" }, { status: 422 })\n    }\n    if (!(key?.startsWith(`tmp/${userId}`) || key?.startsWith(`cropper_out/${userId}`))) {\n        return json({ error: \"S3 path not accessible by user\" }, { status : 403 })\n    }\n\n    const s3Params = {\n        Bucket: bucket,\n        Key: key,\n        Expires: 300,\n    }\n    const s3 = new AWS.S3()\n    try {\n        await s3.headObject({ Bucket: bucket, Key: key }).promise();\n    } catch (e) {\n        return json({ error: \"S3 path does not exist\" }, { status: 404 })\n    }\n    \n    const getObjUrl = await s3.getSignedUrlPromise('getObject', s3Params)\n\n    return json({\n        signedUrl: getObjUrl,\n        bucket: s3Params.Bucket,\n        key: s3Params.Key,\n    })\n}", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport AWS from \"aws-sdk\";\nimport { requireUserId } from \"~/session.server\";\n\n\nconst CLIPS_S3_BUCKET_NAME = \"clips-store-5a1a17e\"\nconst CLIPS_S3_UPLOAD_PATH = \"tmp\"\n\nexport async function loader({ request }: LoaderArgs) {\n    const userId = await requireUserId(request);\n    const url = new URL(request.url)\n    const objectName = url.searchParams.get('objectName')\n    const contentType = url.searchParams.get('contentType')\n    const projectId = url.searchParams.get('path')\n\n    // Get signed URL from S3\n    const s3Params = {\n        Bucket: CLIPS_S3_BUCKET_NAME,\n        Key: `${CLIPS_S3_UPLOAD_PATH}/${userId}/${projectId}/${objectName}`,\n        Expires: 300,\n        ContentType: contentType,\n        ACL: 'private'\n    }\n    // console.log('Params: ', s3Params)\n    const s3 = new AWS.S3()\n    const uploadURL = await s3.getSignedUrlPromise('putObject', s3Params)\n\n    return json({\n        signedUrl: uploadURL,\n        bucket: s3Params.Bucket,\n        key: s3Params.Key,\n        contentType: s3Params.ContentType,\n    })\n}", "import { json, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { Outlet, useLoaderData, useLocation } from \"@remix-run/react\";\nimport { requireUserId } from \"~/session.server\";\nimport invariant from \"tiny-invariant\";\nimport { getProject } from \"~/models/project.server\";\nimport classNames from \"classnames\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Clips App\" }];\n\nexport const loader = async ({ params, request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  invariant(params.projectId, \"projectId not found\");\n\n  const project = await getProject({ id: params.projectId, userId });\n  if (!project) {\n    throw json({ error: \"Not Found\" }, { status: 404 });\n  }\n  return json({ project });\n};\n\nexport default function ProjectPage(props: { \"\": any; }) {\n  const data = useLoaderData<typeof loader>();\n  \n  return (\n    <div className=\"flex justify-center w-full bg-gray-50\">\n      <div className=\"flex justify-center w-full max-w-xl p-6\">\n        {/* <h2 className=\"text-2xl font-bold my-2 indent-1\">{data.project.title}</h2>\n        <div className=\"divider\"></div> */}\n        <Outlet/>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport AWS from \"aws-sdk\";\nimport { requireUserId } from \"~/session.server\";\n\nconst CLIPS_S3_BUCKET_NAME = \"clips-store-5a1a17e\"\nconst CLIPS_S3_UPLOAD_PATH = \"cropper_out\"\n\nexport async function loader({ request, params }: LoaderArgs) {\n    const userId = await requireUserId(request, '/');\n\n    // Get signed URL from S3\n    const listObjParams = {\n        Bucket: CLIPS_S3_BUCKET_NAME,\n        Prefix: `${CLIPS_S3_UPLOAD_PATH}/${userId}/${params.projectId}/tracks`,\n    }\n    // console.log('Params: ', params)\n    const s3 = new AWS.S3()\n    const objects = await s3.listObjectsV2(listObjParams).promise()\n    // console.log(objects)\n\n    return json({\n        objects\n    })\n}", "import {\n  V2_MetaFunction,\n  LoaderArgs,\n  ActionArgs,\n  redirect,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport {\n  deleteProject,\n  getProjectListItems,\n  ProjectState,\n} from \"~/models/project.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Clips App\" }];\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await requireUserId(request);\n  const projectListItems = await getProjectListItems({ userId });\n  return json({ projectListItems });\n};\n\nexport const action = async ({ params, request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n  const formData = await request.formData();\n  const projectId = formData.get(\"projectId\");\n  if (typeof projectId !== \"string\" || projectId.length === 0) {\n    return json(\n      { errors: { } },\n      { status: 500 }\n    );\n  }\n\n  await deleteProject({ id: projectId, userId });\n\n  return redirect(\"/app\");\n};\n\nexport default function ProjectsPage() {\n  const data = useLoaderData<typeof loader>();\n  const submit = useSubmit();\n  // const user = useUser();\n  const projectStateToString = (state: ProjectState) => {\n    switch (state) {\n      case 0:\n        return \"Created\";\n      case 1:\n        return \"Ready\";\n      case 2:\n        return \"Processing\";\n      case 3:\n        return \"Completed\";\n    }\n  };\n\n  const deleteProject = (id: string) => {\n    const formData = new FormData();\n    formData.append(\"projectId\", id);\n    submit(formData, {\n      method: \"post\",\n    });\n  }\n  return (\n    <div className=\"flex w-full justify-center bg-gray-50\">\n      <div className=\"h-full w-full max-w-lg bg-gray-50\">\n        <div className=\"flex justify-between py-4\">\n          <h2 className=\"text-slate mx-4 my-auto text-xl font-bold\">\n            Projects\n          </h2>\n          <Link to=\"new\" className=\"mx-4 block\">\n            <button className=\"btn-primary btn-sm btn\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth={1.5}\n                stroke=\"currentColor\"\n                className=\"h-4 w-4\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M12 4.5v15m7.5-7.5h-15\"\n                />\n              </svg>\n              New\n            </button>\n          </Link>\n        </div>\n\n        <hr />\n        {data.projectListItems.length === 0 ? (\n          <p className=\"p-4\">No projects yet</p>\n        ) : (\n          <ol>\n            {data.projectListItems.map((project, idx) => (\n              <li key={project.id} className=\"bg-gray-100\">\n                <NavLink\n                  className=\"block flex items-center justify-between border-b border-gray-200 p-4\"\n                  to={project.id}\n                >\n                  <div className=\"flex items-center\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      strokeWidth={1.5}\n                      stroke=\"currentColor\"\n                      className=\"mr-1 h-4 w-4\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        d=\"M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z\"\n                      />\n                    </svg>\n                    <span className=\"text-med font-bold text-neutral\">\n                      {`${project.title}`}\n                    </span>\n                  </div>\n\n                  <div className=\"flex items-center\">\n                    <span className=\"pr-4 text-sm text-neutral\">\n                      {`${projectStateToString(project.state)}`}\n                    </span>\n                    <button onClick={(e) => {\n                      e.stopPropagation();\n                      e.preventDefault();\n                      deleteProject(project.id)\n                    }}>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        strokeWidth={1.5}\n                        stroke=\"currentColor\"\n                        className=\"h-4 w-4\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n                </NavLink>\n              </li>\n            ))}\n          </ol>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\n\nimport { verifyLogin } from \"~/models/user.server\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json(\n      { errors: { email: \"Invalid email or password\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    redirectTo,\n    remember: remember === \"on\" ? true : false,\n    request,\n    userId: user.id,\n  });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Login\" }];\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\n  const actionData = useActionData<typeof action>();\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"mx-auto w-full max-w-md my-auto px-8\">\n      <Form method=\"post\" className=\"space-y-6\">\n        <div>\n          <label\n            htmlFor=\"email\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Email address\n          </label>\n          <div className=\"mt-1\">\n            <input\n              ref={emailRef}\n              id=\"email\"\n              required\n              autoFocus={true}\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              aria-invalid={actionData?.errors?.email ? true : undefined}\n              aria-describedby=\"email-error\"\n              className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n            />\n            {actionData?.errors?.email && (\n              <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                {actionData.errors.email}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div>\n          <label\n            htmlFor=\"password\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Password\n          </label>\n          <div className=\"mt-1\">\n            <input\n              id=\"password\"\n              ref={passwordRef}\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              aria-invalid={actionData?.errors?.password ? true : undefined}\n              aria-describedby=\"password-error\"\n              className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n            />\n            {actionData?.errors?.password && (\n              <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                {actionData.errors.password}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n        <button\n          type=\"submit\"\n          className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Log in\n        </button>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            <input\n              id=\"remember\"\n              name=\"remember\"\n              type=\"checkbox\"\n              className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n            <label\n              htmlFor=\"remember\"\n              className=\"ml-2 block text-sm text-gray-900\"\n            >\n              Remember me\n            </label>\n          </div>\n          <div className=\"text-center text-sm text-gray-500\">\n            Don't have an account?{\" \"}\n            <Link\n              className=\"text-blue-500 underline\"\n              to={{\n                pathname: \"/app/join\",\n                search: searchParams.toString(),\n              }}\n            >\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport ReactS3Uploader from \"react-s3-uploader\";\nimport { useFetcher } from \"@remix-run/react\";\nimport { useOptionalUser } from \"~/utils\";\nimport { useEffect, useState } from \"react\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Clips App\" }];\n\nexport default function ProjectsPage() {\n  const listObjectsFetcher = useFetcher();\n  const uploadedObjUrlFetcher = useFetcher();\n  const sqsAction = useFetcher();\n  const user = useOptionalUser();\n  const [inputComp, setInputComp] = useState<HTMLInputElement>();\n  const [previewUrl, setPreviewUrl] = useState<string>();\n\n  const getObjectUrl = async (bucket: string, key: string) => {\n    const params = new URLSearchParams({\n      key,\n      bucket,\n    });\n    const res = await fetch(`/s3/getobjecturl?${params.toString()}`);\n    const resJson = await res.json();\n    return resJson.signedUrl;\n  };\n\n  const downloadObject = async (bucket: string, key: string) => {\n    const signedUrl = await getObjectUrl(bucket, key);\n    window.open(signedUrl, \"_blank\");\n  };\n\n  const onUploadFinish = (res: any, file: any) => {\n    console.log(res, file);\n    const params = new URLSearchParams({\n      key: res.key,\n      bucket: res.bucket,\n    });\n    uploadedObjUrlFetcher.data = undefined;\n    uploadedObjUrlFetcher.load(`/s3/getobjecturl?${params.toString()}`);\n    if (inputComp) {\n      inputComp.value = \"\";\n    }\n    sqsAction.submit(\n      { key: res.key, bucket: res.bucket },\n      { method: \"post\", action: \"/sqs/cropper\" }\n    );\n  };\n\n  const listObjects = () => {\n    listObjectsFetcher.load(\"/s3/listobjects\");\n  };\n\n  useEffect(() => {\n    if (user) {\n      listObjects()\n    }\n  }, [])\n\n  return (\n    <div className=\"flex-1 p-6\">\n      <div className=\"p-2\">\n        <ReactS3Uploader\n          signingUrl=\"/s3/putobjecturl\"\n          signingUrlMethod=\"GET\"\n          s3path=\"tmp/\"\n          // preprocess={this.onUploadStart}\n          // onSignedUrl={onSignedUrl}\n          // onProgress={this.onUploadProgress}\n          // onError={this.onUploadError}\n          onFinish={onUploadFinish}\n          // signingUrlHeaders={{ additional: headers }}\n          // signingUrlQueryParams={{ additional: query-params }}\n          signingUrlWithCredentials={true} // in case when need to pass authentication credentials via CORS\n          uploadRequestHeaders={{ \"x-amz-acl\": \"private\" }}\n          contentDisposition=\"auto\"\n          scrubFilename={(filename: string) =>\n            filename.replace(/[^\\w\\d_\\-.]+/gi, \"\")\n          }\n          inputRef={(cmp) => setInputComp(cmp)}\n          autoUpload={true}\n        />\n      </div>\n      {uploadedObjUrlFetcher.state === \"idle\" &&\n        uploadedObjUrlFetcher.data && (\n          <div className=\"p-6\">\n            <h1>Input Preview</h1>\n            <video width=\"320\" height=\"240\" controls>\n              <source src={uploadedObjUrlFetcher.data.signedUrl} />\n            </video>\n          </div>\n          \n        )}\n      <button\n        onClick={listObjects}\n        className=\"bg-gray-100 hover:bg-gray-500 rounded-md p-2 font-medium text-black\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={1.5}\n          stroke=\"currentColor\"\n          className=\"h-4 w-4\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\"\n          />\n        </svg>\n      </button>\n      <ul className=\"list-disc px-6\">\n        {listObjectsFetcher.data &&\n          listObjectsFetcher.data.objects.Contents.map((content: any) => (\n            <li key={content.ETag}>\n              <button\n                className=\"mx-1 rounded-sm bg-gray-100 p-2 text-black hover:bg-gray-200\"\n                onClick={() =>\n                  downloadObject(\n                    listObjectsFetcher.data.objects.Name,\n                    content.Key\n                  )\n                }\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"h-4 w-4\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\"\n                  />\n                </svg>\n              </button>\n              <button\n                className=\"mx-1 rounded-sm bg-gray-100 p-2 text-black hover:bg-gray-200\"\n                onClick={() =>\n                  getObjectUrl(\n                    listObjectsFetcher.data.objects.Name,\n                    content.Key\n                  ).then((url) => setPreviewUrl(url))\n                }\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"h-4 w-4\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z\"\n                  />\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\n                  />\n                </svg>\n              </button>\n              {content.Key}\n            </li>\n          ))}\n      </ul>\n      {previewUrl && (\n          <div className=\"p-6\">\n            <h1>Output Preview</h1>\n            <video width=\"320\" height=\"240\" controls>\n              <source src={previewUrl} />\n            </video>\n          </div>\n        )}\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\nexport const action = async ({ request }: ActionArgs) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    redirectTo,\n    remember: false,\n    request,\n    userId: user.id,\n  });\n};\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Sign Up\" }];\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData<typeof action>();\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"mx-auto w-full max-w-md my-auto px-8\">\n      <Form method=\"post\" className=\"space-y-6\">\n        <div>\n          <label\n            htmlFor=\"email\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Email address\n          </label>\n          <div className=\"mt-1\">\n            <input\n              ref={emailRef}\n              id=\"email\"\n              required\n              autoFocus={true}\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              aria-invalid={actionData?.errors?.email ? true : undefined}\n              aria-describedby=\"email-error\"\n              className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n            />\n            {actionData?.errors?.email && (\n              <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                {actionData.errors.email}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div>\n          <label\n            htmlFor=\"password\"\n            className=\"block text-sm font-medium text-gray-700\"\n          >\n            Password\n          </label>\n          <div className=\"mt-1\">\n            <input\n              id=\"password\"\n              ref={passwordRef}\n              name=\"password\"\n              type=\"password\"\n              autoComplete=\"new-password\"\n              aria-invalid={actionData?.errors?.password ? true : undefined}\n              aria-describedby=\"password-error\"\n              className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n            />\n            {actionData?.errors?.password && (\n              <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                {actionData.errors.password}\n              </div>\n            )}\n          </div>\n        </div>\n\n        <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n        <button\n          type=\"submit\"\n          className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Create Account\n        </button>\n        <div className=\"flex items-center justify-center\">\n          <div className=\"text-center text-sm text-gray-500\">\n            Already have an account?{\" \"}\n            <Link\n              className=\"text-blue-500 underline\"\n              to={{\n                pathname: \"/app/login\",\n                search: searchParams.toString(),\n              }}\n            >\n              Log in\n            </Link>\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import type { V2_MetaFunction, ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { requireUserId } from \"~/session.server\";\nimport type { Size } from \"~/models/project.server\";\nimport { createProject } from \"~/models/project.server\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Clips - New Project\" }];\n\nenum AspectRatio {\n  TallPortrait = \"tall_portrait\",\n  Portrait = \"portrait\",\n  Box = \"box\",\n}\n\nexport const action = async ({ request }: ActionArgs) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json(\n      { errors: { body: null, title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const sizes: { [key in AspectRatio]: Size } = {\n    [AspectRatio.TallPortrait]: {\n      width: 720,\n      height: 1280,\n    },\n    [AspectRatio.Portrait]: {\n      width: 720,\n      height: 960,\n    },\n    [AspectRatio.Box]: {\n      width: 720,\n      height: 720,\n    },\n  };\n\n  const aspectRatioStr = formData.get(\"aspectRatio\");\n  const size: Size = sizes[aspectRatioStr as AspectRatio];\n\n  const project = await createProject({ size, title, userId });\n\n  return redirect(`/app/${project.id}`);\n};\n\nexport default function ProjectsPage() {\n  const actionData = useActionData<typeof action>();\n  const titleRef = useRef<HTMLInputElement>(null);\n  const [aspectRatio, setAspectRatio] = useState<AspectRatio>(\n    AspectRatio.TallPortrait\n  );\n\n  useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    }\n  }, [actionData]);\n\n  const onAspectRatioChange: React.ChangeEventHandler<HTMLInputElement> = (\n    event\n  ) => {\n    setAspectRatio(event.currentTarget.value as AspectRatio);\n  };\n\n  return (\n    <div className=\"flex h-full w-full justify-center bg-gray-50\">\n      <div className=\"h-full w-full max-w-xl py-2\">\n        <Form method=\"post\" className=\"form-control p-2\">\n          <label className=\"label\">\n            <span className=\"label-text\" >Project Title</span>\n          </label>\n          <input\n            ref={titleRef}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"My awesome project\"\n            className={classNames(\"max-w-s input w-full\", {\"input-error\": !!actionData?.errors?.title})}\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n          />\n          <label className=\"label\">\n            <span className=\"label-text\">Aspect Ratio</span>\n          </label>\n          <label className=\"label cursor-pointer justify-normal space-x-2\">\n            <input\n              type=\"radio\"\n              name=\"aspectRatio\"\n              className=\"radio checked:bg-blue-500\"\n              onChange={onAspectRatioChange}\n              checked={aspectRatio === AspectRatio.TallPortrait}\n              value={AspectRatio.TallPortrait}\n            />\n            <span className=\"label-text\">\n              9:16 - 720x1280 - Best for TikTok / Reels / Shorts\n            </span>\n          </label>\n          <label className=\"label cursor-pointer justify-normal space-x-2\">\n            <input\n              type=\"radio\"\n              name=\"aspectRatio\"\n              className=\"radio checked:bg-blue-500\"\n              onChange={onAspectRatioChange}\n              checked={aspectRatio === AspectRatio.Portrait}\n              value={AspectRatio.Portrait}\n            />\n            <span className=\"m label-text\">3:4 - 720x960 - Portrait</span>\n          </label>\n          <label className=\"label cursor-pointer justify-normal space-x-2\">\n            <input\n              type=\"radio\"\n              name=\"aspectRatio\"\n              className=\"radio checked:bg-blue-500\"\n              onChange={onAspectRatioChange}\n              checked={aspectRatio === AspectRatio.Box}\n              value={AspectRatio.Box}\n            />\n            <span className=\"m label-text\">1:1 - 720x720 - Box</span>\n          </label>\n          <button type=\"submit\" className=\"btn-primary btn my-1\">Create Project</button>\n          <button onClick={() => history.back()} className=\"btn my-1\">Cancel</button>\n        </Form>  \n      </div>\n    </div>\n  );\n}\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Clips App\" }];\n\nexport async function loader() {\n  return redirect(\"/app\")\n}", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => logout(request);\n\nexport const loader = async () => redirect(\"/\");\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { Form, Link, Outlet } from \"@remix-run/react\";\nimport { useOptionalUser } from \"~/utils\";\nimport { UserIcon } from \"@heroicons/react/24/solid\";\n\nexport const meta: V2_MetaFunction = () => [{ title: \"Clips App\" }];\n\nexport default function IndexPage() {\n  const user = useOptionalUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"bg-grey-800 w-full p-4 text-white\">\n        <div className=\"m-auto flex h-full w-full max-w-xl items-center justify-stretch py-2\">\n          <Link className=\"flex-1 prose\" to=\"/app\">\n            <h1 >Clips</h1>\n          </Link>\n          <div className=\"full-width flex justify-end space-x-2\">\n            {user && (\n              <div className=\"flex items-center prose\">\n                <p>{user.email}</p>\n              </div>\n            )}\n            {!user && (\n              <Link\n                to=\"/app/login\"\n                className=\"mx-2 flex items-center justify-center rounded-md bg-red-500 px-4 py-3 font-medium text-white hover:bg-red-600\"\n              >\n                Log In\n              </Link>\n            )}\n            {!user && (\n              <Link\n                to=\"/app/join\"\n                className=\"flex items-center justify-center rounded-md bg-red-500 px-4 py-3 font-medium text-white hover:bg-red-600\"\n              >\n                Sign Up\n              </Link>\n            )}\n            {user && (\n              <Form action=\"/logout\" method=\"post\">\n                <button\n                  type=\"submit\"\n                  className=\"rounded-full bg-slate-600 px-2 py-2 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n                >\n                  <UserIcon className=\"h-4 w-4 text-white\" title={user.email} />\n                </button>\n              </Form>\n            )}\n          </div>\n        </div>\n      </header>\n      <main className=\"flex h-full bg-white\">\n        <Outlet />\n      </main>\n      {/* <footer className=\"footer items-center bg-neutral p-4 text-neutral-content\">\n        <div className=\"grid-flow-col items-center\">\n          <p>All rights reserved - gsalisi.dev</p>\n        </div>\n        {/* <div className=\"grid-flow-col gap-4 md:place-self-center md:justify-self-end\">\n        <a><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"fill-current\"><path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"></path></svg>\n        </a> \n        <a><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"fill-current\"><path d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path></svg></a>\n        <a><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"fill-current\"><path d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path></svg></a>\n    </div> \n      </footer> */}\n    </div>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action = async ({ request }: ActionArgs) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  const user = await createUser(email, \"myreallystrongpassword\");\n\n  return createUserSession({\n    redirectTo: \"/\",\n    remember: true,\n    request,\n    userId: user.id,\n  });\n};\n\nexport default null;\n", "export default {'version':'3f330443','entry':{'module':'/_static/build/entry.client-2ZKGLTVA.js','imports':['/_static/build/_shared/chunk-SZXCM7N7.js','/_static/build/_shared/chunk-N6U4DSS3.js','/_static/build/_shared/chunk-7MTQJYW3.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-GNHS5LEB.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-XUDH6CD7.js','imports':['/_static/build/_shared/chunk-P3KPC2NU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/_index-EZLUX2DF.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app':{'id':'routes/app','parentId':'root','path':'app','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app-TFQSBXIR.js','imports':['/_static/build/_shared/chunk-6S5UHHSO.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.$projectId':{'id':'routes/app.$projectId','parentId':'routes/app','path':':projectId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.$projectId-5YFVQQK6.js','imports':['/_static/build/_shared/chunk-J2TRKBBH.js','/_static/build/_shared/chunk-QR5N375M.js','/_static/build/_shared/chunk-P3KPC2NU.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.$projectId._index':{'id':'routes/app.$projectId._index','parentId':'routes/app.$projectId','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/app.$projectId._index-RPLOM3TT.js','imports':['/_static/build/_shared/chunk-WJNBSLGA.js','/_static/build/_shared/chunk-VAR52CAX.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app._index':{'id':'routes/app._index','parentId':'routes/app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/app._index-NUF6RFYR.js','imports':['/_static/build/_shared/chunk-QR5N375M.js','/_static/build/_shared/chunk-P3KPC2NU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.beta':{'id':'routes/app.beta','parentId':'routes/app','path':'beta','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.beta-HIBUTURH.js','imports':['/_static/build/_shared/chunk-WJNBSLGA.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.join':{'id':'routes/app.join','parentId':'routes/app','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.join-5YRDUFWJ.js','imports':['/_static/build/_shared/chunk-QXIV6LU3.js','/_static/build/_shared/chunk-P3KPC2NU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.login':{'id':'routes/app.login','parentId':'routes/app','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.login-QBXX4YGO.js','imports':['/_static/build/_shared/chunk-QXIV6LU3.js','/_static/build/_shared/chunk-P3KPC2NU.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.new':{'id':'routes/app.new','parentId':'routes/app','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/app.new-3YUHGRAM.js','imports':['/_static/build/_shared/chunk-VAR52CAX.js','/_static/build/_shared/chunk-QR5N375M.js','/_static/build/_shared/chunk-P3KPC2NU.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-XAPJXVAM.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s3.getobjecturl':{'id':'routes/s3.getobjecturl','parentId':'root','path':'s3/getobjecturl','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/s3.getobjecturl-NSJHYJKS.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s3.listobjects':{'id':'routes/s3.listobjects','parentId':'root','path':'s3/listobjects','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/s3.listobjects-OTQT5MH4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/s3.putobjecturl':{'id':'routes/s3.putobjecturl','parentId':'root','path':'s3/putobjecturl','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/s3.putobjecturl-N6AQL37V.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/_static/build/manifest-3F330443.js'};"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_node", "import_tiny_invariant", "arc", "getUuidByString", "bcrypt", "invariant", "bcrypt", "invariant", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_tiny_invariant", "import_functions", "arc", "cuid", "AWS", "path", "import_node", "import_aws_sdk", "AWS", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "invariant", "_a", "ReactS3Uploader", "classNames", "loader", "import_node", "import_aws_sdk", "loader", "AWS", "loader", "import_node", "import_aws_sdk", "loader", "AWS", "ProjectPage", "loader", "meta", "import_node", "import_react", "import_tiny_invariant", "import_jsx_dev_runtime", "meta", "loader", "invariant", "ProjectPage", "loader", "import_node", "import_aws_sdk", "CLIPS_S3_BUCKET_NAME", "CLIPS_S3_UPLOAD_PATH", "loader", "AWS", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "action", "deleteProject", "action", "loader", "meta", "import_node", "import_react", "import_react", "route", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "ProjectsPage", "meta", "import_react_s3_uploader", "import_react", "import_react", "import_jsx_dev_runtime", "meta", "ProjectsPage", "ReactS3Uploader", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "meta", "_a", "_b", "_c", "_d", "action", "ProjectsPage", "meta", "import_node", "import_react", "import_classnames", "import_jsx_dev_runtime", "meta", "action", "ProjectsPage", "_a", "_b", "classNames", "loader", "meta", "import_node", "action", "loader", "import_node", "action", "loader", "meta", "import_react", "import_jsx_dev_runtime", "meta", "action", "import_node", "action"]
}
